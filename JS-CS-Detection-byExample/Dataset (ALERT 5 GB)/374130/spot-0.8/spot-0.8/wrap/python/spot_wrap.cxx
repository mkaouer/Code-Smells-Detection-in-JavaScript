/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return an integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char *)name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char *)name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      register int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", name, (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char *str;
#ifdef METH_NOARGS
  PyObject *repr = SwigPyObject_repr(v);
#else
  PyObject *repr = SwigPyObject_repr(v, NULL);
#endif
  if (repr) {
    str = SWIG_Python_str_AsChar(repr); 
    fputs(str, fp);
    SWIG_Python_str_DelForPy3(str);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
SwigPyObject_str(SwigPyObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    SWIG_Python_str_FromChar(result) : 0;
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyObject_print,        /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyObject_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (flags & SWIG_POINTER_IMPLICIT_CONV) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    PyObject_SetAttr(inst, SWIG_This(), swig_this);
    Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
#else
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    if (inst) {
      Py_DECREF(robj);
      robj = inst;
    }
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res;

#ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
#else
  if (!PyString_Check(name))
#endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  res = -1;
  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes that proxy
 * method calls from C++ to Python extensions.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#ifdef __cplusplus

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swift
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/* 
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR
#include <map>

namespace Swig {
  class Director;
  SWIGINTERN std::map<void*,Director*>& get_rtdir_map() {
    static std::map<void*,Director*> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void*,Director*>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void*>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void*>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {  

  /* memory handler */
  struct GCItem 
  {
    virtual ~GCItem() {}

    virtual int get_own() const
    {
      return 0;
    }
  };

  struct GCItem_var
  {
    GCItem_var(GCItem *item = 0) : _item(item)
    {
    }

    GCItem_var& operator=(GCItem *item)
    {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() 
    {
      delete _item;
    }
    
    GCItem * operator->() const
    {
      return _item;
    }
    
  private:
    GCItem *_item;
  };
  
  struct GCItem_Object : GCItem
  {
    GCItem_Object(int own) : _own(own)
    {
    }
    
    virtual ~GCItem_Object() 
    {
    }

    int get_own() const
    {
      return _own;
    }
    
  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem
  {
    GCItem_T(Type *ptr) : _ptr(ptr)
    {
    }
    
    virtual ~GCItem_T() 
    {
      delete _ptr;
    }
    
  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem
  {
    GCArray_T(Type *ptr) : _ptr(ptr)
    {
    }
    
    virtual ~GCArray_T() 
    {
      delete[] _ptr;
    }
    
  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char* hdr ="", const char* msg ="") 
      : swig_msg(hdr)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
      if (strlen(msg)) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, getMessage());
      }
      SWIG_PYTHON_THREAD_END_BLOCK; 
    }

    const char *getMessage() const
    { 
      return swig_msg.c_str(); 
    }

    static void raise(PyObject *error, const char *msg) 
    {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) 
    {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler 
  {
#ifdef SWIG_DIRECTOR_UEH
    static void handler()  {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.getMessage() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }
      
      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;
      
      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will like abort/terminate." << std::endl;
      throw;
    }

  public:
    
    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler)
    {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler()
    {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public Swig::DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char* msg="") 
      : Swig::DirectorException(error, "SWIG director type mismatch", msg)
    {
    }

    DirectorTypeMismatchException(const char* msg="") 
      : Swig::DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg)
    {
    }

    static void raise(PyObject *error, const char *msg)
    {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg)
    {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public Swig::DirectorException {
  public:
    DirectorMethodException(const char* msg = "") 
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg)
    {
    }    

    static void raise(const char *msg)
    {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public Swig::DirectorException
  {
  public:
    DirectorPureVirtualException(const char* msg = "") 
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg)
    { 
    }

    static void raise(const char *msg) 
    {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard
  {
    PyThread_type_lock & mutex_;
    
  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex)
    {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }
    
    ~Guard()
    {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex) 
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject* swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const { 
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
        Py_DECREF(swig_self); 
        SWIG_PYTHON_THREAD_END_BLOCK; 
      }
    }

  public:
    /* wrap a python object, optionally taking ownership */
    Director(PyObject* self) : swig_self(self), swig_disown_flag(false) {
      swig_incref();
    }


    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref(); 
    }


    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const { 
      return swig_self; 
    }

    /* acquire ownership of the wrapped python object (the sense of "disown"
     * is from python) */
    void swig_disown() const { 
      if (!swig_disown_flag) { 
        swig_disown_flag=true;
        swig_incref(); 
      } 
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const { 
      if (swig_disown_flag) {
        Py_INCREF(swig_self); 
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char* /* swig_protected_method_name */) const {
      return true;
    }
    
    virtual void swig_set_inner(const char* /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void*, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr)  const
    {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }
    
    template <typename Type>
    void swig_acquire_ownership(Type *vptr)  const
    {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const
    {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }
    
    int swig_release_ownership(void *vptr) const
    {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject* swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args))
    {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }

  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif /* __cplusplus */


#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_automatop swig_types[0]
#define SWIGTYPE_p_bdd swig_types[1]
#define SWIGTYPE_p_bddPair swig_types[2]
#define SWIGTYPE_p_boost__shared_ptrT_spot__state_const_t swig_types[3]
#define SWIGTYPE_p_cc_map swig_types[4]
#define SWIGTYPE_p_char swig_types[5]
#define SWIGTYPE_p_const_visitor swig_types[6]
#define SWIGTYPE_p_couvreur99_check_status swig_types[7]
#define SWIGTYPE_p_cycle_list swig_types[8]
#define SWIGTYPE_p_environment swig_types[9]
#define SWIGTYPE_p_fixed_size_pool swig_types[10]
#define SWIGTYPE_p_fv_map swig_types[11]
#define SWIGTYPE_p_numbered_state_heap_factory swig_types[12]
#define SWIGTYPE_p_p_char swig_types[13]
#define SWIGTYPE_p_spot__bdd_allocator swig_types[14]
#define SWIGTYPE_p_spot__bdd_dict swig_types[15]
#define SWIGTYPE_p_spot__couvreur99_check swig_types[16]
#define SWIGTYPE_p_spot__couvreur99_check_shy swig_types[17]
#define SWIGTYPE_p_spot__dotty_decorator swig_types[18]
#define SWIGTYPE_p_spot__emptiness_check swig_types[19]
#define SWIGTYPE_p_spot__emptiness_check_instantiator swig_types[20]
#define SWIGTYPE_p_spot__emptiness_check_result swig_types[21]
#define SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code swig_types[22]
#define SWIGTYPE_p_spot__ltl__atomic_prop swig_types[23]
#define SWIGTYPE_p_spot__ltl__atomic_prop_set swig_types[24]
#define SWIGTYPE_p_spot__ltl__binop swig_types[25]
#define SWIGTYPE_p_spot__ltl__const_visitor swig_types[26]
#define SWIGTYPE_p_spot__ltl__constant swig_types[27]
#define SWIGTYPE_p_spot__ltl__default_environment swig_types[28]
#define SWIGTYPE_p_spot__ltl__environment swig_types[29]
#define SWIGTYPE_p_spot__ltl__formula swig_types[30]
#define SWIGTYPE_p_spot__ltl__formula_ptr_hash swig_types[31]
#define SWIGTYPE_p_spot__ltl__formula_ptr_less_than swig_types[32]
#define SWIGTYPE_p_spot__ltl__multop swig_types[33]
#define SWIGTYPE_p_spot__ltl__parse_error_list swig_types[34]
#define SWIGTYPE_p_spot__ltl__ref_formula swig_types[35]
#define SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor swig_types[36]
#define SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor swig_types[37]
#define SWIGTYPE_p_spot__ltl__unop swig_types[38]
#define SWIGTYPE_p_spot__ltl__visitor swig_types[39]
#define SWIGTYPE_p_spot__minato_isop swig_types[40]
#define SWIGTYPE_p_spot__option_map swig_types[41]
#define SWIGTYPE_p_spot__state swig_types[42]
#define SWIGTYPE_p_spot__state_bdd swig_types[43]
#define SWIGTYPE_p_spot__state_explicit swig_types[44]
#define SWIGTYPE_p_spot__state_explicit__transition swig_types[45]
#define SWIGTYPE_p_spot__state_product swig_types[46]
#define SWIGTYPE_p_spot__state_ptr_equal swig_types[47]
#define SWIGTYPE_p_spot__state_ptr_hash swig_types[48]
#define SWIGTYPE_p_spot__state_ptr_less_than swig_types[49]
#define SWIGTYPE_p_spot__state_set swig_types[50]
#define SWIGTYPE_p_spot__state_shared_ptr_equal swig_types[51]
#define SWIGTYPE_p_spot__state_shared_ptr_hash swig_types[52]
#define SWIGTYPE_p_spot__state_shared_ptr_less_than swig_types[53]
#define SWIGTYPE_p_spot__taa_succ_iterator swig_types[54]
#define SWIGTYPE_p_spot__taa_tgba swig_types[55]
#define SWIGTYPE_p_spot__taa_tgba__transition swig_types[56]
#define SWIGTYPE_p_spot__taa_tgba_formula swig_types[57]
#define SWIGTYPE_p_spot__taa_tgba_string swig_types[58]
#define SWIGTYPE_p_spot__tgba swig_types[59]
#define SWIGTYPE_p_spot__tgba_bdd_concrete swig_types[60]
#define SWIGTYPE_p_spot__tgba_bdd_core_data swig_types[61]
#define SWIGTYPE_p_spot__tgba_explicit swig_types[62]
#define SWIGTYPE_p_spot__tgba_explicit_formula swig_types[63]
#define SWIGTYPE_p_spot__tgba_explicit_number swig_types[64]
#define SWIGTYPE_p_spot__tgba_explicit_string swig_types[65]
#define SWIGTYPE_p_spot__tgba_explicit_succ_iterator swig_types[66]
#define SWIGTYPE_p_spot__tgba_product swig_types[67]
#define SWIGTYPE_p_spot__tgba_product_init swig_types[68]
#define SWIGTYPE_p_spot__tgba_run swig_types[69]
#define SWIGTYPE_p_spot__tgba_run_dotty_decorator swig_types[70]
#define SWIGTYPE_p_spot__tgba_sba_proxy swig_types[71]
#define SWIGTYPE_p_spot__tgba_statistics swig_types[72]
#define SWIGTYPE_p_spot__tgba_sub_statistics swig_types[73]
#define SWIGTYPE_p_spot__tgba_succ_iterator swig_types[74]
#define SWIGTYPE_p_spot__tgba_succ_iterator_concrete swig_types[75]
#define SWIGTYPE_p_spot__tgba_tba_proxy swig_types[76]
#define SWIGTYPE_p_state swig_types[77]
#define SWIGTYPE_p_state_set swig_types[78]
#define SWIGTYPE_p_std__invalid_argument swig_types[79]
#define SWIGTYPE_p_std__listT_spot__step_std__allocatorT_spot__step_t_t swig_types[80]
#define SWIGTYPE_p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t swig_types[81]
#define SWIGTYPE_p_std__mapT_int_int_t swig_types[82]
#define SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t swig_types[83]
#define SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t swig_types[84]
#define SWIGTYPE_p_std__ofstream swig_types[85]
#define SWIGTYPE_p_std__ostream swig_types[86]
#define SWIGTYPE_p_std__ostringstream swig_types[87]
#define SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t swig_types[88]
#define SWIGTYPE_p_std__vectorT_spot__ltl__formula_p_t swig_types[89]
#define SWIGTYPE_p_steps swig_types[90]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[91]
#define SWIGTYPE_p_tgba_bdd_factory swig_types[92]
#define SWIGTYPE_p_transition swig_types[93]
#define SWIGTYPE_p_transitions_t swig_types[94]
#define SWIGTYPE_p_unsigned_statistics swig_types[95]
#define SWIGTYPE_p_vec swig_types[96]
#define SWIGTYPE_p_vf_map swig_types[97]
#define SWIGTYPE_p_visitor swig_types[98]
#define SWIGTYPE_p_void swig_types[99]
static swig_type_info *swig_types[101];
static swig_module_info swig_module = {swig_types, 100, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _spot.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__spot

#else
#  define SWIG_init    init_spot

#endif
#define SWIG_name    "_spot"

#define SWIGVERSION 0x020004 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


  // Workaround for SWIG 2.0.2 using ptrdiff_t but not including cstddef.
  // It matters with g++ 4.6.
#include <cstddef>


#include <string>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>
#include <stdexcept>
#include <stddef.h>

  
namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <stdexcept>


#include <algorithm>


#include <list>


#include <iostream>
#include <fstream>
#include <sstream>
#include <signal.h>

#include "misc/version.hh"
#include "misc/bddalloc.hh"
#include "misc/minato.hh"
#include "misc/modgray.hh"
#include "misc/optionmap.hh"
#include "misc/random.hh"

#include "ltlast/formula.hh"
#include "ltlast/refformula.hh"
#include "ltlast/atomic_prop.hh"
#include "ltlast/binop.hh"
#include "ltlast/constant.hh"
#include "ltlast/multop.hh"
#include "ltlast/unop.hh"
#include "ltlast/visitor.hh"

#include "ltlenv/environment.hh"
#include "ltlenv/defaultenv.hh"

#include "ltlparse/public.hh"

#include "ltlvisit/dotty.hh"
#include "ltlvisit/dump.hh"
#include "ltlvisit/lunabbrev.hh"
#include "ltlvisit/nenoform.hh"
#include "ltlvisit/reduce.hh"
#include "ltlvisit/tostring.hh"
#include "ltlvisit/tunabbrev.hh"

#include "tgba/bdddict.hh"
#include "tgba/bddprint.hh"
#include "tgba/state.hh"
#include "tgba/succiter.hh"
#include "tgba/tgba.hh"
#include "tgba/statebdd.hh"
#include "tgba/taatgba.hh"
#include "tgba/tgbabddcoredata.hh"
#include "tgba/succiterconcrete.hh"
#include "tgba/tgbabddconcrete.hh"
#include "tgba/tgbaexplicit.hh"
#include "tgba/tgbaproduct.hh"
#include "tgba/tgbatba.hh"

#include "tgbaalgos/dottydec.hh"
#include "tgbaalgos/dotty.hh"
#include "tgbaalgos/dupexp.hh"
#include "tgbaalgos/emptiness.hh"
#include "tgbaalgos/gtec/gtec.hh"
#include "tgbaalgos/lbtt.hh"
#include "tgbaalgos/ltl2taa.hh"
#include "tgbaalgos/ltl2tgba_fm.hh"
#include "tgbaalgos/ltl2tgba_lacim.hh"
#include "tgbaalgos/magic.hh"
#include "tgbaalgos/minimize.hh"
#include "tgbaalgos/neverclaim.hh"
#include "tgbaalgos/reductgba_sim.hh"
#include "tgbaalgos/rundotdec.hh"
#include "tgbaalgos/save.hh"
#include "tgbaalgos/sccfilter.hh"
#include "tgbaalgos/stats.hh"

using namespace spot::ltl;
using namespace spot;


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}

SWIGINTERN int spot_ltl_formula___cmp__(spot::ltl::formula *self,spot::ltl::formula const *b){
    return b - self;
  }
SWIGINTERN std::string spot_ltl_formula___str__(spot::ltl::formula *self){
    return spot::ltl::to_string(self);
  }

SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}

SWIGINTERN bool spot_ltl_parse_error_list___nonzero__(spot::ltl::parse_error_list *self){
  return !self->empty();
}

#define t_output_helper SWIG_Python_AppendOutput



// A variant of minimize_obligation() that always return a new object.
const spot::tgba*
minimize_obligation_new(const spot::tgba* a, const spot::ltl::formula* f)
{
  const tgba* res = spot::minimize_obligation(a, f);
  // Return 0 if the output is the same as the input, otherwise
  // it is hard for swig to know if the output is "new" or not.
  if (res == a)
    return 0;
  else
    return res;
}

spot::ltl::parse_error_list
empty_parse_error_list()
{
  parse_error_list l;
  return l;
}

std::ostream&
get_cout()
{
  return std::cout;
}

std::ostream&
get_cerr()
{
  return std::cerr;
}

void
print_on(std::ostream& on, const std::string& what)
{
  on << what;
}

int
unblock_signal(int signum)
{
  sigset_t set;
  sigemptyset(&set);
  sigaddset(&set, signum);
  return sigprocmask(SIG_UNBLOCK, &set, 0);
}




/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "spot_wrap.h"

SwigDirector_loopless_modular_mixed_radix_gray_code::SwigDirector_loopless_modular_mixed_radix_gray_code(PyObject *self, int n): spot::loopless_modular_mixed_radix_gray_code(n), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((spot::loopless_modular_mixed_radix_gray_code *)this, this); 
}




SwigDirector_loopless_modular_mixed_radix_gray_code::~SwigDirector_loopless_modular_mixed_radix_gray_code() {
}

void SwigDirector_loopless_modular_mixed_radix_gray_code::a_first(int j) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_From_int(static_cast< int >(j));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call loopless_modular_mixed_radix_gray_code.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "a_first";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"a_first", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'loopless_modular_mixed_radix_gray_code.a_first'");
    }
  }
}


void SwigDirector_loopless_modular_mixed_radix_gray_code::a_next(int j) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_From_int(static_cast< int >(j));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call loopless_modular_mixed_radix_gray_code.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "a_next";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"a_next", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'loopless_modular_mixed_radix_gray_code.a_next'");
    }
  }
}


bool SwigDirector_loopless_modular_mixed_radix_gray_code::a_last(int j) const {
  bool c_result;
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_From_int(static_cast< int >(j));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call loopless_modular_mixed_radix_gray_code.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "a_last";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"a_last", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    if (error) {
      Swig::DirectorMethodException::raise("Error detected when calling 'loopless_modular_mixed_radix_gray_code.a_last'");
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_version(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":version")) SWIG_fail;
  result = (char *)spot::version();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bdd_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_allocator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_bdd_allocator")) SWIG_fail;
  result = (spot::bdd_allocator *)new spot::bdd_allocator();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_allocator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_allocator_initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":bdd_allocator_initialize")) SWIG_fail;
  spot::bdd_allocator::initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_allocator_allocate_variables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_allocator *arg1 = (spot::bdd_allocator *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_allocator_allocate_variables",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_allocator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_allocator_allocate_variables" "', argument " "1"" of type '" "spot::bdd_allocator *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_allocator * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bdd_allocator_allocate_variables" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)(arg1)->allocate_variables(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_allocator_release_variables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_allocator *arg1 = (spot::bdd_allocator *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_allocator_release_variables",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_allocator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_allocator_release_variables" "', argument " "1"" of type '" "spot::bdd_allocator *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_allocator * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bdd_allocator_release_variables" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "bdd_allocator_release_variables" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->release_variables(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_bdd_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_allocator *arg1 = (spot::bdd_allocator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_bdd_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_allocator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bdd_allocator" "', argument " "1"" of type '" "spot::bdd_allocator *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_allocator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *bdd_allocator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__bdd_allocator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_minato_isop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bdd arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::minato_isop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_minato_isop",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_minato_isop" "', argument " "1"" of type '" "bdd""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_minato_isop" "', argument " "1"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (spot::minato_isop *)new spot::minato_isop(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__minato_isop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_minato_isop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bdd arg1 ;
  bdd arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::minato_isop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_minato_isop",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_minato_isop" "', argument " "1"" of type '" "bdd""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_minato_isop" "', argument " "1"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_minato_isop" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_minato_isop" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::minato_isop *)new spot::minato_isop(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__minato_isop, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_minato_isop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_bdd, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_minato_isop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_bdd, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_bdd, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_minato_isop__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_minato_isop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::minato_isop::minato_isop(bdd)\n"
    "    spot::minato_isop::minato_isop(bdd,bdd)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_minato_isop_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::minato_isop *arg1 = (spot::minato_isop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:minato_isop_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__minato_isop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minato_isop_next" "', argument " "1"" of type '" "spot::minato_isop *""'"); 
  }
  arg1 = reinterpret_cast< spot::minato_isop * >(argp1);
  result = (arg1)->next();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_minato_isop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::minato_isop *arg1 = (spot::minato_isop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_minato_isop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__minato_isop, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_minato_isop" "', argument " "1"" of type '" "spot::minato_isop *""'"); 
  }
  arg1 = reinterpret_cast< spot::minato_isop * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *minato_isop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__minato_isop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_option_map_parse_options(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:option_map_parse_options",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "option_map_parse_options" "', argument " "1"" of type '" "spot::option_map *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "option_map_parse_options" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->parse_options((char const *)arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_option_map_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:option_map_get",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "option_map_get" "', argument " "1"" of type '" "spot::option_map const *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "option_map_get" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "option_map_get" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)((spot::option_map const *)arg1)->get((char const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_option_map_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:option_map_get",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "option_map_get" "', argument " "1"" of type '" "spot::option_map const *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "option_map_get" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)((spot::option_map const *)arg1)->get((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_option_map_get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__option_map, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_option_map_get__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__option_map, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_option_map_get__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'option_map_get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::option_map::get(char const *,int) const\n"
    "    spot::option_map::get(char const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_option_map_set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:option_map_set",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "option_map_set" "', argument " "1"" of type '" "spot::option_map *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "option_map_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "option_map_set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "option_map_set" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)(arg1)->set((char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_option_map_set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:option_map_set",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "option_map_set" "', argument " "1"" of type '" "spot::option_map *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "option_map_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "option_map_set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)(arg1)->set((char const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_option_map_set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  spot::option_map *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:option_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "option_map_set" "', argument " "1"" of type '" "spot::option_map *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "option_map_set" "', argument " "2"" of type '" "spot::option_map const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "option_map_set" "', argument " "2"" of type '" "spot::option_map const &""'"); 
  }
  arg2 = reinterpret_cast< spot::option_map * >(argp2);
  (arg1)->set((spot::option_map const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_option_map_set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__option_map, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_option_map_set__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__option_map, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_option_map_set__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__option_map, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_option_map_set__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'option_map_set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::option_map::set(char const *,int,int)\n"
    "    spot::option_map::set(char const *,int)\n"
    "    spot::option_map::set(spot::option_map const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_option_map(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_option_map")) SWIG_fail;
  result = (spot::option_map *)new spot::option_map();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__option_map, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_option_map(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::option_map *arg1 = (spot::option_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_option_map",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__option_map, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_option_map" "', argument " "1"" of type '" "spot::option_map *""'"); 
  }
  arg1 = reinterpret_cast< spot::option_map * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *option_map_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__option_map, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_srand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:srand",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "srand" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  spot::srand(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rrand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rrand",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "rrand" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "rrand" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)spot::rrand(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mrand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:mrand",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mrand" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)spot::mrand(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_drand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)":drand")) SWIG_fail;
  result = (double)spot::drand();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_nrand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)":nrand")) SWIG_fail;
  result = (double)spot::nrand();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bmrand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)":bmrand")) SWIG_fail;
  result = (double)spot::bmrand();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_prand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:prand",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "prand" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (int)spot::prand(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_loopless_modular_mixed_radix_gray_code(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  int arg2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::loopless_modular_mixed_radix_gray_code *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_loopless_modular_mixed_radix_gray_code",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_loopless_modular_mixed_radix_gray_code" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (spot::loopless_modular_mixed_radix_gray_code *)new SwigDirector_loopless_modular_mixed_radix_gray_code(arg1,arg2); 
  } else {
    SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
    SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_loopless_modular_mixed_radix_gray_code(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_loopless_modular_mixed_radix_gray_code",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_loopless_modular_mixed_radix_gray_code" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_a_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:loopless_modular_mixed_radix_gray_code_a_first",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_a_first" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "loopless_modular_mixed_radix_gray_code_a_first" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      Swig::DirectorPureVirtualException::raise("spot::loopless_modular_mixed_radix_gray_code::a_first");
    } else {
      (arg1)->a_first(arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_a_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:loopless_modular_mixed_radix_gray_code_a_next",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_a_next" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "loopless_modular_mixed_radix_gray_code_a_next" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      Swig::DirectorPureVirtualException::raise("spot::loopless_modular_mixed_radix_gray_code::a_next");
    } else {
      (arg1)->a_next(arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_a_last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:loopless_modular_mixed_radix_gray_code_a_last",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_a_last" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code const *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "loopless_modular_mixed_radix_gray_code_a_last" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      Swig::DirectorPureVirtualException::raise("spot::loopless_modular_mixed_radix_gray_code::a_last");
    } else {
      result = (bool)((spot::loopless_modular_mixed_radix_gray_code const *)arg1)->a_last(arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:loopless_modular_mixed_radix_gray_code_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_first" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  (arg1)->first();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:loopless_modular_mixed_radix_gray_code_last",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_last" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code const *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  result = (bool)((spot::loopless_modular_mixed_radix_gray_code const *)arg1)->last();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:loopless_modular_mixed_radix_gray_code_done",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_done" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code const *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  result = (bool)((spot::loopless_modular_mixed_radix_gray_code const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loopless_modular_mixed_radix_gray_code_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:loopless_modular_mixed_radix_gray_code_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "loopless_modular_mixed_radix_gray_code_next" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  result = (int)(arg1)->next();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_loopless_modular_mixed_radix_gray_code(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::loopless_modular_mixed_radix_gray_code *arg1 = (spot::loopless_modular_mixed_radix_gray_code *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_loopless_modular_mixed_radix_gray_code",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_loopless_modular_mixed_radix_gray_code" "', argument " "1"" of type '" "spot::loopless_modular_mixed_radix_gray_code *""'"); 
  }
  arg1 = reinterpret_cast< spot::loopless_modular_mixed_radix_gray_code * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *loopless_modular_mixed_radix_gray_code_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__loopless_modular_mixed_radix_gray_code, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_formula_accept__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:formula_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_accept" "', argument " "1"" of type '" "spot::ltl::formula *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "formula_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "formula_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  arg2 = reinterpret_cast< visitor * >(argp2);
  (arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula_accept__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  const_visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:formula_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_accept" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_const_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "formula_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "formula_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  arg2 = reinterpret_cast< const_visitor * >(argp2);
  ((spot::ltl::formula const *)arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula_accept(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_formula_accept__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_const_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_formula_accept__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'formula_accept'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::formula::accept(visitor &)\n"
    "    spot::ltl::formula::accept(const_visitor &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_formula_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:formula_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_clone" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (spot::ltl::formula *)((spot::ltl::formula const *)arg1)->clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula_destroy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:formula_destroy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_destroy" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  ((spot::ltl::formula const *)arg1)->destroy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:formula_dump",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_dump" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = ((spot::ltl::formula const *)arg1)->dump();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:formula_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_hash" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = ((spot::ltl::formula const *)arg1)->hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula___cmp__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:formula___cmp__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula___cmp__" "', argument " "1"" of type '" "spot::ltl::formula *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "formula___cmp__" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (int)spot_ltl_formula___cmp__(arg1,(spot::ltl::formula const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_formula___str__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:formula___str__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula___str__" "', argument " "1"" of type '" "spot::ltl::formula *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = spot_ltl_formula___str__(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *formula_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__formula, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_formula_ptr_less_than___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula_ptr_less_than *arg1 = (spot::ltl::formula_ptr_less_than *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:formula_ptr_less_than___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula_ptr_less_than, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_ptr_less_than___call__" "', argument " "1"" of type '" "spot::ltl::formula_ptr_less_than const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula_ptr_less_than * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "formula_ptr_less_than___call__" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "formula_ptr_less_than___call__" "', argument " "3"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  result = (bool)((spot::ltl::formula_ptr_less_than const *)arg1)->operator ()((spot::ltl::formula const *)arg2,(spot::ltl::formula const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_formula_ptr_less_than(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula_ptr_less_than *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_formula_ptr_less_than")) SWIG_fail;
  result = (spot::ltl::formula_ptr_less_than *)new spot::ltl::formula_ptr_less_than();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula_ptr_less_than, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_formula_ptr_less_than(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula_ptr_less_than *arg1 = (spot::ltl::formula_ptr_less_than *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_formula_ptr_less_than",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula_ptr_less_than, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_formula_ptr_less_than" "', argument " "1"" of type '" "spot::ltl::formula_ptr_less_than *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula_ptr_less_than * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *formula_ptr_less_than_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__formula_ptr_less_than, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_formula_ptr_hash___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula_ptr_hash *arg1 = (spot::ltl::formula_ptr_hash *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:formula_ptr_hash___call__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula_ptr_hash, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "formula_ptr_hash___call__" "', argument " "1"" of type '" "spot::ltl::formula_ptr_hash const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula_ptr_hash * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "formula_ptr_hash___call__" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = ((spot::ltl::formula_ptr_hash const *)arg1)->operator ()((spot::ltl::formula const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_formula_ptr_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula_ptr_hash *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_formula_ptr_hash")) SWIG_fail;
  result = (spot::ltl::formula_ptr_hash *)new spot::ltl::formula_ptr_hash();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula_ptr_hash, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_formula_ptr_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula_ptr_hash *arg1 = (spot::ltl::formula_ptr_hash *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_formula_ptr_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula_ptr_hash, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_formula_ptr_hash" "', argument " "1"" of type '" "spot::ltl::formula_ptr_hash *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula_ptr_hash * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *formula_ptr_hash_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__formula_ptr_hash, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ref_formula_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__ref_formula, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_atomic_prop_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  environment *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::atomic_prop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:atomic_prop_instance",&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_instance" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "atomic_prop_instance" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_environment,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "atomic_prop_instance" "', argument " "2"" of type '" "environment &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "atomic_prop_instance" "', argument " "2"" of type '" "environment &""'"); 
  }
  arg2 = reinterpret_cast< environment * >(argp2);
  result = (spot::ltl::atomic_prop *)spot::ltl::atomic_prop::instance((std::string const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_accept__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
  visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:atomic_prop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_accept" "', argument " "1"" of type '" "spot::ltl::atomic_prop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::atomic_prop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "atomic_prop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "atomic_prop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  arg2 = reinterpret_cast< visitor * >(argp2);
  (arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_accept__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
  const_visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:atomic_prop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_accept" "', argument " "1"" of type '" "spot::ltl::atomic_prop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::atomic_prop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_const_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "atomic_prop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "atomic_prop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  arg2 = reinterpret_cast< const_visitor * >(argp2);
  ((spot::ltl::atomic_prop const *)arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_accept(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_atomic_prop_accept__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_const_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_atomic_prop_accept__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'atomic_prop_accept'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::atomic_prop::accept(visitor &)\n"
    "    spot::ltl::atomic_prop::accept(const_visitor &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_atomic_prop_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:atomic_prop_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_name" "', argument " "1"" of type '" "spot::ltl::atomic_prop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::atomic_prop * >(argp1);
  result = (std::string *) &((spot::ltl::atomic_prop const *)arg1)->name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_env(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  environment *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:atomic_prop_env",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_env" "', argument " "1"" of type '" "spot::ltl::atomic_prop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::atomic_prop * >(argp1);
  result = (environment *) &((spot::ltl::atomic_prop const *)arg1)->env();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_environment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:atomic_prop_dump",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_dump" "', argument " "1"" of type '" "spot::ltl::atomic_prop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::atomic_prop * >(argp1);
  result = ((spot::ltl::atomic_prop const *)arg1)->dump();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_instance_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)":atomic_prop_instance_count")) SWIG_fail;
  result = (unsigned int)spot::ltl::atomic_prop::instance_count();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_atomic_prop_dump_instances(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:atomic_prop_dump_instances",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "atomic_prop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "atomic_prop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  result = (std::ostream *) &spot::ltl::atomic_prop::dump_instances(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *atomic_prop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__atomic_prop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_binop_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop::type arg1 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::ltl::binop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:binop_instance",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "binop_instance" "', argument " "1"" of type '" "spot::ltl::binop::type""'");
  } 
  arg1 = static_cast< spot::ltl::binop::type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "binop_instance" "', argument " "2"" of type '" "spot::ltl::formula *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "binop_instance" "', argument " "3"" of type '" "spot::ltl::formula *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  result = (spot::ltl::binop *)spot::ltl::binop::instance(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_accept__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:binop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_accept" "', argument " "1"" of type '" "spot::ltl::binop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "binop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "binop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  arg2 = reinterpret_cast< visitor * >(argp2);
  (arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_accept__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  const_visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:binop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_accept" "', argument " "1"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_const_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "binop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "binop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  arg2 = reinterpret_cast< const_visitor * >(argp2);
  ((spot::ltl::binop const *)arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_accept(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_binop_accept__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_const_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_binop_accept__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'binop_accept'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::binop::accept(visitor &)\n"
    "    spot::ltl::binop::accept(const_visitor &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_binop_first__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_first" "', argument " "1"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = (spot::ltl::formula *)((spot::ltl::binop const *)arg1)->first();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_first__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_first" "', argument " "1"" of type '" "spot::ltl::binop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = (spot::ltl::formula *)(arg1)->first();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_first(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_binop_first__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_binop_first__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'binop_first'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::binop::first() const\n"
    "    spot::ltl::binop::first()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_binop_second__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_second",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_second" "', argument " "1"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = (spot::ltl::formula *)((spot::ltl::binop const *)arg1)->second();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_second__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_second",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_second" "', argument " "1"" of type '" "spot::ltl::binop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = (spot::ltl::formula *)(arg1)->second();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_second(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_binop_second__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_binop_second__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'binop_second'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::binop::second() const\n"
    "    spot::ltl::binop::second()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_binop_op(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::binop::type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_op",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_op" "', argument " "1"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = (spot::ltl::binop::type)((spot::ltl::binop const *)arg1)->op();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_op_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_op_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_op_name" "', argument " "1"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = (char *)((spot::ltl::binop const *)arg1)->op_name();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_dump",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_dump" "', argument " "1"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::binop * >(argp1);
  result = ((spot::ltl::binop const *)arg1)->dump();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_instance_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)":binop_instance_count")) SWIG_fail;
  result = (unsigned int)spot::ltl::binop::instance_count();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binop_dump_instances(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binop_dump_instances",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "binop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "binop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  result = (std::ostream *) &spot::ltl::binop::dump_instances(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *binop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__binop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_constant_accept__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
  visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:constant_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "constant_accept" "', argument " "1"" of type '" "spot::ltl::constant *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::constant * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "constant_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "constant_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  arg2 = reinterpret_cast< visitor * >(argp2);
  (arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_constant_accept__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
  const_visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:constant_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "constant_accept" "', argument " "1"" of type '" "spot::ltl::constant const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::constant * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_const_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "constant_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "constant_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  arg2 = reinterpret_cast< const_visitor * >(argp2);
  ((spot::ltl::constant const *)arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_constant_accept(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__constant, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_constant_accept__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__constant, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_const_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_constant_accept__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'constant_accept'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::constant::accept(visitor &)\n"
    "    spot::ltl::constant::accept(const_visitor &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_constant_val(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::constant::type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:constant_val",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "constant_val" "', argument " "1"" of type '" "spot::ltl::constant const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::constant * >(argp1);
  result = (spot::ltl::constant::type)((spot::ltl::constant const *)arg1)->val();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_constant_val_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:constant_val_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "constant_val_name" "', argument " "1"" of type '" "spot::ltl::constant const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::constant * >(argp1);
  result = (char *)((spot::ltl::constant const *)arg1)->val_name();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_constant_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:constant_dump",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "constant_dump" "', argument " "1"" of type '" "spot::ltl::constant const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::constant * >(argp1);
  result = ((spot::ltl::constant const *)arg1)->dump();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_constant_true_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":constant_true_instance")) SWIG_fail;
  result = (spot::ltl::constant *)spot::ltl::constant::true_instance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_constant_false_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::constant *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":constant_false_instance")) SWIG_fail;
  result = (spot::ltl::constant *)spot::ltl::constant::false_instance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *constant_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__constant, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multop_instance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop::type arg1 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:multop_instance",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "multop_instance" "', argument " "1"" of type '" "spot::ltl::multop::type""'");
  } 
  arg1 = static_cast< spot::ltl::multop::type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "multop_instance" "', argument " "2"" of type '" "spot::ltl::formula *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "multop_instance" "', argument " "3"" of type '" "spot::ltl::formula *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  result = (spot::ltl::formula *)spot::ltl::multop::instance(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_instance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop::type arg1 ;
  spot::ltl::multop::vec *arg2 = (spot::ltl::multop::vec *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:multop_instance",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "multop_instance" "', argument " "1"" of type '" "spot::ltl::multop::type""'");
  } 
  arg1 = static_cast< spot::ltl::multop::type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_spot__ltl__formula_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "multop_instance" "', argument " "2"" of type '" "spot::ltl::multop::vec *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::multop::vec * >(argp2);
  result = (spot::ltl::formula *)spot::ltl::multop::instance(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_instance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__vectorT_spot__ltl__formula_p_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_multop_instance__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_multop_instance__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'multop_instance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::multop::instance(spot::ltl::multop::type,spot::ltl::formula *,spot::ltl::formula *)\n"
    "    spot::ltl::multop::instance(spot::ltl::multop::type,spot::ltl::multop::vec *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_multop_accept__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:multop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_accept" "', argument " "1"" of type '" "spot::ltl::multop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "multop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  arg2 = reinterpret_cast< visitor * >(argp2);
  (arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_accept__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  const_visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:multop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_accept" "', argument " "1"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_const_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "multop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  arg2 = reinterpret_cast< const_visitor * >(argp2);
  ((spot::ltl::multop const *)arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_accept(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__multop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_multop_accept__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__multop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_const_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_multop_accept__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'multop_accept'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::multop::accept(visitor &)\n"
    "    spot::ltl::multop::accept(const_visitor &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_multop_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:multop_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_size" "', argument " "1"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  result = (unsigned int)((spot::ltl::multop const *)arg1)->size();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_nth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:multop_nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_nth" "', argument " "1"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "multop_nth" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (spot::ltl::formula *)((spot::ltl::multop const *)arg1)->nth(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_nth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:multop_nth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_nth" "', argument " "1"" of type '" "spot::ltl::multop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "multop_nth" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (spot::ltl::formula *)(arg1)->nth(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_nth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__multop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_multop_nth__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__multop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_multop_nth__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'multop_nth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::multop::nth(unsigned int) const\n"
    "    spot::ltl::multop::nth(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_multop_op(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::multop::type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:multop_op",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_op" "', argument " "1"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  result = (spot::ltl::multop::type)((spot::ltl::multop const *)arg1)->op();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_op_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:multop_op_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_op_name" "', argument " "1"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  result = (char *)((spot::ltl::multop const *)arg1)->op_name();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:multop_dump",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_dump" "', argument " "1"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::multop * >(argp1);
  result = ((spot::ltl::multop const *)arg1)->dump();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_instance_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)":multop_instance_count")) SWIG_fail;
  result = (unsigned int)spot::ltl::multop::instance_count();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multop_dump_instances(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:multop_dump_instances",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  result = (std::ostream *) &spot::ltl::multop::dump_instances(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *multop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__multop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unop_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop::type arg1 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::unop *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unop_instance",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unop_instance" "', argument " "1"" of type '" "spot::ltl::unop::type""'");
  } 
  arg1 = static_cast< spot::ltl::unop::type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unop_instance" "', argument " "2"" of type '" "spot::ltl::formula *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (spot::ltl::unop *)spot::ltl::unop::instance(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_accept__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_accept" "', argument " "1"" of type '" "spot::ltl::unop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "unop_accept" "', argument " "2"" of type '" "visitor &""'"); 
  }
  arg2 = reinterpret_cast< visitor * >(argp2);
  (arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_accept__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  const_visitor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unop_accept",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_accept" "', argument " "1"" of type '" "spot::ltl::unop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_const_visitor,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "unop_accept" "', argument " "2"" of type '" "const_visitor &""'"); 
  }
  arg2 = reinterpret_cast< const_visitor * >(argp2);
  ((spot::ltl::unop const *)arg1)->accept(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_accept(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_unop_accept__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_const_visitor, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_unop_accept__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'unop_accept'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::unop::accept(visitor &)\n"
    "    spot::ltl::unop::accept(const_visitor &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_unop_child__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unop_child",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_child" "', argument " "1"" of type '" "spot::ltl::unop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  result = (spot::ltl::formula *)((spot::ltl::unop const *)arg1)->child();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_child__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unop_child",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_child" "', argument " "1"" of type '" "spot::ltl::unop *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  result = (spot::ltl::formula *)(arg1)->child();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_child(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_unop_child__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_unop_child__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'unop_child'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::unop::child() const\n"
    "    spot::ltl::unop::child()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_unop_op(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::unop::type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unop_op",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_op" "', argument " "1"" of type '" "spot::ltl::unop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  result = (spot::ltl::unop::type)((spot::ltl::unop const *)arg1)->op();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_op_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unop_op_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_op_name" "', argument " "1"" of type '" "spot::ltl::unop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  result = (char *)((spot::ltl::unop const *)arg1)->op_name();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unop_dump",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_dump" "', argument " "1"" of type '" "spot::ltl::unop const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unop * >(argp1);
  result = ((spot::ltl::unop const *)arg1)->dump();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_instance_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)":unop_instance_count")) SWIG_fail;
  result = (unsigned int)spot::ltl::unop::instance_count();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unop_dump_instances(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unop_dump_instances",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "unop_dump_instances" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  result = (std::ostream *) &spot::ltl::unop::dump_instances(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *unop_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__unop, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_visitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_visitor" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  spot::ltl::atomic_prop *arg2 = (spot::ltl::atomic_prop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "visitor_visit" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "visitor_visit" "', argument " "2"" of type '" "spot::ltl::atomic_prop *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::atomic_prop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  spot::ltl::constant *arg2 = (spot::ltl::constant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "visitor_visit" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "visitor_visit" "', argument " "2"" of type '" "spot::ltl::constant *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::constant * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "visitor_visit" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "visitor_visit" "', argument " "2"" of type '" "spot::ltl::binop *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::binop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "visitor_visit" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "visitor_visit" "', argument " "2"" of type '" "spot::ltl::unop *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::unop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  spot::ltl::multop *arg2 = (spot::ltl::multop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "visitor_visit" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "visitor_visit" "', argument " "2"" of type '" "spot::ltl::multop *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::multop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
  automatop *arg2 = (automatop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "visitor_visit" "', argument " "1"" of type '" "spot::ltl::visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_automatop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "visitor_visit" "', argument " "2"" of type '" "automatop *""'"); 
  }
  arg2 = reinterpret_cast< automatop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visitor_visit(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_visitor_visit__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__constant, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_visitor_visit__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_visitor_visit__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_visitor_visit__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__multop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_visitor_visit__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_automatop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_visitor_visit__SWIG_5(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'visitor_visit'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::visitor::visit(spot::ltl::atomic_prop *)\n"
    "    spot::ltl::visitor::visit(spot::ltl::constant *)\n"
    "    spot::ltl::visitor::visit(spot::ltl::binop *)\n"
    "    spot::ltl::visitor::visit(spot::ltl::unop *)\n"
    "    spot::ltl::visitor::visit(spot::ltl::multop *)\n"
    "    spot::ltl::visitor::visit(automatop *)\n");
  return 0;
}


SWIGINTERN PyObject *visitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__visitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_const_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_const_visitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_const_visitor" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  spot::ltl::atomic_prop *arg2 = (spot::ltl::atomic_prop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_visitor_visit" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__atomic_prop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_visitor_visit" "', argument " "2"" of type '" "spot::ltl::atomic_prop const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::atomic_prop * >(argp2);
  (arg1)->visit((spot::ltl::atomic_prop const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  spot::ltl::constant *arg2 = (spot::ltl::constant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_visitor_visit" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__constant, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_visitor_visit" "', argument " "2"" of type '" "spot::ltl::constant const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::constant * >(argp2);
  (arg1)->visit((spot::ltl::constant const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_visitor_visit" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_visitor_visit" "', argument " "2"" of type '" "spot::ltl::binop const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::binop * >(argp2);
  (arg1)->visit((spot::ltl::binop const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_visitor_visit" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_visitor_visit" "', argument " "2"" of type '" "spot::ltl::unop const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::unop * >(argp2);
  (arg1)->visit((spot::ltl::unop const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  spot::ltl::multop *arg2 = (spot::ltl::multop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_visitor_visit" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__multop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_visitor_visit" "', argument " "2"" of type '" "spot::ltl::multop const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::multop * >(argp2);
  (arg1)->visit((spot::ltl::multop const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
  automatop *arg2 = (automatop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__const_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "const_visitor_visit" "', argument " "1"" of type '" "spot::ltl::const_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::const_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_automatop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "const_visitor_visit" "', argument " "2"" of type '" "automatop const *""'"); 
  }
  arg2 = reinterpret_cast< automatop * >(argp2);
  (arg1)->visit((automatop const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_const_visitor_visit(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__const_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_const_visitor_visit__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__const_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__constant, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_const_visitor_visit__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__const_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_const_visitor_visit__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__const_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_const_visitor_visit__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__const_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__multop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_const_visitor_visit__SWIG_4(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__const_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_automatop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_const_visitor_visit__SWIG_5(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'const_visitor_visit'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::const_visitor::visit(spot::ltl::atomic_prop const *)\n"
    "    spot::ltl::const_visitor::visit(spot::ltl::constant const *)\n"
    "    spot::ltl::const_visitor::visit(spot::ltl::binop const *)\n"
    "    spot::ltl::const_visitor::visit(spot::ltl::unop const *)\n"
    "    spot::ltl::const_visitor::visit(spot::ltl::multop const *)\n"
    "    spot::ltl::const_visitor::visit(automatop const *)\n");
  return 0;
}


SWIGINTERN PyObject *const_visitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__const_visitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_environment_require(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::environment *arg1 = (spot::ltl::environment *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:environment_require",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__environment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "environment_require" "', argument " "1"" of type '" "spot::ltl::environment *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::environment * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "environment_require" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "environment_require" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = (spot::ltl::formula *)(arg1)->require((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_environment_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::environment *arg1 = (spot::ltl::environment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:environment_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__environment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "environment_name" "', argument " "1"" of type '" "spot::ltl::environment *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::environment * >(argp1);
  result = (std::string *) &(arg1)->name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_environment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::environment *arg1 = (spot::ltl::environment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_environment",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__environment, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_environment" "', argument " "1"" of type '" "spot::ltl::environment *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::environment * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *environment_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__environment, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_default_environment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::default_environment *arg1 = (spot::ltl::default_environment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_default_environment",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__default_environment, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_default_environment" "', argument " "1"" of type '" "spot::ltl::default_environment *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::default_environment * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_default_environment_require(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::default_environment *arg1 = (spot::ltl::default_environment *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:default_environment_require",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__default_environment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "default_environment_require" "', argument " "1"" of type '" "spot::ltl::default_environment *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::default_environment * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "default_environment_require" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "default_environment_require" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = (spot::ltl::formula *)(arg1)->require((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_default_environment_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::default_environment *arg1 = (spot::ltl::default_environment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:default_environment_name",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__default_environment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "default_environment_name" "', argument " "1"" of type '" "spot::ltl::default_environment *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::default_environment * >(argp1);
  result = (std::string *) &(arg1)->name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_default_environment_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::default_environment *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":default_environment_instance")) SWIG_fail;
  result = (spot::ltl::default_environment *) &spot::ltl::default_environment::instance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__default_environment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *default_environment_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__default_environment, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_parse_error_list___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::parse_error_list *arg1 = (spot::ltl::parse_error_list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:parse_error_list___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__parse_error_list, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parse_error_list___nonzero__" "', argument " "1"" of type '" "spot::ltl::parse_error_list *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::parse_error_list * >(argp1);
  result = (bool)spot_ltl_parse_error_list___nonzero__(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_parse_error_list(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::parse_error_list *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_parse_error_list")) SWIG_fail;
  result = (spot::ltl::parse_error_list *)new spot::ltl::parse_error_list();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__parse_error_list, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_parse_error_list(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::parse_error_list *arg1 = (spot::ltl::parse_error_list *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_parse_error_list",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__parse_error_list, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_parse_error_list" "', argument " "1"" of type '" "spot::ltl::parse_error_list *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::parse_error_list * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *parse_error_list_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__parse_error_list, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_parse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  spot::ltl::parse_error_list *arg2 = 0 ;
  spot::ltl::environment *arg3 = 0 ;
  bool arg4 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:parse",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parse" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__ltl__parse_error_list,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "parse" "', argument " "2"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "2"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::parse_error_list * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_spot__ltl__environment,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "parse" "', argument " "3"" of type '" "spot::ltl::environment &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "3"" of type '" "spot::ltl::environment &""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::environment * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "parse" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (spot::ltl::formula *)spot::ltl::parse((std::string const &)*arg1,*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_parse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  spot::ltl::parse_error_list *arg2 = 0 ;
  spot::ltl::environment *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:parse",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parse" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__ltl__parse_error_list,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "parse" "', argument " "2"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "2"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::parse_error_list * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_spot__ltl__environment,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "parse" "', argument " "3"" of type '" "spot::ltl::environment &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "3"" of type '" "spot::ltl::environment &""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::environment * >(argp3);
  result = (spot::ltl::formula *)spot::ltl::parse((std::string const &)*arg1,*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_parse__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  spot::ltl::parse_error_list *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:parse",&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parse" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__ltl__parse_error_list,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "parse" "', argument " "2"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parse" "', argument " "2"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::parse_error_list * >(argp2);
  result = (spot::ltl::formula *)spot::ltl::parse((std::string const &)*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_parse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__parse_error_list, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_parse__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__parse_error_list, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__ltl__environment, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_parse__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__parse_error_list, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__ltl__environment, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_parse__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'parse'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::parse(std::string const &,spot::ltl::parse_error_list &,spot::ltl::environment &,bool)\n"
    "    spot::ltl::parse(std::string const &,spot::ltl::parse_error_list &,spot::ltl::environment &)\n"
    "    spot::ltl::parse(std::string const &,spot::ltl::parse_error_list &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_format_parse_errors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  std::string *arg2 = 0 ;
  spot::ltl::parse_error_list *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:format_parse_errors",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "format_parse_errors" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "format_parse_errors" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "format_parse_errors" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "format_parse_errors" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_spot__ltl__parse_error_list,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "format_parse_errors" "', argument " "3"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "format_parse_errors" "', argument " "3"" of type '" "spot::ltl::parse_error_list &""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::parse_error_list * >(argp3);
  result = (bool)spot::ltl::format_parse_errors(*arg1,(std::string const &)*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:dotty",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dotty" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dotty" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dotty" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (std::ostream *) &spot::ltl::dotty(*arg1,(spot::ltl::formula const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:dump",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dump" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dump" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dump" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (std::ostream *) &spot::ltl::dump(*arg1,(spot::ltl::formula const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_unabbreviate_logic_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_logic_visitor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_unabbreviate_logic_visitor")) SWIG_fail;
  result = (spot::ltl::unabbreviate_logic_visitor *)new spot::ltl::unabbreviate_logic_visitor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_unabbreviate_logic_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_logic_visitor *arg1 = (spot::ltl::unabbreviate_logic_visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_unabbreviate_logic_visitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_unabbreviate_logic_visitor" "', argument " "1"" of type '" "spot::ltl::unabbreviate_logic_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unabbreviate_logic_visitor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unabbreviate_logic_visitor_visit__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_logic_visitor *arg1 = (spot::ltl::unabbreviate_logic_visitor *) 0 ;
  spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_logic_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unabbreviate_logic_visitor_visit" "', argument " "1"" of type '" "spot::ltl::unabbreviate_logic_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unabbreviate_logic_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__binop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unabbreviate_logic_visitor_visit" "', argument " "2"" of type '" "spot::ltl::binop *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::binop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unabbreviate_logic_visitor_visit(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__binop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_unabbreviate_logic_visitor_visit__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'unabbreviate_logic_visitor_visit'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::unabbreviate_logic_visitor::visit()\n"
    "    spot::ltl::unabbreviate_logic_visitor::visit(spot::ltl::binop *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_unabbreviate_logic_visitor_recurse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_logic_visitor *arg1 = (spot::ltl::unabbreviate_logic_visitor *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_logic_visitor_recurse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unabbreviate_logic_visitor_recurse" "', argument " "1"" of type '" "spot::ltl::unabbreviate_logic_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unabbreviate_logic_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unabbreviate_logic_visitor_recurse" "', argument " "2"" of type '" "spot::ltl::formula *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (spot::ltl::formula *)(arg1)->recurse(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *unabbreviate_logic_visitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unabbreviate_logic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unabbreviate_logic",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unabbreviate_logic" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (spot::ltl::formula *)spot::ltl::unabbreviate_logic((spot::ltl::formula const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_negative_normal_form__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:negative_normal_form",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "negative_normal_form" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "negative_normal_form" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (spot::ltl::formula *)spot::ltl::negative_normal_form((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_negative_normal_form__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:negative_normal_form",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "negative_normal_form" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (spot::ltl::formula *)spot::ltl::negative_normal_form((spot::ltl::formula const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_negative_normal_form(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_negative_normal_form__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_negative_normal_form__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'negative_normal_form'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::negative_normal_form(spot::ltl::formula const *,bool)\n"
    "    spot::ltl::negative_normal_form(spot::ltl::formula const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:reduce",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reduce" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (spot::ltl::formula *)spot::ltl::reduce((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:reduce",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reduce" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (spot::ltl::formula *)spot::ltl::reduce((spot::ltl::formula const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_reduce__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_reduce__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'reduce'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::reduce(spot::ltl::formula const *,int)\n"
    "    spot::ltl::reduce(spot::ltl::formula const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_is_eventual(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:is_eventual",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_eventual" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (bool)spot::ltl::is_eventual((spot::ltl::formula const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_is_universal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:is_universal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "is_universal" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (bool)spot::ltl::is_universal((spot::ltl::formula const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_string__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  std::ostream *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:to_string",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "to_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "to_string" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (std::ostream *) &spot::ltl::to_string((spot::ltl::formula const *)arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_string__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:to_string",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "to_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &spot::ltl::to_string((spot::ltl::formula const *)arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_string__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:to_string",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "to_string" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = spot::ltl::to_string((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_string__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:to_string",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = spot::ltl::to_string((spot::ltl::formula const *)arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_string(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_to_string__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_to_string__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_to_string__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_to_string__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'to_string'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::to_string(spot::ltl::formula const *,std::ostream &,bool)\n"
    "    spot::ltl::to_string(spot::ltl::formula const *,std::ostream &)\n"
    "    spot::ltl::to_string(spot::ltl::formula const *,bool)\n"
    "    spot::ltl::to_string(spot::ltl::formula const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_to_spin_string__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  std::ostream *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:to_spin_string",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_spin_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "to_spin_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to_spin_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "to_spin_string" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (std::ostream *) &spot::ltl::to_spin_string((spot::ltl::formula const *)arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_spin_string__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:to_spin_string",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_spin_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "to_spin_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "to_spin_string" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &spot::ltl::to_spin_string((spot::ltl::formula const *)arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_spin_string__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:to_spin_string",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_spin_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "to_spin_string" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = spot::ltl::to_spin_string((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_spin_string__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:to_spin_string",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "to_spin_string" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = spot::ltl::to_spin_string((spot::ltl::formula const *)arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_to_spin_string(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_to_spin_string__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_to_spin_string__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_to_spin_string__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_to_spin_string__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'to_spin_string'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::to_spin_string(spot::ltl::formula const *,std::ostream &,bool)\n"
    "    spot::ltl::to_spin_string(spot::ltl::formula const *,std::ostream &)\n"
    "    spot::ltl::to_spin_string(spot::ltl::formula const *,bool)\n"
    "    spot::ltl::to_spin_string(spot::ltl::formula const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_unabbreviate_ltl_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_ltl_visitor *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_unabbreviate_ltl_visitor")) SWIG_fail;
  result = (spot::ltl::unabbreviate_ltl_visitor *)new spot::ltl::unabbreviate_ltl_visitor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_unabbreviate_ltl_visitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_ltl_visitor *arg1 = (spot::ltl::unabbreviate_ltl_visitor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_unabbreviate_ltl_visitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_unabbreviate_ltl_visitor" "', argument " "1"" of type '" "spot::ltl::unabbreviate_ltl_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unabbreviate_ltl_visitor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unabbreviate_ltl_visitor_visit__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_ltl_visitor *arg1 = (spot::ltl::unabbreviate_ltl_visitor *) 0 ;
  spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_ltl_visitor_visit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unabbreviate_ltl_visitor_visit" "', argument " "1"" of type '" "spot::ltl::unabbreviate_ltl_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unabbreviate_ltl_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__unop, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unabbreviate_ltl_visitor_visit" "', argument " "2"" of type '" "spot::ltl::unop *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::unop * >(argp2);
  (arg1)->visit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unabbreviate_ltl_visitor_visit(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__unop, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_unabbreviate_ltl_visitor_visit__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'unabbreviate_ltl_visitor_visit'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl::unabbreviate_ltl_visitor::visit()\n"
    "    spot::ltl::unabbreviate_ltl_visitor::visit(spot::ltl::unop *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_unabbreviate_ltl_visitor_recurse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::unabbreviate_ltl_visitor *arg1 = (spot::ltl::unabbreviate_ltl_visitor *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_ltl_visitor_recurse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unabbreviate_ltl_visitor_recurse" "', argument " "1"" of type '" "spot::ltl::unabbreviate_ltl_visitor *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::unabbreviate_ltl_visitor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unabbreviate_ltl_visitor_recurse" "', argument " "2"" of type '" "spot::ltl::formula *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (spot::ltl::formula *)(arg1)->recurse(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *unabbreviate_ltl_visitor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unabbreviate_ltl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::ltl::formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unabbreviate_ltl",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unabbreviate_ltl" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  result = (spot::ltl::formula *)spot::ltl::unabbreviate_ltl((spot::ltl::formula const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_bdd_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_bdd_dict")) SWIG_fail;
  result = (spot::bdd_dict *)new spot::bdd_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_bdd_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_bdd_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_bdd_dict" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_now_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::fv_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_now_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_now_map_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_now_map_set" "', argument " "2"" of type '" "spot::bdd_dict::fv_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_now_map_set" "', argument " "2"" of type '" "spot::bdd_dict::fv_map""'");
    } else {
      spot::bdd_dict::fv_map * temp = reinterpret_cast< spot::bdd_dict::fv_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->now_map = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_now_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::fv_map result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_now_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_now_map_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result =  ((arg1)->now_map);
  resultobj = SWIG_NewPointerObj((new spot::bdd_dict::fv_map(static_cast< const spot::bdd_dict::fv_map& >(result))), SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_now_formula_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::vf_map *arg2 = (spot::bdd_dict::vf_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_now_formula_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_now_formula_map_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_now_formula_map_set" "', argument " "2"" of type '" "spot::bdd_dict::vf_map *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict::vf_map * >(argp2);
  if (arg1) (arg1)->now_formula_map = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_now_formula_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::vf_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_now_formula_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_now_formula_map_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (spot::bdd_dict::vf_map *)& ((arg1)->now_formula_map);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_var_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::fv_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_var_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_var_map_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_var_map_set" "', argument " "2"" of type '" "spot::bdd_dict::fv_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_var_map_set" "', argument " "2"" of type '" "spot::bdd_dict::fv_map""'");
    } else {
      spot::bdd_dict::fv_map * temp = reinterpret_cast< spot::bdd_dict::fv_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->var_map = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_var_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::fv_map result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_var_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_var_map_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result =  ((arg1)->var_map);
  resultobj = SWIG_NewPointerObj((new spot::bdd_dict::fv_map(static_cast< const spot::bdd_dict::fv_map& >(result))), SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_var_formula_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::vf_map *arg2 = (spot::bdd_dict::vf_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_var_formula_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_var_formula_map_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_var_formula_map_set" "', argument " "2"" of type '" "spot::bdd_dict::vf_map *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict::vf_map * >(argp2);
  if (arg1) (arg1)->var_formula_map = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_var_formula_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::vf_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_var_formula_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_var_formula_map_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (spot::bdd_dict::vf_map *)& ((arg1)->var_formula_map);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_acc_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::fv_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_acc_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_acc_map_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_acc_map_set" "', argument " "2"" of type '" "spot::bdd_dict::fv_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_acc_map_set" "', argument " "2"" of type '" "spot::bdd_dict::fv_map""'");
    } else {
      spot::bdd_dict::fv_map * temp = reinterpret_cast< spot::bdd_dict::fv_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->acc_map = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_acc_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::fv_map result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_acc_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_acc_map_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result =  ((arg1)->acc_map);
  resultobj = SWIG_NewPointerObj((new spot::bdd_dict::fv_map(static_cast< const spot::bdd_dict::fv_map& >(result))), SWIGTYPE_p_std__mapT_spot__ltl__formula_const_p_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_acc_formula_map_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::vf_map *arg2 = (spot::bdd_dict::vf_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_acc_formula_map_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_acc_formula_map_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_acc_formula_map_set" "', argument " "2"" of type '" "spot::bdd_dict::vf_map *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict::vf_map * >(argp2);
  if (arg1) (arg1)->acc_formula_map = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_acc_formula_map_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::vf_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_acc_formula_map_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_acc_formula_map_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (spot::bdd_dict::vf_map *)& ((arg1)->acc_formula_map);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_int_spot__ltl__formula_const_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_clone_counts_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::bdd_dict::cc_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_clone_counts_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_clone_counts_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__mapT_int_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_clone_counts_set" "', argument " "2"" of type '" "spot::bdd_dict::cc_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_clone_counts_set" "', argument " "2"" of type '" "spot::bdd_dict::cc_map""'");
    } else {
      spot::bdd_dict::cc_map * temp = reinterpret_cast< spot::bdd_dict::cc_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->clone_counts = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_clone_counts_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict::cc_map result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_clone_counts_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_clone_counts_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result =  ((arg1)->clone_counts);
  resultobj = SWIG_NewPointerObj((new spot::bdd_dict::cc_map(static_cast< const spot::bdd_dict::cc_map& >(result))), SWIGTYPE_p_std__mapT_int_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_next_to_now_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bddPair *arg2 = (bddPair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_next_to_now_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_next_to_now_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bddPair, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_next_to_now_set" "', argument " "2"" of type '" "bddPair *""'"); 
  }
  arg2 = reinterpret_cast< bddPair * >(argp2);
  if (arg1) (arg1)->next_to_now = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_next_to_now_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bddPair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_next_to_now_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_next_to_now_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (bddPair *) ((arg1)->next_to_now);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bddPair, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_now_to_next_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bddPair *arg2 = (bddPair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_now_to_next_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_now_to_next_set" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bddPair, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_now_to_next_set" "', argument " "2"" of type '" "bddPair *""'"); 
  }
  arg2 = reinterpret_cast< bddPair * >(argp2);
  if (arg1) (arg1)->now_to_next = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_now_to_next_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bddPair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_now_to_next_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_now_to_next_get" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (bddPair *) ((arg1)->now_to_next);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bddPair, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_proposition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_proposition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_proposition" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_register_proposition" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_proposition" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (int)(arg1)->register_proposition((spot::ltl::formula const *)arg2,(void const *)arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_propositions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bdd arg2 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_propositions",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_propositions" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_register_propositions" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_register_propositions" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_propositions" "', argument " "3"" of type '" "void const *""'"); 
  }
  (arg1)->register_propositions(arg2,(void const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_state",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_state" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_register_state" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_state" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (int)(arg1)->register_state((spot::ltl::formula const *)arg2,(void const *)arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_acceptance_variable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_acceptance_variable",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_acceptance_variable" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_register_acceptance_variable" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_acceptance_variable" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (int)(arg1)->register_acceptance_variable((spot::ltl::formula const *)arg2,(void const *)arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_clone_acc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_clone_acc",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_clone_acc" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bdd_dict_register_clone_acc" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_clone_acc" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (int)(arg1)->register_clone_acc(arg2,(void const *)arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_acceptance_variables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bdd arg2 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_acceptance_variables",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_acceptance_variables" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_register_acceptance_variables" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_register_acceptance_variables" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_acceptance_variables" "', argument " "3"" of type '" "void const *""'"); 
  }
  (arg1)->register_acceptance_variables(arg2,(void const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_anonymous_variables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_anonymous_variables",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_anonymous_variables" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bdd_dict_register_anonymous_variables" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_anonymous_variables" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (int)(arg1)->register_anonymous_variables(arg2,(void const *)arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_register_all_variables_of(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *arg2 = (void *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_all_variables_of",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_register_all_variables_of" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_register_all_variables_of" "', argument " "2"" of type '" "void const *""'"); 
  }
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_register_all_variables_of" "', argument " "3"" of type '" "void const *""'"); 
  }
  (arg1)->register_all_variables_of((void const *)arg2,(void const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_unregister_all_my_variables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_unregister_all_my_variables",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_unregister_all_my_variables" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_unregister_all_my_variables" "', argument " "2"" of type '" "void const *""'"); 
  }
  (arg1)->unregister_all_my_variables((void const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_unregister_variable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_unregister_variable",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_unregister_variable" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bdd_dict_unregister_variable" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_unregister_variable" "', argument " "3"" of type '" "void const *""'"); 
  }
  (arg1)->unregister_variable(arg2,(void const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_is_registered_proposition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_is_registered_proposition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_is_registered_proposition" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_is_registered_proposition" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_is_registered_proposition" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (bool)(arg1)->is_registered_proposition((spot::ltl::formula const *)arg2,(void const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_is_registered_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_is_registered_state",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_is_registered_state" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_is_registered_state" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_is_registered_state" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (bool)(arg1)->is_registered_state((spot::ltl::formula const *)arg2,(void const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_is_registered_acceptance_variable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_is_registered_acceptance_variable",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_is_registered_acceptance_variable" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_is_registered_acceptance_variable" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_dict_is_registered_acceptance_variable" "', argument " "3"" of type '" "void const *""'"); 
  }
  result = (bool)(arg1)->is_registered_acceptance_variable((spot::ltl::formula const *)arg2,(void const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_dump",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_dump" "', argument " "1"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_dict_dump" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_dict_dump" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &((spot::bdd_dict const *)arg1)->dump(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_dict_assert_emptiness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:bdd_dict_assert_emptiness",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_dict_assert_emptiness" "', argument " "1"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  ((spot::bdd_dict const *)arg1)->assert_emptiness();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *bdd_dict_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__bdd_dict, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_bdd_print_sat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_sat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_sat" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_sat" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_sat" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_sat" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_sat" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_sat(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_format_sat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_format_sat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_format_sat" "', argument " "1"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_format_sat" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_format_sat" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = spot::bdd_format_sat((spot::bdd_dict const *)arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_print_acc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_acc",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_acc" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_acc" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_acc" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_acc" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_acc" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_acc(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_print_accset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_accset",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_accset" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_accset" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_accset" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_accset" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_accset" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_accset(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_format_accset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_format_accset",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_format_accset" "', argument " "1"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_format_accset" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_format_accset" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = spot::bdd_format_accset((spot::bdd_dict const *)arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_print_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_set",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_set" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_set" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_set" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_set" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_set" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_set(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_format_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_format_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_format_set" "', argument " "1"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_format_set" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_format_set" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = spot::bdd_format_set((spot::bdd_dict const *)arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_print_formula(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_formula",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_formula" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_formula" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_formula" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_formula" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_formula" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_formula(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_format_formula(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bdd_format_formula",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_format_formula" "', argument " "1"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_format_formula" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_format_formula" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = spot::bdd_format_formula((spot::bdd_dict const *)arg1,arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_print_dot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_dot",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_dot" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_dot" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_dot" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_dot" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_dot" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_dot(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bdd_print_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_table",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bdd_print_table" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_table" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "bdd_print_table" "', argument " "2"" of type '" "spot::bdd_dict const *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bdd_print_table" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bdd_print_table" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (std::ostream *) &spot::bdd_print_table(*arg1,(spot::bdd_dict const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_compare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state *arg1 = (spot::state *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_compare",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_compare" "', argument " "1"" of type '" "spot::state const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_compare" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (int)((spot::state const *)arg1)->compare((spot::state const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state *arg1 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_hash" "', argument " "1"" of type '" "spot::state const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state * >(argp1);
  result = ((spot::state const *)arg1)->hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state *arg1 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_clone" "', argument " "1"" of type '" "spot::state const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state * >(argp1);
  result = (spot::state *)((spot::state const *)arg1)->clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_destroy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state *arg1 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_destroy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_destroy" "', argument " "1"" of type '" "spot::state const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state * >(argp1);
  ((spot::state const *)arg1)->destroy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_state_ptr_less_than___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_less_than *arg1 = (spot::state_ptr_less_than *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:state_ptr_less_than___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_ptr_less_than, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_ptr_less_than___call__" "', argument " "1"" of type '" "spot::state_ptr_less_than const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_ptr_less_than * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_ptr_less_than___call__" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "state_ptr_less_than___call__" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (bool)((spot::state_ptr_less_than const *)arg1)->operator ()((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_ptr_less_than(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_less_than *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_ptr_less_than")) SWIG_fail;
  result = (spot::state_ptr_less_than *)new spot::state_ptr_less_than();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_ptr_less_than, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_ptr_less_than(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_less_than *arg1 = (spot::state_ptr_less_than *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_ptr_less_than",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_ptr_less_than, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_ptr_less_than" "', argument " "1"" of type '" "spot::state_ptr_less_than *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_ptr_less_than * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_ptr_less_than_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_ptr_less_than, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_state_ptr_equal___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_equal *arg1 = (spot::state_ptr_equal *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:state_ptr_equal___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_ptr_equal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_ptr_equal___call__" "', argument " "1"" of type '" "spot::state_ptr_equal const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_ptr_equal * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_ptr_equal___call__" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "state_ptr_equal___call__" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (bool)((spot::state_ptr_equal const *)arg1)->operator ()((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_ptr_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_equal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_ptr_equal")) SWIG_fail;
  result = (spot::state_ptr_equal *)new spot::state_ptr_equal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_ptr_equal, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_ptr_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_equal *arg1 = (spot::state_ptr_equal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_ptr_equal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_ptr_equal, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_ptr_equal" "', argument " "1"" of type '" "spot::state_ptr_equal *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_ptr_equal * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_ptr_equal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_ptr_equal, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_state_ptr_hash___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_hash *arg1 = (spot::state_ptr_hash *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_ptr_hash___call__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_ptr_hash, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_ptr_hash___call__" "', argument " "1"" of type '" "spot::state_ptr_hash const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_ptr_hash * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_ptr_hash___call__" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::state_ptr_hash const *)arg1)->operator ()((spot::state const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_ptr_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_hash *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_ptr_hash")) SWIG_fail;
  result = (spot::state_ptr_hash *)new spot::state_ptr_hash();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_ptr_hash, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_ptr_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_ptr_hash *arg1 = (spot::state_ptr_hash *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_ptr_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_ptr_hash, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_ptr_hash" "', argument " "1"" of type '" "spot::state_ptr_hash *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_ptr_hash * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_ptr_hash_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_ptr_hash, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_shared_state_deleter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state *arg1 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:shared_state_deleter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "shared_state_deleter" "', argument " "1"" of type '" "spot::state *""'"); 
  }
  arg1 = reinterpret_cast< spot::state * >(argp1);
  spot::shared_state_deleter(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_shared_ptr_less_than___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_less_than *arg1 = (spot::state_shared_ptr_less_than *) 0 ;
  spot::shared_state arg2 ;
  spot::shared_state arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:state_shared_ptr_less_than___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_shared_ptr_less_than, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_shared_ptr_less_than___call__" "', argument " "1"" of type '" "spot::state_shared_ptr_less_than const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_shared_ptr_less_than * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_spot__state_const_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_shared_ptr_less_than___call__" "', argument " "2"" of type '" "spot::shared_state""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_shared_ptr_less_than___call__" "', argument " "2"" of type '" "spot::shared_state""'");
    } else {
      spot::shared_state * temp = reinterpret_cast< spot::shared_state * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_boost__shared_ptrT_spot__state_const_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "state_shared_ptr_less_than___call__" "', argument " "3"" of type '" "spot::shared_state""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_shared_ptr_less_than___call__" "', argument " "3"" of type '" "spot::shared_state""'");
    } else {
      spot::shared_state * temp = reinterpret_cast< spot::shared_state * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)((spot::state_shared_ptr_less_than const *)arg1)->operator ()(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_shared_ptr_less_than(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_less_than *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_shared_ptr_less_than")) SWIG_fail;
  result = (spot::state_shared_ptr_less_than *)new spot::state_shared_ptr_less_than();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_shared_ptr_less_than, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_shared_ptr_less_than(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_less_than *arg1 = (spot::state_shared_ptr_less_than *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_shared_ptr_less_than",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_shared_ptr_less_than, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_shared_ptr_less_than" "', argument " "1"" of type '" "spot::state_shared_ptr_less_than *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_shared_ptr_less_than * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_shared_ptr_less_than_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_shared_ptr_less_than, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_state_shared_ptr_equal___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_equal *arg1 = (spot::state_shared_ptr_equal *) 0 ;
  spot::shared_state arg2 ;
  spot::shared_state arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:state_shared_ptr_equal___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_shared_ptr_equal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_shared_ptr_equal___call__" "', argument " "1"" of type '" "spot::state_shared_ptr_equal const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_shared_ptr_equal * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_spot__state_const_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_shared_ptr_equal___call__" "', argument " "2"" of type '" "spot::shared_state""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_shared_ptr_equal___call__" "', argument " "2"" of type '" "spot::shared_state""'");
    } else {
      spot::shared_state * temp = reinterpret_cast< spot::shared_state * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_boost__shared_ptrT_spot__state_const_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "state_shared_ptr_equal___call__" "', argument " "3"" of type '" "spot::shared_state""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_shared_ptr_equal___call__" "', argument " "3"" of type '" "spot::shared_state""'");
    } else {
      spot::shared_state * temp = reinterpret_cast< spot::shared_state * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (bool)((spot::state_shared_ptr_equal const *)arg1)->operator ()(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_shared_ptr_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_equal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_shared_ptr_equal")) SWIG_fail;
  result = (spot::state_shared_ptr_equal *)new spot::state_shared_ptr_equal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_shared_ptr_equal, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_shared_ptr_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_equal *arg1 = (spot::state_shared_ptr_equal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_shared_ptr_equal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_shared_ptr_equal, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_shared_ptr_equal" "', argument " "1"" of type '" "spot::state_shared_ptr_equal *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_shared_ptr_equal * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_shared_ptr_equal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_shared_ptr_equal, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_state_shared_ptr_hash___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_hash *arg1 = (spot::state_shared_ptr_hash *) 0 ;
  spot::shared_state arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_shared_ptr_hash___call__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_shared_ptr_hash, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_shared_ptr_hash___call__" "', argument " "1"" of type '" "spot::state_shared_ptr_hash const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_shared_ptr_hash * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_spot__state_const_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_shared_ptr_hash___call__" "', argument " "2"" of type '" "spot::shared_state""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "state_shared_ptr_hash___call__" "', argument " "2"" of type '" "spot::shared_state""'");
    } else {
      spot::shared_state * temp = reinterpret_cast< spot::shared_state * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((spot::state_shared_ptr_hash const *)arg1)->operator ()(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_shared_ptr_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_hash *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_shared_ptr_hash")) SWIG_fail;
  result = (spot::state_shared_ptr_hash *)new spot::state_shared_ptr_hash();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_shared_ptr_hash, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_shared_ptr_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_shared_ptr_hash *arg1 = (spot::state_shared_ptr_hash *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_shared_ptr_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_shared_ptr_hash, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_shared_ptr_hash" "', argument " "1"" of type '" "spot::state_shared_ptr_hash *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_shared_ptr_hash * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_shared_ptr_hash_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_shared_ptr_hash, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_tgba_succ_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_succ_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_succ_iterator" "', argument " "1"" of type '" "spot::tgba_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_first" "', argument " "1"" of type '" "spot::tgba_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  (arg1)->first();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_next" "', argument " "1"" of type '" "spot::tgba_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  (arg1)->next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_done",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_done" "', argument " "1"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  result = (bool)((spot::tgba_succ_iterator const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_current_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_current_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_current_state" "', argument " "1"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  result = (spot::state *)((spot::tgba_succ_iterator const *)arg1)->current_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_current_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_current_condition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_current_condition" "', argument " "1"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  result = ((spot::tgba_succ_iterator const *)arg1)->current_condition();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_current_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_current_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_current_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator * >(argp1);
  result = ((spot::tgba_succ_iterator const *)arg1)->current_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_succ_iterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_tgba(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba" "', argument " "1"" of type '" "spot::tgba *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_get_init_state" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::state *)((spot::tgba const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::tgba *arg4 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:tgba_succ_iter",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iter" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tgba_succ_iter" "', argument " "4"" of type '" "spot::tgba const *""'"); 
  }
  arg4 = reinterpret_cast< spot::tgba * >(argp4);
  result = (spot::tgba_succ_iterator *)((spot::tgba const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_succ_iter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iter" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (spot::tgba_succ_iterator *)((spot::tgba const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_succ_iter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iter" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (spot::tgba_succ_iterator *)((spot::tgba const *)arg1)->succ_iter((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_tgba_succ_iter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_tgba_succ_iter__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__tgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_tgba_succ_iter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'tgba_succ_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba::succ_iter(spot::state const *,spot::state const *,spot::tgba const *) const\n"
    "    spot::tgba::succ_iter(spot::state const *,spot::state const *) const\n"
    "    spot::tgba::succ_iter(spot::state const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_support_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_support_conditions",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_support_conditions" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_support_conditions" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba const *)arg1)->support_conditions((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_support_variables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_support_variables",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_support_variables" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_support_variables" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba const *)arg1)->support_variables((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_get_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_get_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_get_dict" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::bdd_dict *)((spot::tgba const *)arg1)->get_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_format_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_format_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_format_state" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_format_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba const *)arg1)->format_state((spot::state const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_transition_annotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::tgba_succ_iterator *arg2 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_transition_annotation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_transition_annotation" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_transition_annotation" "', argument " "2"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_succ_iterator * >(argp2);
  result = ((spot::tgba const *)arg1)->transition_annotation((spot::tgba_succ_iterator const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_project_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::tgba *arg3 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_project_state",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_project_state" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_project_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_project_state" "', argument " "3"" of type '" "spot::tgba const *""'"); 
  }
  arg3 = reinterpret_cast< spot::tgba * >(argp3);
  result = (spot::state *)((spot::tgba const *)arg1)->project_state((spot::state const *)arg2,(spot::tgba const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_all_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_all_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_all_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = ((spot::tgba const *)arg1)->all_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_number_of_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_number_of_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_number_of_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (unsigned int)((spot::tgba const *)arg1)->number_of_acceptance_conditions();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_neg_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_neg_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_neg_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = ((spot::tgba const *)arg1)->neg_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_state_bdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bdd arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_state_bdd",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_state_bdd" "', argument " "1"" of type '" "bdd""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_state_bdd" "', argument " "1"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (spot::state_bdd *)new spot::state_bdd(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_bdd, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_bdd_as_bdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_bdd_as_bdd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_bdd, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_bdd_as_bdd" "', argument " "1"" of type '" "spot::state_bdd const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_bdd * >(argp1);
  result = ((spot::state_bdd const *)arg1)->as_bdd();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_bdd_compare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_bdd_compare",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_bdd, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_bdd_compare" "', argument " "1"" of type '" "spot::state_bdd const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_bdd * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_bdd_compare" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (int)((spot::state_bdd const *)arg1)->compare((spot::state const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_bdd_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_bdd_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_bdd, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_bdd_hash" "', argument " "1"" of type '" "spot::state_bdd const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_bdd * >(argp1);
  result = ((spot::state_bdd const *)arg1)->hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_bdd_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_bdd_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_bdd, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_bdd_clone" "', argument " "1"" of type '" "spot::state_bdd const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_bdd * >(argp1);
  result = (spot::state_bdd *)((spot::state_bdd const *)arg1)->clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_bdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_bdd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_bdd, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_bdd" "', argument " "1"" of type '" "spot::state_bdd *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_bdd * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_bdd_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_bdd, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_taa_tgba_add_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  spot::taa_tgba::transition *arg2 = (spot::taa_tgba::transition *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:taa_tgba_add_condition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_add_condition" "', argument " "1"" of type '" "spot::taa_tgba *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__taa_tgba__transition, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "taa_tgba_add_condition" "', argument " "2"" of type '" "spot::taa_tgba::transition *""'"); 
  }
  arg2 = reinterpret_cast< spot::taa_tgba::transition * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "taa_tgba_add_condition" "', argument " "3"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  (arg1)->add_condition(arg2,(spot::ltl::formula const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_taa_tgba(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_taa_tgba",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_taa_tgba" "', argument " "1"" of type '" "spot::taa_tgba *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_tgba_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_get_init_state" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  result = (spot::state *)((spot::taa_tgba const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_succ_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::tgba *arg4 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:taa_tgba_succ_iter",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_succ_iter" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "taa_tgba_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "taa_tgba_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "taa_tgba_succ_iter" "', argument " "4"" of type '" "spot::tgba const *""'"); 
  }
  arg4 = reinterpret_cast< spot::tgba * >(argp4);
  result = (spot::tgba_succ_iterator *)((spot::taa_tgba const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_succ_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:taa_tgba_succ_iter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_succ_iter" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "taa_tgba_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "taa_tgba_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (spot::tgba_succ_iterator *)((spot::taa_tgba const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_succ_iter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:taa_tgba_succ_iter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_succ_iter" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "taa_tgba_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (spot::tgba_succ_iterator *)((spot::taa_tgba const *)arg1)->succ_iter((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_succ_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__taa_tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_taa_tgba_succ_iter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__taa_tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_taa_tgba_succ_iter__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__taa_tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__tgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_taa_tgba_succ_iter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'taa_tgba_succ_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::taa_tgba::succ_iter(spot::state const *,spot::state const *,spot::tgba const *) const\n"
    "    spot::taa_tgba::succ_iter(spot::state const *,spot::state const *) const\n"
    "    spot::taa_tgba::succ_iter(spot::state const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_taa_tgba_get_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_tgba_get_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_get_dict" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  result = (spot::bdd_dict *)((spot::taa_tgba const *)arg1)->get_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_format_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:taa_tgba_format_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_format_state" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "taa_tgba_format_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::taa_tgba const *)arg1)->format_state((spot::state const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_all_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_tgba_all_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_all_acceptance_conditions" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  result = ((spot::taa_tgba const *)arg1)->all_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_tgba_neg_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba *arg1 = (spot::taa_tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_tgba_neg_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_tgba_neg_acceptance_conditions" "', argument " "1"" of type '" "spot::taa_tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba * >(argp1);
  result = ((spot::taa_tgba const *)arg1)->neg_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *taa_tgba_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__taa_tgba, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_state_set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba::state_set *arg1 = (spot::taa_tgba::state_set *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::state_set *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_state_set" "', argument " "1"" of type '" "spot::taa_tgba::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba::state_set * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_state_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (spot::state_set *)new spot::state_set((spot::taa_tgba::state_set const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_set, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba::state_set *arg1 = (spot::taa_tgba::state_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_set *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_state_set",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_state_set" "', argument " "1"" of type '" "spot::taa_tgba::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba::state_set * >(argp1);
  result = (spot::state_set *)new spot::state_set((spot::taa_tgba::state_set const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_set, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_state_set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_state_set__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_state_set__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_state_set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::state_set::state_set(spot::taa_tgba::state_set const *,bool)\n"
    "    spot::state_set::state_set(spot::taa_tgba::state_set const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_state_set_compare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_set *arg1 = (spot::state_set *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_set_compare",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_set, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_set_compare" "', argument " "1"" of type '" "spot::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_set * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_set_compare" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (int)((spot::state_set const *)arg1)->compare((spot::state const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_set_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_set *arg1 = (spot::state_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_set_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_set, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_set_hash" "', argument " "1"" of type '" "spot::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_set * >(argp1);
  result = ((spot::state_set const *)arg1)->hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_set_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_set *arg1 = (spot::state_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_set *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_set_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_set, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_set_clone" "', argument " "1"" of type '" "spot::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_set * >(argp1);
  result = (spot::state_set *)((spot::state_set const *)arg1)->clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_set, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_set *arg1 = (spot::state_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_state_set",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_set, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_state_set" "', argument " "1"" of type '" "spot::state_set *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_set * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_set_get_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_set *arg1 = (spot::state_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::taa_tgba::state_set *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_set_get_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_set, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_set_get_state" "', argument " "1"" of type '" "spot::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_set * >(argp1);
  result = (spot::taa_tgba::state_set *)((spot::state_set const *)arg1)->get_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_set_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_set, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_taa_succ_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba::state_set *arg1 = (spot::taa_tgba::state_set *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::taa_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_taa_succ_iterator",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_taa_succ_iterator" "', argument " "1"" of type '" "spot::taa_tgba::state_set const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba::state_set * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_taa_succ_iterator" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_taa_succ_iterator" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::taa_succ_iterator *)new spot::taa_succ_iterator((spot::taa_tgba::state_set const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__taa_succ_iterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_taa_succ_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_taa_succ_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_taa_succ_iterator" "', argument " "1"" of type '" "spot::taa_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_succ_iterator_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_succ_iterator_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_succ_iterator_first" "', argument " "1"" of type '" "spot::taa_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  (arg1)->first();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_succ_iterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_succ_iterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_succ_iterator_next" "', argument " "1"" of type '" "spot::taa_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  (arg1)->next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_succ_iterator_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_succ_iterator_done",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_succ_iterator_done" "', argument " "1"" of type '" "spot::taa_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  result = (bool)((spot::taa_succ_iterator const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_succ_iterator_current_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_set *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_succ_iterator_current_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_succ_iterator_current_state" "', argument " "1"" of type '" "spot::taa_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  result = (spot::state_set *)((spot::taa_succ_iterator const *)arg1)->current_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_set, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_succ_iterator_current_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_succ_iterator_current_condition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_succ_iterator_current_condition" "', argument " "1"" of type '" "spot::taa_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  result = ((spot::taa_succ_iterator const *)arg1)->current_condition();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_taa_succ_iterator_current_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_succ_iterator *arg1 = (spot::taa_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:taa_succ_iterator_current_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "taa_succ_iterator_current_acceptance_conditions" "', argument " "1"" of type '" "spot::taa_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_succ_iterator * >(argp1);
  result = ((spot::taa_succ_iterator const *)arg1)->current_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *taa_succ_iterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__taa_succ_iterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_taa_tgba_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::taa_tgba_string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_taa_tgba_string",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_taa_tgba_string" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (spot::taa_tgba_string *)new spot::taa_tgba_string(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__taa_tgba_string, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_taa_tgba_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba_string *arg1 = (spot::taa_tgba_string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_taa_tgba_string",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba_string, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_taa_tgba_string" "', argument " "1"" of type '" "spot::taa_tgba_string *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba_string * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *taa_tgba_string_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__taa_tgba_string, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_taa_tgba_formula(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::taa_tgba_formula *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_taa_tgba_formula",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_taa_tgba_formula" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (spot::taa_tgba_formula *)new spot::taa_tgba_formula(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__taa_tgba_formula, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_taa_tgba_formula(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::taa_tgba_formula *arg1 = (spot::taa_tgba_formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_taa_tgba_formula",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__taa_tgba_formula, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_taa_tgba_formula" "', argument " "1"" of type '" "spot::taa_tgba_formula *""'"); 
  }
  arg1 = reinterpret_cast< spot::taa_tgba_formula * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *taa_tgba_formula_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__taa_tgba_formula, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_relation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_relation_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_relation_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_relation_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->relation = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_relation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_relation_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_relation_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->relation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_acceptance_conditions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_acceptance_conditions_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_acceptance_conditions_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_acceptance_conditions_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->acceptance_conditions = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_acceptance_conditions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_acceptance_conditions_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_acceptance_conditions_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->acceptance_conditions);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_acceptance_conditions_support_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_acceptance_conditions_support_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_acceptance_conditions_support_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_acceptance_conditions_support_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->acceptance_conditions_support = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_acceptance_conditions_support_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_acceptance_conditions_support_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_acceptance_conditions_support_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->acceptance_conditions_support);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_all_acceptance_conditions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_all_acceptance_conditions_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_all_acceptance_conditions_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_all_acceptance_conditions_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->all_acceptance_conditions = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_all_acceptance_conditions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_all_acceptance_conditions_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_all_acceptance_conditions_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->all_acceptance_conditions);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_now_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_now_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_now_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_now_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->now_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_now_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_now_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_now_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->now_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_next_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_next_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_next_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_next_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->next_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_next_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_next_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_next_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->next_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_nownext_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_nownext_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_nownext_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_nownext_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->nownext_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_nownext_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_nownext_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_nownext_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->nownext_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notnow_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notnow_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notnow_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_notnow_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->notnow_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notnow_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notnow_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notnow_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->notnow_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notnext_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notnext_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notnext_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_notnext_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->notnext_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notnext_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notnext_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notnext_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->notnext_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_var_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_var_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_var_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_var_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->var_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_var_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_var_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_var_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->var_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notvar_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notvar_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notvar_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_notvar_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->notvar_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notvar_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notvar_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notvar_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->notvar_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_varandnext_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_varandnext_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_varandnext_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_varandnext_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->varandnext_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_varandnext_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_varandnext_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_varandnext_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->varandnext_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_acc_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_acc_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_acc_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_acc_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->acc_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_acc_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_acc_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_acc_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->acc_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notacc_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notacc_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notacc_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_notacc_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->notacc_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_notacc_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notacc_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_notacc_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->notacc_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_negacc_set_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd *arg2 = (bdd *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_negacc_set_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_negacc_set_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bdd, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_negacc_set_set" "', argument " "2"" of type '" "bdd *""'"); 
  }
  arg2 = reinterpret_cast< bdd * >(argp2);
  if (arg1) (arg1)->negacc_set = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_negacc_set_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_negacc_set_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_negacc_set_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (bdd *)& ((arg1)->negacc_set);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_bdd, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_dict_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_dict_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_dict_set" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_dict_set" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  if (arg1) (arg1)->dict = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_dict_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_dict_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_dict_get" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (spot::bdd_dict *) ((arg1)->dict);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_bdd_core_data__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_bdd_core_data *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_bdd_core_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_bdd_core_data" "', argument " "1"" of type '" "spot::bdd_dict *""'"); 
  }
  arg1 = reinterpret_cast< spot::bdd_dict * >(argp1);
  result = (spot::tgba_bdd_core_data *)new spot::tgba_bdd_core_data(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_core_data, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_bdd_core_data__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_bdd_core_data *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_bdd_core_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_spot__tgba_bdd_core_data,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_bdd_core_data" "', argument " "1"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_bdd_core_data" "', argument " "1"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  result = (spot::tgba_bdd_core_data *)new spot::tgba_bdd_core_data((spot::tgba_bdd_core_data const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_core_data, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_bdd_core_data__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = 0 ;
  spot::tgba_bdd_core_data *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_bdd_core_data *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_tgba_bdd_core_data",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_spot__tgba_bdd_core_data,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_bdd_core_data" "', argument " "1"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_bdd_core_data" "', argument " "1"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__tgba_bdd_core_data,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tgba_bdd_core_data" "', argument " "2"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_bdd_core_data" "', argument " "2"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp2);
  result = (spot::tgba_bdd_core_data *)new spot::tgba_bdd_core_data((spot::tgba_bdd_core_data const &)*arg1,(spot::tgba_bdd_core_data const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_core_data, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_bdd_core_data(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_tgba_bdd_core_data__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_spot__tgba_bdd_core_data, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_tgba_bdd_core_data__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_spot__tgba_bdd_core_data, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__tgba_bdd_core_data, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_tgba_bdd_core_data__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_tgba_bdd_core_data'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_bdd_core_data::tgba_bdd_core_data(spot::bdd_dict *)\n"
    "    spot::tgba_bdd_core_data::tgba_bdd_core_data(spot::tgba_bdd_core_data const &)\n"
    "    spot::tgba_bdd_core_data::tgba_bdd_core_data(spot::tgba_bdd_core_data const &,spot::tgba_bdd_core_data const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_declare_now_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd arg2 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_bdd_core_data_declare_now_next",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_declare_now_next" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_declare_now_next" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_bdd_core_data_declare_now_next" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_bdd_core_data_declare_now_next" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_bdd_core_data_declare_now_next" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->declare_now_next(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_declare_atomic_prop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_declare_atomic_prop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_declare_atomic_prop" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_declare_atomic_prop" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_bdd_core_data_declare_atomic_prop" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->declare_atomic_prop(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_declare_acceptance_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_declare_acceptance_condition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_declare_acceptance_condition" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_declare_acceptance_condition" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_bdd_core_data_declare_acceptance_condition" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->declare_acceptance_condition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_core_data_delete_unaccepting_scc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_delete_unaccepting_scc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_core_data_delete_unaccepting_scc" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_core_data_delete_unaccepting_scc" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_bdd_core_data_delete_unaccepting_scc" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->delete_unaccepting_scc(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_bdd_core_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_bdd_core_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_core_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_bdd_core_data" "', argument " "1"" of type '" "spot::tgba_bdd_core_data *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_bdd_core_data_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_bdd_core_data, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_succ_iterator_concrete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_core_data *arg1 = 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_tgba_succ_iterator_concrete",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_spot__tgba_bdd_core_data,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_succ_iterator_concrete" "', argument " "1"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_succ_iterator_concrete" "', argument " "1"" of type '" "spot::tgba_bdd_core_data const &""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_core_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tgba_succ_iterator_concrete" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_succ_iterator_concrete" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::tgba_succ_iterator_concrete *)new spot::tgba_succ_iterator_concrete((spot::tgba_bdd_core_data const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator_concrete, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_succ_iterator_concrete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_succ_iterator_concrete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_succ_iterator_concrete" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_concrete_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_concrete_first" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  (arg1)->first();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_concrete_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_concrete_next" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  (arg1)->next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_concrete_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_done",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_concrete_done" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  result = (bool)((spot::tgba_succ_iterator_concrete const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_concrete_current_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_current_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_concrete_current_state" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  result = (spot::state_bdd *)((spot::tgba_succ_iterator_concrete const *)arg1)->current_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_concrete_current_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_current_condition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_concrete_current_condition" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  result = ((spot::tgba_succ_iterator_concrete const *)arg1)->current_condition();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_succ_iterator_concrete_current_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_current_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_succ_iterator_concrete_current_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_succ_iterator_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_succ_iterator_concrete * >(argp1);
  result = ((spot::tgba_succ_iterator_concrete const *)arg1)->current_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_succ_iterator_concrete_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_succ_iterator_concrete, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_bdd_concrete__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  tgba_bdd_factory *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_bdd_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_bdd_concrete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_tgba_bdd_factory,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_bdd_concrete" "', argument " "1"" of type '" "tgba_bdd_factory const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_bdd_concrete" "', argument " "1"" of type '" "tgba_bdd_factory const &""'"); 
  }
  arg1 = reinterpret_cast< tgba_bdd_factory * >(argp1);
  result = (spot::tgba_bdd_concrete *)new spot::tgba_bdd_concrete((tgba_bdd_factory const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_concrete, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_bdd_concrete__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  tgba_bdd_factory *arg1 = 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_bdd_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_tgba_bdd_concrete",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_tgba_bdd_factory,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_bdd_concrete" "', argument " "1"" of type '" "tgba_bdd_factory const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_bdd_concrete" "', argument " "1"" of type '" "tgba_bdd_factory const &""'"); 
  }
  arg1 = reinterpret_cast< tgba_bdd_factory * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tgba_bdd_concrete" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_bdd_concrete" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::tgba_bdd_concrete *)new spot::tgba_bdd_concrete((tgba_bdd_factory const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_concrete, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_bdd_concrete(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_tgba_bdd_factory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_tgba_bdd_concrete__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_tgba_bdd_factory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_bdd, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_tgba_bdd_concrete__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_tgba_bdd_concrete'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_bdd_concrete::tgba_bdd_concrete(tgba_bdd_factory const &)\n"
    "    spot::tgba_bdd_concrete::tgba_bdd_concrete(tgba_bdd_factory const &,bdd)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_tgba_bdd_concrete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_bdd_concrete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_bdd_concrete" "', argument " "1"" of type '" "spot::tgba_bdd_concrete *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_set_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_concrete_set_init_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_set_init_state" "', argument " "1"" of type '" "spot::tgba_bdd_concrete *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_concrete_set_init_state" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_bdd_concrete_set_init_state" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_init_state(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_bdd *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_get_init_state" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  result = (spot::state_bdd *)((spot::tgba_bdd_concrete const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_get_init_bdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_init_bdd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_get_init_bdd" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  result = ((spot::tgba_bdd_concrete const *)arg1)->get_init_bdd();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_succ_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::tgba *arg4 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_succ_iterator_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:tgba_bdd_concrete_succ_iter",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "4"" of type '" "spot::tgba const *""'"); 
  }
  arg4 = reinterpret_cast< spot::tgba * >(argp4);
  result = (spot::tgba_succ_iterator_concrete *)((spot::tgba_bdd_concrete const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator_concrete, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_succ_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_succ_iterator_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_bdd_concrete_succ_iter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (spot::tgba_succ_iterator_concrete *)((spot::tgba_bdd_concrete const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator_concrete, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_succ_iter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_concrete_succ_iter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_concrete_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (spot::tgba_succ_iterator_concrete *)((spot::tgba_bdd_concrete const *)arg1)->succ_iter((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator_concrete, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_succ_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_bdd_concrete, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_tgba_bdd_concrete_succ_iter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_bdd_concrete, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_tgba_bdd_concrete_succ_iter__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_bdd_concrete, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__tgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_tgba_bdd_concrete_succ_iter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'tgba_bdd_concrete_succ_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_bdd_concrete::succ_iter(spot::state const *,spot::state const *,spot::tgba const *) const\n"
    "    spot::tgba_bdd_concrete::succ_iter(spot::state const *,spot::state const *) const\n"
    "    spot::tgba_bdd_concrete::succ_iter(spot::state const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_format_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_concrete_format_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_format_state" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_bdd_concrete_format_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba_bdd_concrete const *)arg1)->format_state((spot::state const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_get_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_get_dict" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  result = (spot::bdd_dict *)((spot::tgba_bdd_concrete const *)arg1)->get_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_get_core_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_bdd_core_data *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_core_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_get_core_data" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  result = (spot::tgba_bdd_core_data *) &((spot::tgba_bdd_concrete const *)arg1)->get_core_data();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_core_data, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_all_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_all_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_all_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  result = ((spot::tgba_bdd_concrete const *)arg1)->all_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_neg_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_neg_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_neg_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_bdd_concrete const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  result = ((spot::tgba_bdd_concrete const *)arg1)->neg_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_bdd_concrete_delete_unaccepting_scc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_delete_unaccepting_scc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_bdd_concrete, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_bdd_concrete_delete_unaccepting_scc" "', argument " "1"" of type '" "spot::tgba_bdd_concrete *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_bdd_concrete * >(argp1);
  (arg1)->delete_unaccepting_scc();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_bdd_concrete_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_bdd_concrete, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_state_explicit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_state_explicit")) SWIG_fail;
  result = (spot::state_explicit *)new spot::state_explicit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_explicit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_compare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_explicit_compare",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_compare" "', argument " "1"" of type '" "spot::state_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_explicit_compare" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (int)((spot::state_explicit const *)arg1)->compare((spot::state const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_explicit_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_hash" "', argument " "1"" of type '" "spot::state_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  result = ((spot::state_explicit const *)arg1)->hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_explicit_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_clone" "', argument " "1"" of type '" "spot::state_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  result = (spot::state_explicit *)((spot::state_explicit const *)arg1)->clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_explicit_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_empty" "', argument " "1"" of type '" "spot::state_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  result = (bool)((spot::state_explicit const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_destroy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_explicit_destroy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_destroy" "', argument " "1"" of type '" "spot::state_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  ((spot::state_explicit const *)arg1)->destroy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_successors_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  spot::state_explicit::transitions_t *arg2 = (spot::state_explicit::transitions_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_explicit_successors_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_successors_set" "', argument " "1"" of type '" "spot::state_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_explicit_successors_set" "', argument " "2"" of type '" "spot::state_explicit::transitions_t *""'"); 
  }
  arg2 = reinterpret_cast< spot::state_explicit::transitions_t * >(argp2);
  if (arg1) (arg1)->successors = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_explicit_successors_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_explicit::transitions_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_explicit_successors_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_explicit_successors_get" "', argument " "1"" of type '" "spot::state_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit * >(argp1);
  result = (spot::state_explicit::transitions_t *)& ((arg1)->successors);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_explicit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_explicit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_tgba_explicit_add_default_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_explicit::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_add_default_init",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_add_default_init" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  result = (spot::tgba_explicit::state *)(arg1)->add_default_init();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_create_transition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::tgba_explicit::state *arg2 = (spot::tgba_explicit::state *) 0 ;
  spot::tgba_explicit::state *arg3 = (spot::tgba_explicit::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_explicit::transition *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_create_transition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_create_transition" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_create_transition" "', argument " "2"" of type '" "spot::tgba_explicit::state *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_explicit::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state_explicit, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_create_transition" "', argument " "3"" of type '" "spot::tgba_explicit::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::tgba_explicit::state * >(argp3);
  result = (spot::tgba_explicit::transition *)(arg1)->create_transition(arg2,(spot::tgba_explicit::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_explicit__transition, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_add_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_condition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_add_condition" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state_explicit__transition, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_add_condition" "', argument " "2"" of type '" "spot::tgba_explicit::transition *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_explicit::transition * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_add_condition" "', argument " "3"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  (arg1)->add_condition(arg2,(spot::ltl::formula const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_add_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_conditions",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_add_conditions" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state_explicit__transition, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_add_conditions" "', argument " "2"" of type '" "spot::tgba_explicit::transition *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_explicit::transition * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_add_conditions" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_explicit_add_conditions" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->add_conditions(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_copy_acceptance_conditions_of(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_copy_acceptance_conditions_of",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_copy_acceptance_conditions_of" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_copy_acceptance_conditions_of" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  (arg1)->copy_acceptance_conditions_of((spot::tgba const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_set_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_set_acceptance_conditions",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_set_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_set_acceptance_conditions" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_explicit_set_acceptance_conditions" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_acceptance_conditions(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_has_acceptance_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_has_acceptance_condition",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_has_acceptance_condition" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_has_acceptance_condition" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (bool)((spot::tgba_explicit const *)arg1)->has_acceptance_condition((spot::ltl::formula const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_add_acceptance_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_acceptance_condition",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_add_acceptance_condition" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state_explicit__transition, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_add_acceptance_condition" "', argument " "2"" of type '" "spot::tgba_explicit::transition *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_explicit::transition * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_add_acceptance_condition" "', argument " "3"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  (arg1)->add_acceptance_condition(arg2,(spot::ltl::formula const *)arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_add_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
  bdd arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_acceptance_conditions",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_add_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state_explicit__transition, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_add_acceptance_conditions" "', argument " "2"" of type '" "spot::tgba_explicit::transition *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_explicit::transition * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_add_acceptance_conditions" "', argument " "3"" of type '" "bdd""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_explicit_add_acceptance_conditions" "', argument " "3"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->add_acceptance_conditions(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_explicit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_explicit" "', argument " "1"" of type '" "spot::tgba_explicit *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_get_init_state" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  result = (spot::state *)((spot::tgba_explicit const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::tgba *arg4 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:tgba_explicit_succ_iter",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iter" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tgba_explicit_succ_iter" "', argument " "4"" of type '" "spot::tgba const *""'"); 
  }
  arg4 = reinterpret_cast< spot::tgba * >(argp4);
  result = (spot::tgba_succ_iterator *)((spot::tgba_explicit const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_succ_iter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iter" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_explicit_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (spot::tgba_succ_iterator *)((spot::tgba_explicit const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_succ_iter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iter" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (spot::tgba_succ_iterator *)((spot::tgba_explicit const *)arg1)->succ_iter((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_explicit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_tgba_explicit_succ_iter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_explicit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_tgba_explicit_succ_iter__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_explicit, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__tgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_tgba_explicit_succ_iter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'tgba_explicit_succ_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_explicit::succ_iter(spot::state const *,spot::state const *,spot::tgba const *) const\n"
    "    spot::tgba_explicit::succ_iter(spot::state const *,spot::state const *) const\n"
    "    spot::tgba_explicit::succ_iter(spot::state const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_get_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_get_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_get_dict" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  result = (spot::bdd_dict *)((spot::tgba_explicit const *)arg1)->get_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_all_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_all_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_all_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  result = ((spot::tgba_explicit const *)arg1)->all_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_neg_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_neg_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_neg_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  result = ((spot::tgba_explicit const *)arg1)->neg_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_format_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_format_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_format_state" "', argument " "1"" of type '" "spot::tgba_explicit const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_explicit_format_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba_explicit const *)arg1)->format_state((spot::state const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_explicit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_explicit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_explicit_succ_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_explicit::transitions_t *arg1 = (spot::state_explicit::transitions_t *) 0 ;
  bdd arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_explicit_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_tgba_explicit_succ_iterator",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_explicit_succ_iterator" "', argument " "1"" of type '" "spot::state_explicit::transitions_t const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_explicit::transitions_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bdd,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tgba_explicit_succ_iterator" "', argument " "2"" of type '" "bdd""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_explicit_succ_iterator" "', argument " "2"" of type '" "bdd""'");
    } else {
      bdd * temp = reinterpret_cast< bdd * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::tgba_explicit_succ_iterator *)new spot::tgba_explicit_succ_iterator((spot::state_explicit::transitions_t const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit_succ_iterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iterator_first(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_first",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iterator_first" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  (arg1)->first();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iterator_next" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  (arg1)->next();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iterator_done(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_done",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iterator_done" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  result = (bool)((spot::tgba_explicit_succ_iterator const *)arg1)->done();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iterator_current_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_current_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iterator_current_state" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  result = (spot::state_explicit *)((spot::tgba_explicit_succ_iterator const *)arg1)->current_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iterator_current_condition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_current_condition",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iterator_current_condition" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  result = ((spot::tgba_explicit_succ_iterator const *)arg1)->current_condition();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_explicit_succ_iterator_current_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_current_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_explicit_succ_iterator_current_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  result = ((spot::tgba_explicit_succ_iterator const *)arg1)->current_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_explicit_succ_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit_succ_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_succ_iterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_explicit_succ_iterator" "', argument " "1"" of type '" "spot::tgba_explicit_succ_iterator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_succ_iterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_explicit_succ_iterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_explicit_succ_iterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_tgba_explicit_string(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_string *arg1 = (spot::tgba_explicit_string *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit_string",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_string, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_explicit_string" "', argument " "1"" of type '" "spot::tgba_explicit_string *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_string * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_explicit_string_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_explicit_string, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_tgba_explicit_formula(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_formula *arg1 = (spot::tgba_explicit_formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit_formula",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_formula, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_explicit_formula" "', argument " "1"" of type '" "spot::tgba_explicit_formula *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_formula * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_explicit_formula_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_explicit_formula, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_tgba_explicit_number(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_explicit_number *arg1 = (spot::tgba_explicit_number *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit_number",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_explicit_number, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_explicit_number" "', argument " "1"" of type '" "spot::tgba_explicit_number *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_explicit_number * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_explicit_number_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_explicit_number, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_state_product(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state *arg1 = (spot::state *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  fixed_size_pool *arg3 = (fixed_size_pool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::state_product *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_state_product",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_state_product" "', argument " "1"" of type '" "spot::state *""'"); 
  }
  arg1 = reinterpret_cast< spot::state * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_state_product" "', argument " "2"" of type '" "spot::state *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_fixed_size_pool, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_state_product" "', argument " "3"" of type '" "fixed_size_pool *""'"); 
  }
  arg3 = reinterpret_cast< fixed_size_pool * >(argp3);
  result = (spot::state_product *)new spot::state_product(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_product, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_product_destroy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_product *arg1 = (spot::state_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_product_destroy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_product_destroy" "', argument " "1"" of type '" "spot::state_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_product * >(argp1);
  ((spot::state_product const *)arg1)->destroy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_product_left(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_product *arg1 = (spot::state_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_product_left",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_product_left" "', argument " "1"" of type '" "spot::state_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_product * >(argp1);
  result = (spot::state *)((spot::state_product const *)arg1)->left();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_product_right(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_product *arg1 = (spot::state_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_product_right",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_product_right" "', argument " "1"" of type '" "spot::state_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_product * >(argp1);
  result = (spot::state *)((spot::state_product const *)arg1)->right();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_product_compare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_product *arg1 = (spot::state_product *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:state_product_compare",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_product_compare" "', argument " "1"" of type '" "spot::state_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "state_product_compare" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (int)((spot::state_product const *)arg1)->compare((spot::state const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_product_hash(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_product *arg1 = (spot::state_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_product_hash",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_product_hash" "', argument " "1"" of type '" "spot::state_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_product * >(argp1);
  result = ((spot::state_product const *)arg1)->hash();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_state_product_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::state_product *arg1 = (spot::state_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state_product *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:state_product_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__state_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "state_product_clone" "', argument " "1"" of type '" "spot::state_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::state_product * >(argp1);
  result = (spot::state_product *)((spot::state_product const *)arg1)->clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state_product, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *state_product_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__state_product, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_product(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_product *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_tgba_product",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_product" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tgba_product" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  result = (spot::tgba_product *)new spot::tgba_product((spot::tgba const *)arg1,(spot::tgba const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_product, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_product(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_product",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_product" "', argument " "1"" of type '" "spot::tgba_product *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_product_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_get_init_state" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  result = (spot::state *)((spot::tgba_product const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_succ_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::tgba *arg4 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:tgba_product_succ_iter",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_succ_iter" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_product_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_product_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tgba_product_succ_iter" "', argument " "4"" of type '" "spot::tgba const *""'"); 
  }
  arg4 = reinterpret_cast< spot::tgba * >(argp4);
  result = (spot::tgba_succ_iterator *)((spot::tgba_product const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_succ_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_product_succ_iter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_succ_iter" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_product_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_product_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (spot::tgba_succ_iterator *)((spot::tgba_product const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_succ_iter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_product_succ_iter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_succ_iter" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_product_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (spot::tgba_succ_iterator *)((spot::tgba_product const *)arg1)->succ_iter((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_succ_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_product, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_tgba_product_succ_iter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_product, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_tgba_product_succ_iter__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_product, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__tgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_tgba_product_succ_iter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'tgba_product_succ_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_product::succ_iter(spot::state const *,spot::state const *,spot::tgba const *) const\n"
    "    spot::tgba_product::succ_iter(spot::state const *,spot::state const *) const\n"
    "    spot::tgba_product::succ_iter(spot::state const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_product_get_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_product_get_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_get_dict" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  result = (spot::bdd_dict *)((spot::tgba_product const *)arg1)->get_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_format_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_product_format_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_format_state" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_product_format_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba_product const *)arg1)->format_state((spot::state const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_transition_annotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  spot::tgba_succ_iterator *arg2 = (spot::tgba_succ_iterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_product_transition_annotation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_transition_annotation" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_product_transition_annotation" "', argument " "2"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_succ_iterator * >(argp2);
  result = ((spot::tgba_product const *)arg1)->transition_annotation((spot::tgba_succ_iterator const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_project_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::tgba *arg3 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_product_project_state",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_project_state" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_product_project_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_product_project_state" "', argument " "3"" of type '" "spot::tgba const *""'"); 
  }
  arg3 = reinterpret_cast< spot::tgba * >(argp3);
  result = (spot::state *)((spot::tgba_product const *)arg1)->project_state((spot::state const *)arg2,(spot::tgba const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_all_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_product_all_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_all_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  result = ((spot::tgba_product const *)arg1)->all_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_neg_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_product_neg_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_neg_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_product const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product * >(argp1);
  result = ((spot::tgba_product const *)arg1)->neg_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_product_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_product, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_product_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::state *arg4 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_product_init *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_tgba_product_init",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_product_init" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tgba_product_init" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_tgba_product_init" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_tgba_product_init" "', argument " "4"" of type '" "spot::state const *""'"); 
  }
  arg4 = reinterpret_cast< spot::state * >(argp4);
  result = (spot::tgba_product_init *)new spot::tgba_product_init((spot::tgba const *)arg1,(spot::tgba const *)arg2,(spot::state const *)arg3,(spot::state const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_product_init, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_product_init_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product_init *arg1 = (spot::tgba_product_init *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_product_init_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product_init, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_product_init_get_init_state" "', argument " "1"" of type '" "spot::tgba_product_init const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product_init * >(argp1);
  result = (spot::state *)((spot::tgba_product_init const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_product_init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_product_init *arg1 = (spot::tgba_product_init *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_product_init",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_product_init, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_product_init" "', argument " "1"" of type '" "spot::tgba_product_init *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_product_init * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_product_init_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_product_init, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_tba_proxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_tba_proxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_tba_proxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_tba_proxy" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba_tba_proxy *)new spot::tgba_tba_proxy((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_tba_proxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_tba_proxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_tba_proxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_tba_proxy" "', argument " "1"" of type '" "spot::tgba_tba_proxy *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_get_init_state" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  result = (spot::state *)((spot::tgba_tba_proxy const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_succ_iter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  spot::tgba *arg4 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:tgba_tba_proxy_succ_iter",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "4"" of type '" "spot::tgba const *""'"); 
  }
  arg4 = reinterpret_cast< spot::tgba * >(argp4);
  result = (spot::tgba_succ_iterator *)((spot::tgba_tba_proxy const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_succ_iter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_tba_proxy_succ_iter",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  result = (spot::tgba_succ_iterator *)((spot::tgba_tba_proxy const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_succ_iter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_succ_iterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_tba_proxy_succ_iter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_succ_iter" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (spot::tgba_succ_iterator *)((spot::tgba_tba_proxy const *)arg1)->succ_iter((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_succ_iterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_succ_iter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_tba_proxy, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_tgba_tba_proxy_succ_iter__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_tba_proxy, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_tgba_tba_proxy_succ_iter__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba_tba_proxy, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__state, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__state, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__tgba, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_tgba_tba_proxy_succ_iter__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'tgba_tba_proxy_succ_iter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_tba_proxy::succ_iter(spot::state const *,spot::state const *,spot::tgba const *) const\n"
    "    spot::tgba_tba_proxy::succ_iter(spot::state const *,spot::state const *) const\n"
    "    spot::tgba_tba_proxy::succ_iter(spot::state const *) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_get_dict(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::bdd_dict *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_get_dict",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_get_dict" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  result = (spot::bdd_dict *)((spot::tgba_tba_proxy const *)arg1)->get_dict();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_format_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_tba_proxy_format_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_format_state" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_format_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba_tba_proxy const *)arg1)->format_state((spot::state const *)arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_project_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  spot::tgba *arg3 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:tgba_tba_proxy_project_state",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_project_state" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_project_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_tba_proxy_project_state" "', argument " "3"" of type '" "spot::tgba const *""'"); 
  }
  arg3 = reinterpret_cast< spot::tgba * >(argp3);
  result = (spot::state *)((spot::tgba_tba_proxy const *)arg1)->project_state((spot::state const *)arg2,(spot::tgba const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_all_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_all_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_all_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  result = ((spot::tgba_tba_proxy const *)arg1)->all_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_neg_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_neg_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_neg_acceptance_conditions" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  result = ((spot::tgba_tba_proxy const *)arg1)->neg_acceptance_conditions();
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_common_acceptance_conditions_of_original_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_tba_proxy_common_acceptance_conditions_of_original_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_common_acceptance_conditions_of_original_state" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_common_acceptance_conditions_of_original_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba_tba_proxy const *)arg1)->common_acceptance_conditions_of_original_state((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_tba_proxy_union_acceptance_conditions_of_original_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bdd result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_tba_proxy_union_acceptance_conditions_of_original_state",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_tba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_tba_proxy_union_acceptance_conditions_of_original_state" "', argument " "1"" of type '" "spot::tgba_tba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_tba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_tba_proxy_union_acceptance_conditions_of_original_state" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = ((spot::tgba_tba_proxy const *)arg1)->union_acceptance_conditions_of_original_state((spot::state const *)arg2);
  resultobj = SWIG_NewPointerObj((new bdd(static_cast< const bdd& >(result))), SWIGTYPE_p_bdd, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_tba_proxy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_tba_proxy, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tgba_sba_proxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_sba_proxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_sba_proxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_sba_proxy" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba_sba_proxy *)new spot::tgba_sba_proxy((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_sba_proxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_sba_proxy_state_is_accepting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sba_proxy *arg1 = (spot::tgba_sba_proxy *) 0 ;
  spot::state *arg2 = (spot::state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_sba_proxy_state_is_accepting",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_sba_proxy_state_is_accepting" "', argument " "1"" of type '" "spot::tgba_sba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sba_proxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_sba_proxy_state_is_accepting" "', argument " "2"" of type '" "spot::state const *""'"); 
  }
  arg2 = reinterpret_cast< spot::state * >(argp2);
  result = (bool)((spot::tgba_sba_proxy const *)arg1)->state_is_accepting((spot::state const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_sba_proxy_get_init_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sba_proxy *arg1 = (spot::tgba_sba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::state *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_sba_proxy_get_init_state",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sba_proxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_sba_proxy_get_init_state" "', argument " "1"" of type '" "spot::tgba_sba_proxy const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sba_proxy * >(argp1);
  result = (spot::state *)((spot::tgba_sba_proxy const *)arg1)->get_init_state();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__state, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_sba_proxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sba_proxy *arg1 = (spot::tgba_sba_proxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_sba_proxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sba_proxy, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_sba_proxy" "', argument " "1"" of type '" "spot::tgba_sba_proxy *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sba_proxy * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_sba_proxy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_sba_proxy, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_dotty_decorator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::dotty_decorator *arg1 = (spot::dotty_decorator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_dotty_decorator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__dotty_decorator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dotty_decorator" "', argument " "1"" of type '" "spot::dotty_decorator *""'"); 
  }
  arg1 = reinterpret_cast< spot::dotty_decorator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty_decorator_state_decl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::dotty_decorator *arg1 = (spot::dotty_decorator *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  int arg4 ;
  spot::tgba_succ_iterator *arg5 = (spot::tgba_succ_iterator *) 0 ;
  std::string *arg6 = 0 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res6 = SWIG_OLDOBJ ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:dotty_decorator_state_decl",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__dotty_decorator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dotty_decorator_state_decl" "', argument " "1"" of type '" "spot::dotty_decorator *""'"); 
  }
  arg1 = reinterpret_cast< spot::dotty_decorator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dotty_decorator_state_decl" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dotty_decorator_state_decl" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "dotty_decorator_state_decl" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dotty_decorator_state_decl" "', argument " "5"" of type '" "spot::tgba_succ_iterator *""'"); 
  }
  arg5 = reinterpret_cast< spot::tgba_succ_iterator * >(argp5);
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string(obj5, &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "dotty_decorator_state_decl" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dotty_decorator_state_decl" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "dotty_decorator_state_decl" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (arg1)->state_decl((spot::tgba const *)arg2,(spot::state const *)arg3,arg4,arg5,(std::string const &)*arg6,arg7);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res6)) delete arg6;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res6)) delete arg6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty_decorator_link_decl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::dotty_decorator *arg1 = (spot::dotty_decorator *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  int arg4 ;
  spot::state *arg5 = (spot::state *) 0 ;
  int arg6 ;
  spot::tgba_succ_iterator *arg7 = (spot::tgba_succ_iterator *) 0 ;
  std::string *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:dotty_decorator_link_decl",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__dotty_decorator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dotty_decorator_link_decl" "', argument " "1"" of type '" "spot::dotty_decorator *""'"); 
  }
  arg1 = reinterpret_cast< spot::dotty_decorator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dotty_decorator_link_decl" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dotty_decorator_link_decl" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "dotty_decorator_link_decl" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dotty_decorator_link_decl" "', argument " "5"" of type '" "spot::state const *""'"); 
  }
  arg5 = reinterpret_cast< spot::state * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dotty_decorator_link_decl" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "dotty_decorator_link_decl" "', argument " "7"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg7 = reinterpret_cast< spot::tgba_succ_iterator * >(argp7);
  {
    std::string *ptr = (std::string *)0;
    res8 = SWIG_AsPtr_std_string(obj7, &ptr);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "dotty_decorator_link_decl" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dotty_decorator_link_decl" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    arg8 = ptr;
  }
  result = (arg1)->link_decl((spot::tgba const *)arg2,(spot::state const *)arg3,arg4,(spot::state const *)arg5,arg6,(spot::tgba_succ_iterator const *)arg7,(std::string const &)*arg8);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res8)) delete arg8;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res8)) delete arg8;
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty_decorator_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::dotty_decorator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":dotty_decorator_instance")) SWIG_fail;
  result = (spot::dotty_decorator *)spot::dotty_decorator::instance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__dotty_decorator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *dotty_decorator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__dotty_decorator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_dotty_reachable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  bool arg3 ;
  spot::dotty_decorator *arg4 = (spot::dotty_decorator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:dotty_reachable",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dotty_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dotty_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dotty_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dotty_reachable" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_spot__dotty_decorator, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dotty_reachable" "', argument " "4"" of type '" "spot::dotty_decorator *""'"); 
  }
  arg4 = reinterpret_cast< spot::dotty_decorator * >(argp4);
  result = (std::ostream *) &spot::dotty_reachable(*arg1,(spot::tgba const *)arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty_reachable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:dotty_reachable",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dotty_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dotty_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dotty_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dotty_reachable" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (std::ostream *) &spot::dotty_reachable(*arg1,(spot::tgba const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty_reachable__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:dotty_reachable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dotty_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dotty_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dotty_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  result = (std::ostream *) &spot::dotty_reachable(*arg1,(spot::tgba const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dotty_reachable(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__tgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dotty_reachable__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__tgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_dotty_reachable__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__tgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_spot__dotty_decorator, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_dotty_reachable__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'dotty_reachable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::dotty_reachable(std::ostream &,spot::tgba const *,bool,spot::dotty_decorator *)\n"
    "    spot::dotty_reachable(std::ostream &,spot::tgba const *,bool)\n"
    "    spot::dotty_reachable(std::ostream &,spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_dupexp_bfs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_dupexp_bfs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_dupexp_bfs" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba_explicit *)spot::tgba_dupexp_bfs((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_dupexp_dfs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_dupexp_dfs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_dupexp_dfs" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba_explicit *)spot::tgba_dupexp_dfs((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_emptiness_check_result__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::emptiness_check_result *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_emptiness_check_result",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_emptiness_check_result" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_emptiness_check_result" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_emptiness_check_result" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::emptiness_check_result *)new spot::emptiness_check_result((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check_result, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_emptiness_check_result__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check_result *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_emptiness_check_result",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_emptiness_check_result" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::emptiness_check_result *)new spot::emptiness_check_result((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check_result, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_emptiness_check_result(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_emptiness_check_result__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_emptiness_check_result__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_emptiness_check_result'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::emptiness_check_result::emptiness_check_result(spot::tgba const *,spot::option_map)\n"
    "    spot::emptiness_check_result::emptiness_check_result(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_emptiness_check_result(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_result *arg1 = (spot::emptiness_check_result *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_emptiness_check_result",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_result, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_emptiness_check_result" "', argument " "1"" of type '" "spot::emptiness_check_result *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_result * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_result_accepting_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_result *arg1 = (spot::emptiness_check_result *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_run *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_result_accepting_run",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_result, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_result_accepting_run" "', argument " "1"" of type '" "spot::emptiness_check_result *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_result * >(argp1);
  result = (spot::tgba_run *)(arg1)->accepting_run();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_run, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_result_automaton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_result *arg1 = (spot::emptiness_check_result *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_result_automaton",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_result, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_result_automaton" "', argument " "1"" of type '" "spot::emptiness_check_result const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_result * >(argp1);
  result = (spot::tgba *)((spot::emptiness_check_result const *)arg1)->automaton();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_result_options(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_result *arg1 = (spot::emptiness_check_result *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::option_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_result_options",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_result, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_result_options" "', argument " "1"" of type '" "spot::emptiness_check_result const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_result * >(argp1);
  result = (spot::option_map *) &((spot::emptiness_check_result const *)arg1)->options();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__option_map, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_result_parse_options(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_result *arg1 = (spot::emptiness_check_result *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:emptiness_check_result_parse_options",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_result, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_result_parse_options" "', argument " "1"" of type '" "spot::emptiness_check_result *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_result * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "emptiness_check_result_parse_options" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->parse_options(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_result_statistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_result *arg1 = (spot::emptiness_check_result *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned_statistics *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_result_statistics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_result, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_result_statistics" "', argument " "1"" of type '" "spot::emptiness_check_result const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_result * >(argp1);
  result = (unsigned_statistics *)((spot::emptiness_check_result const *)arg1)->statistics();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_statistics, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *emptiness_check_result_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__emptiness_check_result, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_emptiness_check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_emptiness_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_emptiness_check" "', argument " "1"" of type '" "spot::emptiness_check *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_automaton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_automaton",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_automaton" "', argument " "1"" of type '" "spot::emptiness_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  result = (spot::tgba *)((spot::emptiness_check const *)arg1)->automaton();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_options(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::option_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_options",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_options" "', argument " "1"" of type '" "spot::emptiness_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  result = (spot::option_map *) &((spot::emptiness_check const *)arg1)->options();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__option_map, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_parse_options(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:emptiness_check_parse_options",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_parse_options" "', argument " "1"" of type '" "spot::emptiness_check *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "emptiness_check_parse_options" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (char *)(arg1)->parse_options(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_safe(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_safe",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_safe" "', argument " "1"" of type '" "spot::emptiness_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  result = (bool)((spot::emptiness_check const *)arg1)->safe();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check_result *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_check" "', argument " "1"" of type '" "spot::emptiness_check *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  result = (spot::emptiness_check_result *)(arg1)->check();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check_result, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_statistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned_statistics *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_statistics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_statistics" "', argument " "1"" of type '" "spot::emptiness_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  result = (unsigned_statistics *)((spot::emptiness_check const *)arg1)->statistics();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_statistics, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_print_stats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:emptiness_check_print_stats",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_print_stats" "', argument " "1"" of type '" "spot::emptiness_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "emptiness_check_print_stats" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "emptiness_check_print_stats" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &((spot::emptiness_check const *)arg1)->print_stats(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_options_updated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check *arg1 = (spot::emptiness_check *) 0 ;
  spot::option_map *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:emptiness_check_options_updated",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_options_updated" "', argument " "1"" of type '" "spot::emptiness_check *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "emptiness_check_options_updated" "', argument " "2"" of type '" "spot::option_map const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "emptiness_check_options_updated" "', argument " "2"" of type '" "spot::option_map const &""'"); 
  }
  arg2 = reinterpret_cast< spot::option_map * >(argp2);
  (arg1)->options_updated((spot::option_map const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *emptiness_check_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__emptiness_check, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_construct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  char *temp2 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check_instantiator *result = 0 ;
  
  arg2 = &temp2;
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_instantiator_construct",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_instantiator_construct" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (spot::emptiness_check_instantiator *)spot::emptiness_check_instantiator::construct((char const *)arg1,(char const **)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check_instantiator, SWIG_POINTER_OWN |  0 );
  resultobj = t_output_helper(resultobj, SWIG_FromCharPtr(*arg2));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_instantiate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_instantiator *arg1 = (spot::emptiness_check_instantiator *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:emptiness_check_instantiator_instantiate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_instantiator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_instantiator_instantiate" "', argument " "1"" of type '" "spot::emptiness_check_instantiator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_instantiator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "emptiness_check_instantiator_instantiate" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  result = (spot::emptiness_check *)((spot::emptiness_check_instantiator const *)arg1)->instantiate((spot::tgba const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_options__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_instantiator *arg1 = (spot::emptiness_check_instantiator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::option_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_instantiator_options",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_instantiator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_instantiator_options" "', argument " "1"" of type '" "spot::emptiness_check_instantiator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_instantiator * >(argp1);
  result = (spot::option_map *) &((spot::emptiness_check_instantiator const *)arg1)->options();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__option_map, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_options__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_instantiator *arg1 = (spot::emptiness_check_instantiator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::option_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_instantiator_options",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_instantiator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_instantiator_options" "', argument " "1"" of type '" "spot::emptiness_check_instantiator *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_instantiator * >(argp1);
  result = (spot::option_map *) &(arg1)->options();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__option_map, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_options(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__emptiness_check_instantiator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_emptiness_check_instantiator_options__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__emptiness_check_instantiator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_emptiness_check_instantiator_options__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'emptiness_check_instantiator_options'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::emptiness_check_instantiator::options() const\n"
    "    spot::emptiness_check_instantiator::options()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_min_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_instantiator *arg1 = (spot::emptiness_check_instantiator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_instantiator_min_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_instantiator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_instantiator_min_acceptance_conditions" "', argument " "1"" of type '" "spot::emptiness_check_instantiator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_instantiator * >(argp1);
  result = (unsigned int)((spot::emptiness_check_instantiator const *)arg1)->min_acceptance_conditions();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_emptiness_check_instantiator_max_acceptance_conditions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_instantiator *arg1 = (spot::emptiness_check_instantiator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:emptiness_check_instantiator_max_acceptance_conditions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_instantiator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emptiness_check_instantiator_max_acceptance_conditions" "', argument " "1"" of type '" "spot::emptiness_check_instantiator const *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_instantiator * >(argp1);
  result = (unsigned int)((spot::emptiness_check_instantiator const *)arg1)->max_acceptance_conditions();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_emptiness_check_instantiator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::emptiness_check_instantiator *arg1 = (spot::emptiness_check_instantiator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_emptiness_check_instantiator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__emptiness_check_instantiator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_emptiness_check_instantiator" "', argument " "1"" of type '" "spot::emptiness_check_instantiator *""'"); 
  }
  arg1 = reinterpret_cast< spot::emptiness_check_instantiator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *emptiness_check_instantiator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__emptiness_check_instantiator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_tgba_run_prefix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = (spot::tgba_run *) 0 ;
  spot::tgba_run::steps *arg2 = (spot::tgba_run::steps *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_run_prefix_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_prefix_set" "', argument " "1"" of type '" "spot::tgba_run *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__listT_spot__step_std__allocatorT_spot__step_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_run_prefix_set" "', argument " "2"" of type '" "spot::tgba_run::steps *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_run::steps * >(argp2);
  if (arg1) (arg1)->prefix = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_run_prefix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = (spot::tgba_run *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_run::steps *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_run_prefix_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_prefix_get" "', argument " "1"" of type '" "spot::tgba_run *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  result = (spot::tgba_run::steps *)& ((arg1)->prefix);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_spot__step_std__allocatorT_spot__step_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_run_cycle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = (spot::tgba_run *) 0 ;
  spot::tgba_run::steps *arg2 = (spot::tgba_run::steps *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_run_cycle_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_cycle_set" "', argument " "1"" of type '" "spot::tgba_run *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__listT_spot__step_std__allocatorT_spot__step_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_run_cycle_set" "', argument " "2"" of type '" "spot::tgba_run::steps *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_run::steps * >(argp2);
  if (arg1) (arg1)->cycle = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_run_cycle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = (spot::tgba_run *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_run::steps *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_run_cycle_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_cycle_get" "', argument " "1"" of type '" "spot::tgba_run *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  result = (spot::tgba_run::steps *)& ((arg1)->cycle);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_spot__step_std__allocatorT_spot__step_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = (spot::tgba_run *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_run",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_run" "', argument " "1"" of type '" "spot::tgba_run *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_run__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_tgba_run")) SWIG_fail;
  result = (spot::tgba_run *)new spot::tgba_run();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_run, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_run__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_run *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_run",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_spot__tgba_run,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_run" "', argument " "1"" of type '" "spot::tgba_run const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tgba_run" "', argument " "1"" of type '" "spot::tgba_run const &""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  result = (spot::tgba_run *)new spot::tgba_run((spot::tgba_run const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_run, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_run(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_tgba_run__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_spot__tgba_run, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_tgba_run__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_tgba_run'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::tgba_run::tgba_run()\n"
    "    spot::tgba_run::tgba_run(spot::tgba_run const &)\n");
  return 0;
}


SWIGINTERN PyObject *tgba_run_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_run, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_print_tgba_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::tgba_run *arg3 = (spot::tgba_run *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:print_tgba_run",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "print_tgba_run" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "print_tgba_run" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "print_tgba_run" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "print_tgba_run" "', argument " "3"" of type '" "spot::tgba_run const *""'"); 
  }
  arg3 = reinterpret_cast< spot::tgba_run * >(argp3);
  result = (std::ostream *) &spot::print_tgba_run(*arg1,(spot::tgba const *)arg2,(spot::tgba_run const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_run_to_tgba(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::tgba_run *arg2 = (spot::tgba_run *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_run_to_tgba",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_to_tgba" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_run_to_tgba" "', argument " "2"" of type '" "spot::tgba_run const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba_run * >(argp2);
  result = (spot::tgba *)spot::tgba_run_to_tgba((spot::tgba const *)arg1,(spot::tgba_run const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  numbered_state_heap_factory *arg3 = (numbered_state_heap_factory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:couvreur99",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "couvreur99" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "couvreur99" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_numbered_state_heap_factory, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "couvreur99" "', argument " "3"" of type '" "numbered_state_heap_factory const *""'"); 
  }
  arg3 = reinterpret_cast< numbered_state_heap_factory * >(argp3);
  result = (spot::emptiness_check *)spot::couvreur99((spot::tgba const *)arg1,arg2,(numbered_state_heap_factory const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:couvreur99",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "couvreur99" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "couvreur99" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::emptiness_check *)spot::couvreur99((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:couvreur99",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::emptiness_check *)spot::couvreur99((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_couvreur99__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_couvreur99__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_numbered_state_heap_factory, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_couvreur99__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'couvreur99'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::couvreur99(spot::tgba const *,spot::option_map,numbered_state_heap_factory const *)\n"
    "    spot::couvreur99(spot::tgba const *,spot::option_map)\n"
    "    spot::couvreur99(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  numbered_state_heap_factory *arg3 = (numbered_state_heap_factory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::couvreur99_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_couvreur99_check",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_couvreur99_check" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_couvreur99_check" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_couvreur99_check" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_numbered_state_heap_factory, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_couvreur99_check" "', argument " "3"" of type '" "numbered_state_heap_factory const *""'"); 
  }
  arg3 = reinterpret_cast< numbered_state_heap_factory * >(argp3);
  result = (spot::couvreur99_check *)new spot::couvreur99_check((spot::tgba const *)arg1,arg2,(numbered_state_heap_factory const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__couvreur99_check, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::couvreur99_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_couvreur99_check",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_couvreur99_check" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_couvreur99_check" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_couvreur99_check" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::couvreur99_check *)new spot::couvreur99_check((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__couvreur99_check, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::couvreur99_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_couvreur99_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_couvreur99_check" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::couvreur99_check *)new spot::couvreur99_check((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__couvreur99_check, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_couvreur99_check__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_couvreur99_check__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_numbered_state_heap_factory, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_couvreur99_check__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_couvreur99_check'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::couvreur99_check::couvreur99_check(spot::tgba const *,spot::option_map,numbered_state_heap_factory const *)\n"
    "    spot::couvreur99_check::couvreur99_check(spot::tgba const *,spot::option_map)\n"
    "    spot::couvreur99_check::couvreur99_check(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_couvreur99_check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::couvreur99_check *arg1 = (spot::couvreur99_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_couvreur99_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__couvreur99_check, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_couvreur99_check" "', argument " "1"" of type '" "spot::couvreur99_check *""'"); 
  }
  arg1 = reinterpret_cast< spot::couvreur99_check * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99_check_check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::couvreur99_check *arg1 = (spot::couvreur99_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check_result *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:couvreur99_check_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__couvreur99_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99_check_check" "', argument " "1"" of type '" "spot::couvreur99_check *""'"); 
  }
  arg1 = reinterpret_cast< spot::couvreur99_check * >(argp1);
  result = (spot::emptiness_check_result *)(arg1)->check();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check_result, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99_check_print_stats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::couvreur99_check *arg1 = (spot::couvreur99_check *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:couvreur99_check_print_stats",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__couvreur99_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99_check_print_stats" "', argument " "1"" of type '" "spot::couvreur99_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::couvreur99_check * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "couvreur99_check_print_stats" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "couvreur99_check_print_stats" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &((spot::couvreur99_check const *)arg1)->print_stats(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99_check_result(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::couvreur99_check *arg1 = (spot::couvreur99_check *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  couvreur99_check_status *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:couvreur99_check_result",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__couvreur99_check, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99_check_result" "', argument " "1"" of type '" "spot::couvreur99_check const *""'"); 
  }
  arg1 = reinterpret_cast< spot::couvreur99_check * >(argp1);
  result = (couvreur99_check_status *)((spot::couvreur99_check const *)arg1)->result();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_couvreur99_check_status, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *couvreur99_check_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__couvreur99_check, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_couvreur99_check_shy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  numbered_state_heap_factory *arg3 = (numbered_state_heap_factory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::couvreur99_check_shy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_couvreur99_check_shy",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_couvreur99_check_shy" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_couvreur99_check_shy" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_couvreur99_check_shy" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_numbered_state_heap_factory, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_couvreur99_check_shy" "', argument " "3"" of type '" "numbered_state_heap_factory const *""'"); 
  }
  arg3 = reinterpret_cast< numbered_state_heap_factory * >(argp3);
  result = (spot::couvreur99_check_shy *)new spot::couvreur99_check_shy((spot::tgba const *)arg1,arg2,(numbered_state_heap_factory const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__couvreur99_check_shy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check_shy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::couvreur99_check_shy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_couvreur99_check_shy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_couvreur99_check_shy" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_couvreur99_check_shy" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_couvreur99_check_shy" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::couvreur99_check_shy *)new spot::couvreur99_check_shy((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__couvreur99_check_shy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check_shy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::couvreur99_check_shy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_couvreur99_check_shy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_couvreur99_check_shy" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::couvreur99_check_shy *)new spot::couvreur99_check_shy((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__couvreur99_check_shy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_couvreur99_check_shy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_couvreur99_check_shy__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_couvreur99_check_shy__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_numbered_state_heap_factory, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_couvreur99_check_shy__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_couvreur99_check_shy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::couvreur99_check_shy::couvreur99_check_shy(spot::tgba const *,spot::option_map,numbered_state_heap_factory const *)\n"
    "    spot::couvreur99_check_shy::couvreur99_check_shy(spot::tgba const *,spot::option_map)\n"
    "    spot::couvreur99_check_shy::couvreur99_check_shy(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_couvreur99_check_shy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::couvreur99_check_shy *arg1 = (spot::couvreur99_check_shy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_couvreur99_check_shy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__couvreur99_check_shy, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_couvreur99_check_shy" "', argument " "1"" of type '" "spot::couvreur99_check_shy *""'"); 
  }
  arg1 = reinterpret_cast< spot::couvreur99_check_shy * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_couvreur99_check_shy_check(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::couvreur99_check_shy *arg1 = (spot::couvreur99_check_shy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check_result *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:couvreur99_check_shy_check",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__couvreur99_check_shy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "couvreur99_check_shy_check" "', argument " "1"" of type '" "spot::couvreur99_check_shy *""'"); 
  }
  arg1 = reinterpret_cast< spot::couvreur99_check_shy * >(argp1);
  result = (spot::emptiness_check_result *)(arg1)->check();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check_result, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *couvreur99_check_shy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__couvreur99_check_shy, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_lbtt_reachable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lbtt_reachable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lbtt_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lbtt_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lbtt_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  result = (std::ostream *) &spot::lbtt_reachable(*arg1,(spot::tgba const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_taa__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::taa_tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ltl_to_taa",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_taa" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_taa" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_taa" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (spot::taa_tgba *)spot::ltl_to_taa((spot::ltl::formula const *)arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__taa_tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_taa__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::taa_tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ltl_to_taa",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_taa" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_taa" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  result = (spot::taa_tgba *)spot::ltl_to_taa((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__taa_tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_taa(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ltl_to_taa__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ltl_to_taa__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ltl_to_taa'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl_to_taa(spot::ltl::formula const *,spot::bdd_dict *,bool)\n"
    "    spot::ltl_to_taa(spot::ltl::formula const *,spot::bdd_dict *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  spot::ltl::atomic_prop_set *arg7 = (spot::ltl::atomic_prop_set *) 0 ;
  int arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:ltl_to_tgba_fm",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_tgba_fm" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ltl_to_tgba_fm" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ltl_to_tgba_fm" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ltl_to_tgba_fm" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_spot__ltl__atomic_prop_set, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ltl_to_tgba_fm" "', argument " "7"" of type '" "spot::ltl::atomic_prop_set const *""'"); 
  }
  arg7 = reinterpret_cast< spot::ltl::atomic_prop_set * >(argp7);
  ecode8 = SWIG_AsVal_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "ltl_to_tgba_fm" "', argument " "8"" of type '" "int""'");
  } 
  arg8 = static_cast< int >(val8);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2,arg3,arg4,arg5,arg6,(spot::ltl::atomic_prop_set const *)arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  spot::ltl::atomic_prop_set *arg7 = (spot::ltl::atomic_prop_set *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:ltl_to_tgba_fm",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_tgba_fm" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ltl_to_tgba_fm" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ltl_to_tgba_fm" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ltl_to_tgba_fm" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_spot__ltl__atomic_prop_set, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ltl_to_tgba_fm" "', argument " "7"" of type '" "spot::ltl::atomic_prop_set const *""'"); 
  }
  arg7 = reinterpret_cast< spot::ltl::atomic_prop_set * >(argp7);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2,arg3,arg4,arg5,arg6,(spot::ltl::atomic_prop_set const *)arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:ltl_to_tgba_fm",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_tgba_fm" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ltl_to_tgba_fm" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ltl_to_tgba_fm" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ltl_to_tgba_fm" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:ltl_to_tgba_fm",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_tgba_fm" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ltl_to_tgba_fm" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ltl_to_tgba_fm" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ltl_to_tgba_fm",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_tgba_fm" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ltl_to_tgba_fm" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ltl_to_tgba_fm",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ltl_to_tgba_fm" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_explicit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ltl_to_tgba_fm",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_fm" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_fm" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_fm(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ltl_to_tgba_fm__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ltl_to_tgba_fm__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_ltl_to_tgba_fm__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ltl_to_tgba_fm__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_ltl_to_tgba_fm__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_spot__ltl__atomic_prop_set, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_ltl_to_tgba_fm__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__bdd_dict, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_spot__ltl__atomic_prop_set, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_int(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_ltl_to_tgba_fm__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ltl_to_tgba_fm'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *,bool,bool,bool,bool,spot::ltl::atomic_prop_set const *,int)\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *,bool,bool,bool,bool,spot::ltl::atomic_prop_set const *)\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *,bool,bool,bool,bool)\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *,bool,bool,bool)\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *,bool,bool)\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *,bool)\n"
    "    spot::ltl_to_tgba_fm(spot::ltl::formula const *,spot::bdd_dict *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ltl_to_tgba_lacim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
  spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba_bdd_concrete *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ltl_to_tgba_lacim",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ltl_to_tgba_lacim" "', argument " "1"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg1 = reinterpret_cast< spot::ltl::formula * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__bdd_dict, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ltl_to_tgba_lacim" "', argument " "2"" of type '" "spot::bdd_dict *""'"); 
  }
  arg2 = reinterpret_cast< spot::bdd_dict * >(argp2);
  result = (spot::tgba_bdd_concrete *)spot::ltl_to_tgba_lacim((spot::ltl::formula const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_bdd_concrete, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_explicit_magic_search__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:explicit_magic_search",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "explicit_magic_search" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "explicit_magic_search" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "explicit_magic_search" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::emptiness_check *)spot::explicit_magic_search((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_explicit_magic_search__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:explicit_magic_search",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "explicit_magic_search" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::emptiness_check *)spot::explicit_magic_search((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_explicit_magic_search(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_explicit_magic_search__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_explicit_magic_search__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'explicit_magic_search'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::explicit_magic_search(spot::tgba const *,spot::option_map)\n"
    "    spot::explicit_magic_search(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_bit_state_hashing_magic_search__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  size_t arg2 ;
  spot::option_map arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:bit_state_hashing_magic_search",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bit_state_hashing_magic_search" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bit_state_hashing_magic_search" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "bit_state_hashing_magic_search" "', argument " "3"" of type '" "spot::option_map""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bit_state_hashing_magic_search" "', argument " "3"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (spot::emptiness_check *)spot::bit_state_hashing_magic_search((spot::tgba const *)arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bit_state_hashing_magic_search__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bit_state_hashing_magic_search",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bit_state_hashing_magic_search" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bit_state_hashing_magic_search" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (spot::emptiness_check *)spot::bit_state_hashing_magic_search((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bit_state_hashing_magic_search(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_bit_state_hashing_magic_search__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_spot__option_map, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_bit_state_hashing_magic_search__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'bit_state_hashing_magic_search'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::bit_state_hashing_magic_search(spot::tgba const *,size_t,spot::option_map)\n"
    "    spot::bit_state_hashing_magic_search(spot::tgba const *,size_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_magic_search__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::option_map arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:magic_search",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "magic_search" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_spot__option_map,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "magic_search" "', argument " "2"" of type '" "spot::option_map""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "magic_search" "', argument " "2"" of type '" "spot::option_map""'");
    } else {
      spot::option_map * temp = reinterpret_cast< spot::option_map * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (spot::emptiness_check *)spot::magic_search((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_magic_search__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::emptiness_check *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:magic_search",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "magic_search" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::emptiness_check *)spot::magic_search((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__emptiness_check, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_magic_search(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_magic_search__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_spot__option_map, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_magic_search__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'magic_search'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::magic_search(spot::tgba const *,spot::option_map)\n"
    "    spot::magic_search(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_minimize_monitor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_explicit_number *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:minimize_monitor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minimize_monitor" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba_explicit_number *)spot::minimize_monitor((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit_number, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_minimize_wdba(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_explicit_number *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:minimize_wdba",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minimize_wdba" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba_explicit_number *)spot::minimize_wdba((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_explicit_number, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_minimize_obligation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  spot::tgba *arg3 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:minimize_obligation",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minimize_obligation" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "minimize_obligation" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "minimize_obligation" "', argument " "3"" of type '" "spot::tgba const *""'"); 
  }
  arg3 = reinterpret_cast< spot::tgba * >(argp3);
  result = (spot::tgba *)spot::minimize_obligation((spot::tgba const *)arg1,(spot::ltl::formula const *)arg2,(spot::tgba const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_minimize_obligation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:minimize_obligation",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minimize_obligation" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "minimize_obligation" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (spot::tgba *)spot::minimize_obligation((spot::tgba const *)arg1,(spot::ltl::formula const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_minimize_obligation__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:minimize_obligation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minimize_obligation" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba *)spot::minimize_obligation((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_minimize_obligation(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_minimize_obligation__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_minimize_obligation__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__tgba, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_minimize_obligation__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'minimize_obligation'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::minimize_obligation(spot::tgba const *,spot::ltl::formula const *,spot::tgba const *)\n"
    "    spot::minimize_obligation(spot::tgba const *,spot::ltl::formula const *)\n"
    "    spot::minimize_obligation(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_never_claim_reachable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:never_claim_reachable",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "never_claim_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "never_claim_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "never_claim_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "never_claim_reachable" "', argument " "3"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "never_claim_reachable" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (std::ostream *) &spot::never_claim_reachable(*arg1,(spot::tgba const *)arg2,(spot::ltl::formula const *)arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_never_claim_reachable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:never_claim_reachable",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "never_claim_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "never_claim_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "never_claim_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "never_claim_reachable" "', argument " "3"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg3 = reinterpret_cast< spot::ltl::formula * >(argp3);
  result = (std::ostream *) &spot::never_claim_reachable(*arg1,(spot::tgba const *)arg2,(spot::ltl::formula const *)arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_never_claim_reachable__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:never_claim_reachable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "never_claim_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "never_claim_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "never_claim_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  result = (std::ostream *) &spot::never_claim_reachable(*arg1,(spot::tgba const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_never_claim_reachable(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__tgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_never_claim_reachable__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__tgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_never_claim_reachable__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ostream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_spot__tgba, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_spot__ltl__formula, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_never_claim_reachable__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'never_claim_reachable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::never_claim_reachable(std::ostream &,spot::tgba const *,spot::ltl::formula const *,bool)\n"
    "    spot::never_claim_reachable(std::ostream &,spot::tgba const *,spot::ltl::formula const *)\n"
    "    spot::never_claim_reachable(std::ostream &,spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_reduc_tgba_sim__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:reduc_tgba_sim",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reduc_tgba_sim" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "reduc_tgba_sim" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (spot::tgba *)spot::reduc_tgba_sim((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reduc_tgba_sim__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:reduc_tgba_sim",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reduc_tgba_sim" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba *)spot::reduc_tgba_sim((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reduc_tgba_sim(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_reduc_tgba_sim__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_reduc_tgba_sim__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'reduc_tgba_sim'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::reduc_tgba_sim(spot::tgba const *,int)\n"
    "    spot::reduc_tgba_sim(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_tgba_run_dotty_decorator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run *arg1 = (spot::tgba_run *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_run_dotty_decorator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tgba_run_dotty_decorator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tgba_run_dotty_decorator" "', argument " "1"" of type '" "spot::tgba_run const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run * >(argp1);
  result = (spot::tgba_run_dotty_decorator *)new spot::tgba_run_dotty_decorator((spot::tgba_run const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_run_dotty_decorator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_run_dotty_decorator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run_dotty_decorator *arg1 = (spot::tgba_run_dotty_decorator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_run_dotty_decorator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run_dotty_decorator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_run_dotty_decorator" "', argument " "1"" of type '" "spot::tgba_run_dotty_decorator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run_dotty_decorator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_run_dotty_decorator_state_decl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run_dotty_decorator *arg1 = (spot::tgba_run_dotty_decorator *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  int arg4 ;
  spot::tgba_succ_iterator *arg5 = (spot::tgba_succ_iterator *) 0 ;
  std::string *arg6 = 0 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int res6 = SWIG_OLDOBJ ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:tgba_run_dotty_decorator_state_decl",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run_dotty_decorator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "1"" of type '" "spot::tgba_run_dotty_decorator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run_dotty_decorator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "5"" of type '" "spot::tgba_succ_iterator *""'"); 
  }
  arg5 = reinterpret_cast< spot::tgba_succ_iterator * >(argp5);
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string(obj5, &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "tgba_run_dotty_decorator_state_decl" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  result = (arg1)->state_decl((spot::tgba const *)arg2,(spot::state const *)arg3,arg4,arg5,(std::string const &)*arg6,arg7);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res6)) delete arg6;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res6)) delete arg6;
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_run_dotty_decorator_link_decl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_run_dotty_decorator *arg1 = (spot::tgba_run_dotty_decorator *) 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  spot::state *arg3 = (spot::state *) 0 ;
  int arg4 ;
  spot::state *arg5 = (spot::state *) 0 ;
  int arg6 ;
  spot::tgba_succ_iterator *arg7 = (spot::tgba_succ_iterator *) 0 ;
  std::string *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  int res8 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:tgba_run_dotty_decorator_link_decl",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_run_dotty_decorator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "1"" of type '" "spot::tgba_run_dotty_decorator *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_run_dotty_decorator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "3"" of type '" "spot::state const *""'"); 
  }
  arg3 = reinterpret_cast< spot::state * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_spot__state, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "5"" of type '" "spot::state const *""'"); 
  }
  arg5 = reinterpret_cast< spot::state * >(argp5);
  ecode6 = SWIG_AsVal_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_spot__tgba_succ_iterator, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "7"" of type '" "spot::tgba_succ_iterator const *""'"); 
  }
  arg7 = reinterpret_cast< spot::tgba_succ_iterator * >(argp7);
  {
    std::string *ptr = (std::string *)0;
    res8 = SWIG_AsPtr_std_string(obj7, &ptr);
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_run_dotty_decorator_link_decl" "', argument " "8"" of type '" "std::string const &""'"); 
    }
    arg8 = ptr;
  }
  result = (arg1)->link_decl((spot::tgba const *)arg2,(spot::state const *)arg3,arg4,(spot::state const *)arg5,arg6,(spot::tgba_succ_iterator const *)arg7,(std::string const &)*arg8);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res8)) delete arg8;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res8)) delete arg8;
  return NULL;
}


SWIGINTERN PyObject *tgba_run_dotty_decorator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_run_dotty_decorator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_tgba_save_reachable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  spot::tgba *arg2 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_save_reachable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_save_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_save_reachable" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_save_reachable" "', argument " "2"" of type '" "spot::tgba const *""'"); 
  }
  arg2 = reinterpret_cast< spot::tgba * >(argp2);
  result = (std::ostream *) &spot::tgba_save_reachable(*arg1,(spot::tgba const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scc_filter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:scc_filter",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scc_filter" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "scc_filter" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (spot::tgba *)spot::scc_filter((spot::tgba const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scc_filter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:scc_filter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "scc_filter" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = (spot::tgba *)spot::scc_filter((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_scc_filter(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_scc_filter__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_spot__tgba, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_scc_filter__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'scc_filter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    spot::scc_filter(spot::tgba const *,bool)\n"
    "    spot::scc_filter(spot::tgba const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tgba_statistics_transitions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *arg1 = (spot::tgba_statistics *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_statistics_transitions_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_statistics_transitions_set" "', argument " "1"" of type '" "spot::tgba_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_statistics * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tgba_statistics_transitions_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->transitions = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_statistics_transitions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *arg1 = (spot::tgba_statistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_statistics_transitions_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_statistics_transitions_get" "', argument " "1"" of type '" "spot::tgba_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_statistics * >(argp1);
  result = (unsigned int) ((arg1)->transitions);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_statistics_states_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *arg1 = (spot::tgba_statistics *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_statistics_states_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_statistics_states_set" "', argument " "1"" of type '" "spot::tgba_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_statistics * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tgba_statistics_states_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->states = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_statistics_states_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *arg1 = (spot::tgba_statistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_statistics_states_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_statistics_states_get" "', argument " "1"" of type '" "spot::tgba_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_statistics * >(argp1);
  result = (unsigned int) ((arg1)->states);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_statistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_tgba_statistics")) SWIG_fail;
  result = (spot::tgba_statistics *)new spot::tgba_statistics();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_statistics, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_statistics_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *arg1 = (spot::tgba_statistics *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_statistics_dump",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_statistics_dump" "', argument " "1"" of type '" "spot::tgba_statistics const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_statistics * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_statistics_dump" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_statistics_dump" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &((spot::tgba_statistics const *)arg1)->dump(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_statistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_statistics *arg1 = (spot::tgba_statistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_statistics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_statistics, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_statistics" "', argument " "1"" of type '" "spot::tgba_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_statistics * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_statistics_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_statistics, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_tgba_sub_statistics_sub_transitions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sub_statistics *arg1 = (spot::tgba_sub_statistics *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_sub_statistics_sub_transitions_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sub_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_sub_statistics_sub_transitions_set" "', argument " "1"" of type '" "spot::tgba_sub_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sub_statistics * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tgba_sub_statistics_sub_transitions_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->sub_transitions = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_sub_statistics_sub_transitions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sub_statistics *arg1 = (spot::tgba_sub_statistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tgba_sub_statistics_sub_transitions_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sub_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_sub_statistics_sub_transitions_get" "', argument " "1"" of type '" "spot::tgba_sub_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sub_statistics * >(argp1);
  result = (unsigned int) ((arg1)->sub_transitions);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tgba_sub_statistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sub_statistics *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_tgba_sub_statistics")) SWIG_fail;
  result = (spot::tgba_sub_statistics *)new spot::tgba_sub_statistics();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba_sub_statistics, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tgba_sub_statistics_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sub_statistics *arg1 = (spot::tgba_sub_statistics *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tgba_sub_statistics_dump",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sub_statistics, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tgba_sub_statistics_dump" "', argument " "1"" of type '" "spot::tgba_sub_statistics const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sub_statistics * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tgba_sub_statistics_dump" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tgba_sub_statistics_dump" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  result = (std::ostream *) &((spot::tgba_sub_statistics const *)arg1)->dump(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_tgba_sub_statistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba_sub_statistics *arg1 = (spot::tgba_sub_statistics *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tgba_sub_statistics",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba_sub_statistics, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tgba_sub_statistics" "', argument " "1"" of type '" "spot::tgba_sub_statistics *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba_sub_statistics * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tgba_sub_statistics_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_spot__tgba_sub_statistics, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_stats_reachable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_statistics result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:stats_reachable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "stats_reachable" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = spot::stats_reachable((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj((new spot::tgba_statistics(static_cast< const spot::tgba_statistics& >(result))), SWIGTYPE_p_spot__tgba_statistics, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sub_stats_reachable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  spot::tgba_sub_statistics result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sub_stats_reachable",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sub_stats_reachable" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  result = spot::sub_stats_reachable((spot::tgba const *)arg1);
  resultobj = SWIG_NewPointerObj((new spot::tgba_sub_statistics(static_cast< const spot::tgba_sub_statistics& >(result))), SWIGTYPE_p_spot__tgba_sub_statistics, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = (std::ostream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ostream",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ostream, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ostream" "', argument " "1"" of type '" "std::ostream *""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ostream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__ostream, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ofstream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  std::ofstream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ofstream",&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ofstream" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (std::ofstream *)new std::ofstream((char const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ofstream, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ofstream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ofstream *arg1 = (std::ofstream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ofstream",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ofstream, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ofstream" "', argument " "1"" of type '" "std::ofstream *""'"); 
  }
  arg1 = reinterpret_cast< std::ofstream * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ofstream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__ofstream, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ostringstream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostringstream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ostringstream")) SWIG_fail;
  result = (std::ostringstream *)new std::ostringstream();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostringstream, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ostringstream_str(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostringstream *arg1 = (std::ostringstream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ostringstream_str",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ostringstream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostringstream_str" "', argument " "1"" of type '" "std::ostringstream const *""'"); 
  }
  arg1 = reinterpret_cast< std::ostringstream * >(argp1);
  result = ((std::ostringstream const *)arg1)->str();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ostringstream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostringstream *arg1 = (std::ostringstream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ostringstream",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ostringstream, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ostringstream" "', argument " "1"" of type '" "std::ostringstream *""'"); 
  }
  arg1 = reinterpret_cast< std::ostringstream * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ostringstream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__ostringstream, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_minimize_obligation_new(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::tgba *arg1 = (spot::tgba *) 0 ;
  spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  spot::tgba *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:minimize_obligation_new",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_spot__tgba, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "minimize_obligation_new" "', argument " "1"" of type '" "spot::tgba const *""'"); 
  }
  arg1 = reinterpret_cast< spot::tgba * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_spot__ltl__formula, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "minimize_obligation_new" "', argument " "2"" of type '" "spot::ltl::formula const *""'"); 
  }
  arg2 = reinterpret_cast< spot::ltl::formula * >(argp2);
  result = (spot::tgba *)minimize_obligation_new((spot::tgba const *)arg1,(spot::ltl::formula const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_spot__tgba, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_empty_parse_error_list(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  spot::ltl::parse_error_list result;
  
  if (!PyArg_ParseTuple(args,(char *)":empty_parse_error_list")) SWIG_fail;
  result = empty_parse_error_list();
  resultobj = SWIG_NewPointerObj((new spot::ltl::parse_error_list(static_cast< const spot::ltl::parse_error_list& >(result))), SWIGTYPE_p_spot__ltl__parse_error_list, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_get_cout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":get_cout")) SWIG_fail;
  result = (std::ostream *) &get_cout();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_get_cerr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":get_cerr")) SWIG_fail;
  result = (std::ostream *) &get_cerr();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_print_on(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::ostream *arg1 = 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:print_on",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "print_on" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "print_on" "', argument " "1"" of type '" "std::ostream &""'"); 
  }
  arg1 = reinterpret_cast< std::ostream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "print_on" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "print_on" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  print_on(*arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_unblock_signal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unblock_signal",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unblock_signal" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)unblock_signal(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"version", _wrap_version, METH_VARARGS, NULL},
	 { (char *)"new_bdd_allocator", _wrap_new_bdd_allocator, METH_VARARGS, NULL},
	 { (char *)"bdd_allocator_initialize", _wrap_bdd_allocator_initialize, METH_VARARGS, NULL},
	 { (char *)"bdd_allocator_allocate_variables", _wrap_bdd_allocator_allocate_variables, METH_VARARGS, NULL},
	 { (char *)"bdd_allocator_release_variables", _wrap_bdd_allocator_release_variables, METH_VARARGS, NULL},
	 { (char *)"delete_bdd_allocator", _wrap_delete_bdd_allocator, METH_VARARGS, NULL},
	 { (char *)"bdd_allocator_swigregister", bdd_allocator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_minato_isop", _wrap_new_minato_isop, METH_VARARGS, NULL},
	 { (char *)"minato_isop_next", _wrap_minato_isop_next, METH_VARARGS, NULL},
	 { (char *)"delete_minato_isop", _wrap_delete_minato_isop, METH_VARARGS, NULL},
	 { (char *)"minato_isop_swigregister", minato_isop_swigregister, METH_VARARGS, NULL},
	 { (char *)"option_map_parse_options", _wrap_option_map_parse_options, METH_VARARGS, NULL},
	 { (char *)"option_map_get", _wrap_option_map_get, METH_VARARGS, NULL},
	 { (char *)"option_map_set", _wrap_option_map_set, METH_VARARGS, NULL},
	 { (char *)"new_option_map", _wrap_new_option_map, METH_VARARGS, NULL},
	 { (char *)"delete_option_map", _wrap_delete_option_map, METH_VARARGS, NULL},
	 { (char *)"option_map_swigregister", option_map_swigregister, METH_VARARGS, NULL},
	 { (char *)"srand", _wrap_srand, METH_VARARGS, NULL},
	 { (char *)"rrand", _wrap_rrand, METH_VARARGS, NULL},
	 { (char *)"mrand", _wrap_mrand, METH_VARARGS, NULL},
	 { (char *)"drand", _wrap_drand, METH_VARARGS, NULL},
	 { (char *)"nrand", _wrap_nrand, METH_VARARGS, NULL},
	 { (char *)"bmrand", _wrap_bmrand, METH_VARARGS, NULL},
	 { (char *)"prand", _wrap_prand, METH_VARARGS, NULL},
	 { (char *)"new_loopless_modular_mixed_radix_gray_code", _wrap_new_loopless_modular_mixed_radix_gray_code, METH_VARARGS, NULL},
	 { (char *)"delete_loopless_modular_mixed_radix_gray_code", _wrap_delete_loopless_modular_mixed_radix_gray_code, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_a_first", _wrap_loopless_modular_mixed_radix_gray_code_a_first, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_a_next", _wrap_loopless_modular_mixed_radix_gray_code_a_next, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_a_last", _wrap_loopless_modular_mixed_radix_gray_code_a_last, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_first", _wrap_loopless_modular_mixed_radix_gray_code_first, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_last", _wrap_loopless_modular_mixed_radix_gray_code_last, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_done", _wrap_loopless_modular_mixed_radix_gray_code_done, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_next", _wrap_loopless_modular_mixed_radix_gray_code_next, METH_VARARGS, NULL},
	 { (char *)"disown_loopless_modular_mixed_radix_gray_code", _wrap_disown_loopless_modular_mixed_radix_gray_code, METH_VARARGS, NULL},
	 { (char *)"loopless_modular_mixed_radix_gray_code_swigregister", loopless_modular_mixed_radix_gray_code_swigregister, METH_VARARGS, NULL},
	 { (char *)"formula_accept", _wrap_formula_accept, METH_VARARGS, NULL},
	 { (char *)"formula_clone", _wrap_formula_clone, METH_VARARGS, NULL},
	 { (char *)"formula_destroy", _wrap_formula_destroy, METH_VARARGS, NULL},
	 { (char *)"formula_dump", _wrap_formula_dump, METH_VARARGS, NULL},
	 { (char *)"formula_hash", _wrap_formula_hash, METH_VARARGS, NULL},
	 { (char *)"formula___cmp__", _wrap_formula___cmp__, METH_VARARGS, NULL},
	 { (char *)"formula___str__", _wrap_formula___str__, METH_VARARGS, NULL},
	 { (char *)"formula_swigregister", formula_swigregister, METH_VARARGS, NULL},
	 { (char *)"formula_ptr_less_than___call__", _wrap_formula_ptr_less_than___call__, METH_VARARGS, NULL},
	 { (char *)"new_formula_ptr_less_than", _wrap_new_formula_ptr_less_than, METH_VARARGS, NULL},
	 { (char *)"delete_formula_ptr_less_than", _wrap_delete_formula_ptr_less_than, METH_VARARGS, NULL},
	 { (char *)"formula_ptr_less_than_swigregister", formula_ptr_less_than_swigregister, METH_VARARGS, NULL},
	 { (char *)"formula_ptr_hash___call__", _wrap_formula_ptr_hash___call__, METH_VARARGS, NULL},
	 { (char *)"new_formula_ptr_hash", _wrap_new_formula_ptr_hash, METH_VARARGS, NULL},
	 { (char *)"delete_formula_ptr_hash", _wrap_delete_formula_ptr_hash, METH_VARARGS, NULL},
	 { (char *)"formula_ptr_hash_swigregister", formula_ptr_hash_swigregister, METH_VARARGS, NULL},
	 { (char *)"ref_formula_swigregister", ref_formula_swigregister, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_instance", _wrap_atomic_prop_instance, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_accept", _wrap_atomic_prop_accept, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_name", _wrap_atomic_prop_name, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_env", _wrap_atomic_prop_env, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_dump", _wrap_atomic_prop_dump, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_instance_count", _wrap_atomic_prop_instance_count, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_dump_instances", _wrap_atomic_prop_dump_instances, METH_VARARGS, NULL},
	 { (char *)"atomic_prop_swigregister", atomic_prop_swigregister, METH_VARARGS, NULL},
	 { (char *)"binop_instance", _wrap_binop_instance, METH_VARARGS, NULL},
	 { (char *)"binop_accept", _wrap_binop_accept, METH_VARARGS, NULL},
	 { (char *)"binop_first", _wrap_binop_first, METH_VARARGS, NULL},
	 { (char *)"binop_second", _wrap_binop_second, METH_VARARGS, NULL},
	 { (char *)"binop_op", _wrap_binop_op, METH_VARARGS, NULL},
	 { (char *)"binop_op_name", _wrap_binop_op_name, METH_VARARGS, NULL},
	 { (char *)"binop_dump", _wrap_binop_dump, METH_VARARGS, NULL},
	 { (char *)"binop_instance_count", _wrap_binop_instance_count, METH_VARARGS, NULL},
	 { (char *)"binop_dump_instances", _wrap_binop_dump_instances, METH_VARARGS, NULL},
	 { (char *)"binop_swigregister", binop_swigregister, METH_VARARGS, NULL},
	 { (char *)"constant_accept", _wrap_constant_accept, METH_VARARGS, NULL},
	 { (char *)"constant_val", _wrap_constant_val, METH_VARARGS, NULL},
	 { (char *)"constant_val_name", _wrap_constant_val_name, METH_VARARGS, NULL},
	 { (char *)"constant_dump", _wrap_constant_dump, METH_VARARGS, NULL},
	 { (char *)"constant_true_instance", _wrap_constant_true_instance, METH_VARARGS, NULL},
	 { (char *)"constant_false_instance", _wrap_constant_false_instance, METH_VARARGS, NULL},
	 { (char *)"constant_swigregister", constant_swigregister, METH_VARARGS, NULL},
	 { (char *)"multop_instance", _wrap_multop_instance, METH_VARARGS, NULL},
	 { (char *)"multop_accept", _wrap_multop_accept, METH_VARARGS, NULL},
	 { (char *)"multop_size", _wrap_multop_size, METH_VARARGS, NULL},
	 { (char *)"multop_nth", _wrap_multop_nth, METH_VARARGS, NULL},
	 { (char *)"multop_op", _wrap_multop_op, METH_VARARGS, NULL},
	 { (char *)"multop_op_name", _wrap_multop_op_name, METH_VARARGS, NULL},
	 { (char *)"multop_dump", _wrap_multop_dump, METH_VARARGS, NULL},
	 { (char *)"multop_instance_count", _wrap_multop_instance_count, METH_VARARGS, NULL},
	 { (char *)"multop_dump_instances", _wrap_multop_dump_instances, METH_VARARGS, NULL},
	 { (char *)"multop_swigregister", multop_swigregister, METH_VARARGS, NULL},
	 { (char *)"unop_instance", _wrap_unop_instance, METH_VARARGS, NULL},
	 { (char *)"unop_accept", _wrap_unop_accept, METH_VARARGS, NULL},
	 { (char *)"unop_child", _wrap_unop_child, METH_VARARGS, NULL},
	 { (char *)"unop_op", _wrap_unop_op, METH_VARARGS, NULL},
	 { (char *)"unop_op_name", _wrap_unop_op_name, METH_VARARGS, NULL},
	 { (char *)"unop_dump", _wrap_unop_dump, METH_VARARGS, NULL},
	 { (char *)"unop_instance_count", _wrap_unop_instance_count, METH_VARARGS, NULL},
	 { (char *)"unop_dump_instances", _wrap_unop_dump_instances, METH_VARARGS, NULL},
	 { (char *)"unop_swigregister", unop_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_visitor", _wrap_delete_visitor, METH_VARARGS, NULL},
	 { (char *)"visitor_visit", _wrap_visitor_visit, METH_VARARGS, NULL},
	 { (char *)"visitor_swigregister", visitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_const_visitor", _wrap_delete_const_visitor, METH_VARARGS, NULL},
	 { (char *)"const_visitor_visit", _wrap_const_visitor_visit, METH_VARARGS, NULL},
	 { (char *)"const_visitor_swigregister", const_visitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"environment_require", _wrap_environment_require, METH_VARARGS, NULL},
	 { (char *)"environment_name", _wrap_environment_name, METH_VARARGS, NULL},
	 { (char *)"delete_environment", _wrap_delete_environment, METH_VARARGS, NULL},
	 { (char *)"environment_swigregister", environment_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_default_environment", _wrap_delete_default_environment, METH_VARARGS, NULL},
	 { (char *)"default_environment_require", _wrap_default_environment_require, METH_VARARGS, NULL},
	 { (char *)"default_environment_name", _wrap_default_environment_name, METH_VARARGS, NULL},
	 { (char *)"default_environment_instance", _wrap_default_environment_instance, METH_VARARGS, NULL},
	 { (char *)"default_environment_swigregister", default_environment_swigregister, METH_VARARGS, NULL},
	 { (char *)"parse_error_list___nonzero__", _wrap_parse_error_list___nonzero__, METH_VARARGS, NULL},
	 { (char *)"new_parse_error_list", _wrap_new_parse_error_list, METH_VARARGS, NULL},
	 { (char *)"delete_parse_error_list", _wrap_delete_parse_error_list, METH_VARARGS, NULL},
	 { (char *)"parse_error_list_swigregister", parse_error_list_swigregister, METH_VARARGS, NULL},
	 { (char *)"parse", _wrap_parse, METH_VARARGS, NULL},
	 { (char *)"format_parse_errors", _wrap_format_parse_errors, METH_VARARGS, NULL},
	 { (char *)"dotty", _wrap_dotty, METH_VARARGS, NULL},
	 { (char *)"dump", _wrap_dump, METH_VARARGS, NULL},
	 { (char *)"new_unabbreviate_logic_visitor", _wrap_new_unabbreviate_logic_visitor, METH_VARARGS, NULL},
	 { (char *)"delete_unabbreviate_logic_visitor", _wrap_delete_unabbreviate_logic_visitor, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_logic_visitor_visit", _wrap_unabbreviate_logic_visitor_visit, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_logic_visitor_recurse", _wrap_unabbreviate_logic_visitor_recurse, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_logic_visitor_swigregister", unabbreviate_logic_visitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_logic", _wrap_unabbreviate_logic, METH_VARARGS, NULL},
	 { (char *)"negative_normal_form", _wrap_negative_normal_form, METH_VARARGS, NULL},
	 { (char *)"reduce", _wrap_reduce, METH_VARARGS, NULL},
	 { (char *)"is_eventual", _wrap_is_eventual, METH_VARARGS, NULL},
	 { (char *)"is_universal", _wrap_is_universal, METH_VARARGS, NULL},
	 { (char *)"to_string", _wrap_to_string, METH_VARARGS, NULL},
	 { (char *)"to_spin_string", _wrap_to_spin_string, METH_VARARGS, NULL},
	 { (char *)"new_unabbreviate_ltl_visitor", _wrap_new_unabbreviate_ltl_visitor, METH_VARARGS, NULL},
	 { (char *)"delete_unabbreviate_ltl_visitor", _wrap_delete_unabbreviate_ltl_visitor, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_ltl_visitor_visit", _wrap_unabbreviate_ltl_visitor_visit, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_ltl_visitor_recurse", _wrap_unabbreviate_ltl_visitor_recurse, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_ltl_visitor_swigregister", unabbreviate_ltl_visitor_swigregister, METH_VARARGS, NULL},
	 { (char *)"unabbreviate_ltl", _wrap_unabbreviate_ltl, METH_VARARGS, NULL},
	 { (char *)"new_bdd_dict", _wrap_new_bdd_dict, METH_VARARGS, NULL},
	 { (char *)"delete_bdd_dict", _wrap_delete_bdd_dict, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_now_map_set", _wrap_bdd_dict_now_map_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_now_map_get", _wrap_bdd_dict_now_map_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_now_formula_map_set", _wrap_bdd_dict_now_formula_map_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_now_formula_map_get", _wrap_bdd_dict_now_formula_map_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_var_map_set", _wrap_bdd_dict_var_map_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_var_map_get", _wrap_bdd_dict_var_map_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_var_formula_map_set", _wrap_bdd_dict_var_formula_map_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_var_formula_map_get", _wrap_bdd_dict_var_formula_map_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_acc_map_set", _wrap_bdd_dict_acc_map_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_acc_map_get", _wrap_bdd_dict_acc_map_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_acc_formula_map_set", _wrap_bdd_dict_acc_formula_map_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_acc_formula_map_get", _wrap_bdd_dict_acc_formula_map_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_clone_counts_set", _wrap_bdd_dict_clone_counts_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_clone_counts_get", _wrap_bdd_dict_clone_counts_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_next_to_now_set", _wrap_bdd_dict_next_to_now_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_next_to_now_get", _wrap_bdd_dict_next_to_now_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_now_to_next_set", _wrap_bdd_dict_now_to_next_set, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_now_to_next_get", _wrap_bdd_dict_now_to_next_get, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_proposition", _wrap_bdd_dict_register_proposition, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_propositions", _wrap_bdd_dict_register_propositions, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_state", _wrap_bdd_dict_register_state, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_acceptance_variable", _wrap_bdd_dict_register_acceptance_variable, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_clone_acc", _wrap_bdd_dict_register_clone_acc, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_acceptance_variables", _wrap_bdd_dict_register_acceptance_variables, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_anonymous_variables", _wrap_bdd_dict_register_anonymous_variables, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_register_all_variables_of", _wrap_bdd_dict_register_all_variables_of, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_unregister_all_my_variables", _wrap_bdd_dict_unregister_all_my_variables, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_unregister_variable", _wrap_bdd_dict_unregister_variable, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_is_registered_proposition", _wrap_bdd_dict_is_registered_proposition, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_is_registered_state", _wrap_bdd_dict_is_registered_state, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_is_registered_acceptance_variable", _wrap_bdd_dict_is_registered_acceptance_variable, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_dump", _wrap_bdd_dict_dump, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_assert_emptiness", _wrap_bdd_dict_assert_emptiness, METH_VARARGS, NULL},
	 { (char *)"bdd_dict_swigregister", bdd_dict_swigregister, METH_VARARGS, NULL},
	 { (char *)"bdd_print_sat", _wrap_bdd_print_sat, METH_VARARGS, NULL},
	 { (char *)"bdd_format_sat", _wrap_bdd_format_sat, METH_VARARGS, NULL},
	 { (char *)"bdd_print_acc", _wrap_bdd_print_acc, METH_VARARGS, NULL},
	 { (char *)"bdd_print_accset", _wrap_bdd_print_accset, METH_VARARGS, NULL},
	 { (char *)"bdd_format_accset", _wrap_bdd_format_accset, METH_VARARGS, NULL},
	 { (char *)"bdd_print_set", _wrap_bdd_print_set, METH_VARARGS, NULL},
	 { (char *)"bdd_format_set", _wrap_bdd_format_set, METH_VARARGS, NULL},
	 { (char *)"bdd_print_formula", _wrap_bdd_print_formula, METH_VARARGS, NULL},
	 { (char *)"bdd_format_formula", _wrap_bdd_format_formula, METH_VARARGS, NULL},
	 { (char *)"bdd_print_dot", _wrap_bdd_print_dot, METH_VARARGS, NULL},
	 { (char *)"bdd_print_table", _wrap_bdd_print_table, METH_VARARGS, NULL},
	 { (char *)"state_compare", _wrap_state_compare, METH_VARARGS, NULL},
	 { (char *)"state_hash", _wrap_state_hash, METH_VARARGS, NULL},
	 { (char *)"state_clone", _wrap_state_clone, METH_VARARGS, NULL},
	 { (char *)"state_destroy", _wrap_state_destroy, METH_VARARGS, NULL},
	 { (char *)"state_swigregister", state_swigregister, METH_VARARGS, NULL},
	 { (char *)"state_ptr_less_than___call__", _wrap_state_ptr_less_than___call__, METH_VARARGS, NULL},
	 { (char *)"new_state_ptr_less_than", _wrap_new_state_ptr_less_than, METH_VARARGS, NULL},
	 { (char *)"delete_state_ptr_less_than", _wrap_delete_state_ptr_less_than, METH_VARARGS, NULL},
	 { (char *)"state_ptr_less_than_swigregister", state_ptr_less_than_swigregister, METH_VARARGS, NULL},
	 { (char *)"state_ptr_equal___call__", _wrap_state_ptr_equal___call__, METH_VARARGS, NULL},
	 { (char *)"new_state_ptr_equal", _wrap_new_state_ptr_equal, METH_VARARGS, NULL},
	 { (char *)"delete_state_ptr_equal", _wrap_delete_state_ptr_equal, METH_VARARGS, NULL},
	 { (char *)"state_ptr_equal_swigregister", state_ptr_equal_swigregister, METH_VARARGS, NULL},
	 { (char *)"state_ptr_hash___call__", _wrap_state_ptr_hash___call__, METH_VARARGS, NULL},
	 { (char *)"new_state_ptr_hash", _wrap_new_state_ptr_hash, METH_VARARGS, NULL},
	 { (char *)"delete_state_ptr_hash", _wrap_delete_state_ptr_hash, METH_VARARGS, NULL},
	 { (char *)"state_ptr_hash_swigregister", state_ptr_hash_swigregister, METH_VARARGS, NULL},
	 { (char *)"shared_state_deleter", _wrap_shared_state_deleter, METH_VARARGS, NULL},
	 { (char *)"state_shared_ptr_less_than___call__", _wrap_state_shared_ptr_less_than___call__, METH_VARARGS, NULL},
	 { (char *)"new_state_shared_ptr_less_than", _wrap_new_state_shared_ptr_less_than, METH_VARARGS, NULL},
	 { (char *)"delete_state_shared_ptr_less_than", _wrap_delete_state_shared_ptr_less_than, METH_VARARGS, NULL},
	 { (char *)"state_shared_ptr_less_than_swigregister", state_shared_ptr_less_than_swigregister, METH_VARARGS, NULL},
	 { (char *)"state_shared_ptr_equal___call__", _wrap_state_shared_ptr_equal___call__, METH_VARARGS, NULL},
	 { (char *)"new_state_shared_ptr_equal", _wrap_new_state_shared_ptr_equal, METH_VARARGS, NULL},
	 { (char *)"delete_state_shared_ptr_equal", _wrap_delete_state_shared_ptr_equal, METH_VARARGS, NULL},
	 { (char *)"state_shared_ptr_equal_swigregister", state_shared_ptr_equal_swigregister, METH_VARARGS, NULL},
	 { (char *)"state_shared_ptr_hash___call__", _wrap_state_shared_ptr_hash___call__, METH_VARARGS, NULL},
	 { (char *)"new_state_shared_ptr_hash", _wrap_new_state_shared_ptr_hash, METH_VARARGS, NULL},
	 { (char *)"delete_state_shared_ptr_hash", _wrap_delete_state_shared_ptr_hash, METH_VARARGS, NULL},
	 { (char *)"state_shared_ptr_hash_swigregister", state_shared_ptr_hash_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_succ_iterator", _wrap_delete_tgba_succ_iterator, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_first", _wrap_tgba_succ_iterator_first, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_next", _wrap_tgba_succ_iterator_next, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_done", _wrap_tgba_succ_iterator_done, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_current_state", _wrap_tgba_succ_iterator_current_state, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_current_condition", _wrap_tgba_succ_iterator_current_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_current_acceptance_conditions", _wrap_tgba_succ_iterator_current_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_swigregister", tgba_succ_iterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_tgba", _wrap_delete_tgba, METH_VARARGS, NULL},
	 { (char *)"tgba_get_init_state", _wrap_tgba_get_init_state, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iter", _wrap_tgba_succ_iter, METH_VARARGS, NULL},
	 { (char *)"tgba_support_conditions", _wrap_tgba_support_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_support_variables", _wrap_tgba_support_variables, METH_VARARGS, NULL},
	 { (char *)"tgba_get_dict", _wrap_tgba_get_dict, METH_VARARGS, NULL},
	 { (char *)"tgba_format_state", _wrap_tgba_format_state, METH_VARARGS, NULL},
	 { (char *)"tgba_transition_annotation", _wrap_tgba_transition_annotation, METH_VARARGS, NULL},
	 { (char *)"tgba_project_state", _wrap_tgba_project_state, METH_VARARGS, NULL},
	 { (char *)"tgba_all_acceptance_conditions", _wrap_tgba_all_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_number_of_acceptance_conditions", _wrap_tgba_number_of_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_neg_acceptance_conditions", _wrap_tgba_neg_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_swigregister", tgba_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_state_bdd", _wrap_new_state_bdd, METH_VARARGS, NULL},
	 { (char *)"state_bdd_as_bdd", _wrap_state_bdd_as_bdd, METH_VARARGS, NULL},
	 { (char *)"state_bdd_compare", _wrap_state_bdd_compare, METH_VARARGS, NULL},
	 { (char *)"state_bdd_hash", _wrap_state_bdd_hash, METH_VARARGS, NULL},
	 { (char *)"state_bdd_clone", _wrap_state_bdd_clone, METH_VARARGS, NULL},
	 { (char *)"delete_state_bdd", _wrap_delete_state_bdd, METH_VARARGS, NULL},
	 { (char *)"state_bdd_swigregister", state_bdd_swigregister, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_add_condition", _wrap_taa_tgba_add_condition, METH_VARARGS, NULL},
	 { (char *)"delete_taa_tgba", _wrap_delete_taa_tgba, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_get_init_state", _wrap_taa_tgba_get_init_state, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_succ_iter", _wrap_taa_tgba_succ_iter, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_get_dict", _wrap_taa_tgba_get_dict, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_format_state", _wrap_taa_tgba_format_state, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_all_acceptance_conditions", _wrap_taa_tgba_all_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_neg_acceptance_conditions", _wrap_taa_tgba_neg_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_swigregister", taa_tgba_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_state_set", _wrap_new_state_set, METH_VARARGS, NULL},
	 { (char *)"state_set_compare", _wrap_state_set_compare, METH_VARARGS, NULL},
	 { (char *)"state_set_hash", _wrap_state_set_hash, METH_VARARGS, NULL},
	 { (char *)"state_set_clone", _wrap_state_set_clone, METH_VARARGS, NULL},
	 { (char *)"delete_state_set", _wrap_delete_state_set, METH_VARARGS, NULL},
	 { (char *)"state_set_get_state", _wrap_state_set_get_state, METH_VARARGS, NULL},
	 { (char *)"state_set_swigregister", state_set_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_taa_succ_iterator", _wrap_new_taa_succ_iterator, METH_VARARGS, NULL},
	 { (char *)"delete_taa_succ_iterator", _wrap_delete_taa_succ_iterator, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_first", _wrap_taa_succ_iterator_first, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_next", _wrap_taa_succ_iterator_next, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_done", _wrap_taa_succ_iterator_done, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_current_state", _wrap_taa_succ_iterator_current_state, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_current_condition", _wrap_taa_succ_iterator_current_condition, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_current_acceptance_conditions", _wrap_taa_succ_iterator_current_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"taa_succ_iterator_swigregister", taa_succ_iterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_taa_tgba_string", _wrap_new_taa_tgba_string, METH_VARARGS, NULL},
	 { (char *)"delete_taa_tgba_string", _wrap_delete_taa_tgba_string, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_string_swigregister", taa_tgba_string_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_taa_tgba_formula", _wrap_new_taa_tgba_formula, METH_VARARGS, NULL},
	 { (char *)"delete_taa_tgba_formula", _wrap_delete_taa_tgba_formula, METH_VARARGS, NULL},
	 { (char *)"taa_tgba_formula_swigregister", taa_tgba_formula_swigregister, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_relation_set", _wrap_tgba_bdd_core_data_relation_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_relation_get", _wrap_tgba_bdd_core_data_relation_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_acceptance_conditions_set", _wrap_tgba_bdd_core_data_acceptance_conditions_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_acceptance_conditions_get", _wrap_tgba_bdd_core_data_acceptance_conditions_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_acceptance_conditions_support_set", _wrap_tgba_bdd_core_data_acceptance_conditions_support_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_acceptance_conditions_support_get", _wrap_tgba_bdd_core_data_acceptance_conditions_support_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_all_acceptance_conditions_set", _wrap_tgba_bdd_core_data_all_acceptance_conditions_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_all_acceptance_conditions_get", _wrap_tgba_bdd_core_data_all_acceptance_conditions_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_now_set_set", _wrap_tgba_bdd_core_data_now_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_now_set_get", _wrap_tgba_bdd_core_data_now_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_next_set_set", _wrap_tgba_bdd_core_data_next_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_next_set_get", _wrap_tgba_bdd_core_data_next_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_nownext_set_set", _wrap_tgba_bdd_core_data_nownext_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_nownext_set_get", _wrap_tgba_bdd_core_data_nownext_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notnow_set_set", _wrap_tgba_bdd_core_data_notnow_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notnow_set_get", _wrap_tgba_bdd_core_data_notnow_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notnext_set_set", _wrap_tgba_bdd_core_data_notnext_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notnext_set_get", _wrap_tgba_bdd_core_data_notnext_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_var_set_set", _wrap_tgba_bdd_core_data_var_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_var_set_get", _wrap_tgba_bdd_core_data_var_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notvar_set_set", _wrap_tgba_bdd_core_data_notvar_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notvar_set_get", _wrap_tgba_bdd_core_data_notvar_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_varandnext_set_set", _wrap_tgba_bdd_core_data_varandnext_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_varandnext_set_get", _wrap_tgba_bdd_core_data_varandnext_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_acc_set_set", _wrap_tgba_bdd_core_data_acc_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_acc_set_get", _wrap_tgba_bdd_core_data_acc_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notacc_set_set", _wrap_tgba_bdd_core_data_notacc_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_notacc_set_get", _wrap_tgba_bdd_core_data_notacc_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_negacc_set_set", _wrap_tgba_bdd_core_data_negacc_set_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_negacc_set_get", _wrap_tgba_bdd_core_data_negacc_set_get, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_dict_set", _wrap_tgba_bdd_core_data_dict_set, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_dict_get", _wrap_tgba_bdd_core_data_dict_get, METH_VARARGS, NULL},
	 { (char *)"new_tgba_bdd_core_data", _wrap_new_tgba_bdd_core_data, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_declare_now_next", _wrap_tgba_bdd_core_data_declare_now_next, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_declare_atomic_prop", _wrap_tgba_bdd_core_data_declare_atomic_prop, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_declare_acceptance_condition", _wrap_tgba_bdd_core_data_declare_acceptance_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_delete_unaccepting_scc", _wrap_tgba_bdd_core_data_delete_unaccepting_scc, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_bdd_core_data", _wrap_delete_tgba_bdd_core_data, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_core_data_swigregister", tgba_bdd_core_data_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_succ_iterator_concrete", _wrap_new_tgba_succ_iterator_concrete, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_succ_iterator_concrete", _wrap_delete_tgba_succ_iterator_concrete, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_first", _wrap_tgba_succ_iterator_concrete_first, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_next", _wrap_tgba_succ_iterator_concrete_next, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_done", _wrap_tgba_succ_iterator_concrete_done, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_current_state", _wrap_tgba_succ_iterator_concrete_current_state, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_current_condition", _wrap_tgba_succ_iterator_concrete_current_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_current_acceptance_conditions", _wrap_tgba_succ_iterator_concrete_current_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_succ_iterator_concrete_swigregister", tgba_succ_iterator_concrete_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_bdd_concrete", _wrap_new_tgba_bdd_concrete, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_bdd_concrete", _wrap_delete_tgba_bdd_concrete, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_set_init_state", _wrap_tgba_bdd_concrete_set_init_state, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_get_init_state", _wrap_tgba_bdd_concrete_get_init_state, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_get_init_bdd", _wrap_tgba_bdd_concrete_get_init_bdd, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_succ_iter", _wrap_tgba_bdd_concrete_succ_iter, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_format_state", _wrap_tgba_bdd_concrete_format_state, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_get_dict", _wrap_tgba_bdd_concrete_get_dict, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_get_core_data", _wrap_tgba_bdd_concrete_get_core_data, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_all_acceptance_conditions", _wrap_tgba_bdd_concrete_all_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_neg_acceptance_conditions", _wrap_tgba_bdd_concrete_neg_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_delete_unaccepting_scc", _wrap_tgba_bdd_concrete_delete_unaccepting_scc, METH_VARARGS, NULL},
	 { (char *)"tgba_bdd_concrete_swigregister", tgba_bdd_concrete_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_state_explicit", _wrap_new_state_explicit, METH_VARARGS, NULL},
	 { (char *)"state_explicit_compare", _wrap_state_explicit_compare, METH_VARARGS, NULL},
	 { (char *)"state_explicit_hash", _wrap_state_explicit_hash, METH_VARARGS, NULL},
	 { (char *)"state_explicit_clone", _wrap_state_explicit_clone, METH_VARARGS, NULL},
	 { (char *)"state_explicit_empty", _wrap_state_explicit_empty, METH_VARARGS, NULL},
	 { (char *)"state_explicit_destroy", _wrap_state_explicit_destroy, METH_VARARGS, NULL},
	 { (char *)"state_explicit_successors_set", _wrap_state_explicit_successors_set, METH_VARARGS, NULL},
	 { (char *)"state_explicit_successors_get", _wrap_state_explicit_successors_get, METH_VARARGS, NULL},
	 { (char *)"state_explicit_swigregister", state_explicit_swigregister, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_add_default_init", _wrap_tgba_explicit_add_default_init, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_create_transition", _wrap_tgba_explicit_create_transition, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_add_condition", _wrap_tgba_explicit_add_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_add_conditions", _wrap_tgba_explicit_add_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_copy_acceptance_conditions_of", _wrap_tgba_explicit_copy_acceptance_conditions_of, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_set_acceptance_conditions", _wrap_tgba_explicit_set_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_has_acceptance_condition", _wrap_tgba_explicit_has_acceptance_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_add_acceptance_condition", _wrap_tgba_explicit_add_acceptance_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_add_acceptance_conditions", _wrap_tgba_explicit_add_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_explicit", _wrap_delete_tgba_explicit, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_get_init_state", _wrap_tgba_explicit_get_init_state, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iter", _wrap_tgba_explicit_succ_iter, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_get_dict", _wrap_tgba_explicit_get_dict, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_all_acceptance_conditions", _wrap_tgba_explicit_all_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_neg_acceptance_conditions", _wrap_tgba_explicit_neg_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_format_state", _wrap_tgba_explicit_format_state, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_swigregister", tgba_explicit_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_explicit_succ_iterator", _wrap_new_tgba_explicit_succ_iterator, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_first", _wrap_tgba_explicit_succ_iterator_first, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_next", _wrap_tgba_explicit_succ_iterator_next, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_done", _wrap_tgba_explicit_succ_iterator_done, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_current_state", _wrap_tgba_explicit_succ_iterator_current_state, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_current_condition", _wrap_tgba_explicit_succ_iterator_current_condition, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_current_acceptance_conditions", _wrap_tgba_explicit_succ_iterator_current_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_explicit_succ_iterator", _wrap_delete_tgba_explicit_succ_iterator, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_succ_iterator_swigregister", tgba_explicit_succ_iterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_explicit_string", _wrap_delete_tgba_explicit_string, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_string_swigregister", tgba_explicit_string_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_explicit_formula", _wrap_delete_tgba_explicit_formula, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_formula_swigregister", tgba_explicit_formula_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_explicit_number", _wrap_delete_tgba_explicit_number, METH_VARARGS, NULL},
	 { (char *)"tgba_explicit_number_swigregister", tgba_explicit_number_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_state_product", _wrap_new_state_product, METH_VARARGS, NULL},
	 { (char *)"state_product_destroy", _wrap_state_product_destroy, METH_VARARGS, NULL},
	 { (char *)"state_product_left", _wrap_state_product_left, METH_VARARGS, NULL},
	 { (char *)"state_product_right", _wrap_state_product_right, METH_VARARGS, NULL},
	 { (char *)"state_product_compare", _wrap_state_product_compare, METH_VARARGS, NULL},
	 { (char *)"state_product_hash", _wrap_state_product_hash, METH_VARARGS, NULL},
	 { (char *)"state_product_clone", _wrap_state_product_clone, METH_VARARGS, NULL},
	 { (char *)"state_product_swigregister", state_product_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_product", _wrap_new_tgba_product, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_product", _wrap_delete_tgba_product, METH_VARARGS, NULL},
	 { (char *)"tgba_product_get_init_state", _wrap_tgba_product_get_init_state, METH_VARARGS, NULL},
	 { (char *)"tgba_product_succ_iter", _wrap_tgba_product_succ_iter, METH_VARARGS, NULL},
	 { (char *)"tgba_product_get_dict", _wrap_tgba_product_get_dict, METH_VARARGS, NULL},
	 { (char *)"tgba_product_format_state", _wrap_tgba_product_format_state, METH_VARARGS, NULL},
	 { (char *)"tgba_product_transition_annotation", _wrap_tgba_product_transition_annotation, METH_VARARGS, NULL},
	 { (char *)"tgba_product_project_state", _wrap_tgba_product_project_state, METH_VARARGS, NULL},
	 { (char *)"tgba_product_all_acceptance_conditions", _wrap_tgba_product_all_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_product_neg_acceptance_conditions", _wrap_tgba_product_neg_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_product_swigregister", tgba_product_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_product_init", _wrap_new_tgba_product_init, METH_VARARGS, NULL},
	 { (char *)"tgba_product_init_get_init_state", _wrap_tgba_product_init_get_init_state, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_product_init", _wrap_delete_tgba_product_init, METH_VARARGS, NULL},
	 { (char *)"tgba_product_init_swigregister", tgba_product_init_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_tba_proxy", _wrap_new_tgba_tba_proxy, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_tba_proxy", _wrap_delete_tgba_tba_proxy, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_get_init_state", _wrap_tgba_tba_proxy_get_init_state, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_succ_iter", _wrap_tgba_tba_proxy_succ_iter, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_get_dict", _wrap_tgba_tba_proxy_get_dict, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_format_state", _wrap_tgba_tba_proxy_format_state, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_project_state", _wrap_tgba_tba_proxy_project_state, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_all_acceptance_conditions", _wrap_tgba_tba_proxy_all_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_neg_acceptance_conditions", _wrap_tgba_tba_proxy_neg_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_common_acceptance_conditions_of_original_state", _wrap_tgba_tba_proxy_common_acceptance_conditions_of_original_state, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_union_acceptance_conditions_of_original_state", _wrap_tgba_tba_proxy_union_acceptance_conditions_of_original_state, METH_VARARGS, NULL},
	 { (char *)"tgba_tba_proxy_swigregister", tgba_tba_proxy_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tgba_sba_proxy", _wrap_new_tgba_sba_proxy, METH_VARARGS, NULL},
	 { (char *)"tgba_sba_proxy_state_is_accepting", _wrap_tgba_sba_proxy_state_is_accepting, METH_VARARGS, NULL},
	 { (char *)"tgba_sba_proxy_get_init_state", _wrap_tgba_sba_proxy_get_init_state, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_sba_proxy", _wrap_delete_tgba_sba_proxy, METH_VARARGS, NULL},
	 { (char *)"tgba_sba_proxy_swigregister", tgba_sba_proxy_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_dotty_decorator", _wrap_delete_dotty_decorator, METH_VARARGS, NULL},
	 { (char *)"dotty_decorator_state_decl", _wrap_dotty_decorator_state_decl, METH_VARARGS, NULL},
	 { (char *)"dotty_decorator_link_decl", _wrap_dotty_decorator_link_decl, METH_VARARGS, NULL},
	 { (char *)"dotty_decorator_instance", _wrap_dotty_decorator_instance, METH_VARARGS, NULL},
	 { (char *)"dotty_decorator_swigregister", dotty_decorator_swigregister, METH_VARARGS, NULL},
	 { (char *)"dotty_reachable", _wrap_dotty_reachable, METH_VARARGS, NULL},
	 { (char *)"tgba_dupexp_bfs", _wrap_tgba_dupexp_bfs, METH_VARARGS, NULL},
	 { (char *)"tgba_dupexp_dfs", _wrap_tgba_dupexp_dfs, METH_VARARGS, NULL},
	 { (char *)"new_emptiness_check_result", _wrap_new_emptiness_check_result, METH_VARARGS, NULL},
	 { (char *)"delete_emptiness_check_result", _wrap_delete_emptiness_check_result, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_result_accepting_run", _wrap_emptiness_check_result_accepting_run, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_result_automaton", _wrap_emptiness_check_result_automaton, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_result_options", _wrap_emptiness_check_result_options, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_result_parse_options", _wrap_emptiness_check_result_parse_options, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_result_statistics", _wrap_emptiness_check_result_statistics, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_result_swigregister", emptiness_check_result_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_emptiness_check", _wrap_delete_emptiness_check, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_automaton", _wrap_emptiness_check_automaton, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_options", _wrap_emptiness_check_options, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_parse_options", _wrap_emptiness_check_parse_options, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_safe", _wrap_emptiness_check_safe, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_check", _wrap_emptiness_check_check, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_statistics", _wrap_emptiness_check_statistics, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_print_stats", _wrap_emptiness_check_print_stats, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_options_updated", _wrap_emptiness_check_options_updated, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_swigregister", emptiness_check_swigregister, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_instantiator_construct", _wrap_emptiness_check_instantiator_construct, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_instantiator_instantiate", _wrap_emptiness_check_instantiator_instantiate, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_instantiator_options", _wrap_emptiness_check_instantiator_options, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_instantiator_min_acceptance_conditions", _wrap_emptiness_check_instantiator_min_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_instantiator_max_acceptance_conditions", _wrap_emptiness_check_instantiator_max_acceptance_conditions, METH_VARARGS, NULL},
	 { (char *)"delete_emptiness_check_instantiator", _wrap_delete_emptiness_check_instantiator, METH_VARARGS, NULL},
	 { (char *)"emptiness_check_instantiator_swigregister", emptiness_check_instantiator_swigregister, METH_VARARGS, NULL},
	 { (char *)"tgba_run_prefix_set", _wrap_tgba_run_prefix_set, METH_VARARGS, NULL},
	 { (char *)"tgba_run_prefix_get", _wrap_tgba_run_prefix_get, METH_VARARGS, NULL},
	 { (char *)"tgba_run_cycle_set", _wrap_tgba_run_cycle_set, METH_VARARGS, NULL},
	 { (char *)"tgba_run_cycle_get", _wrap_tgba_run_cycle_get, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_run", _wrap_delete_tgba_run, METH_VARARGS, NULL},
	 { (char *)"new_tgba_run", _wrap_new_tgba_run, METH_VARARGS, NULL},
	 { (char *)"tgba_run_swigregister", tgba_run_swigregister, METH_VARARGS, NULL},
	 { (char *)"print_tgba_run", _wrap_print_tgba_run, METH_VARARGS, NULL},
	 { (char *)"tgba_run_to_tgba", _wrap_tgba_run_to_tgba, METH_VARARGS, NULL},
	 { (char *)"couvreur99", _wrap_couvreur99, METH_VARARGS, NULL},
	 { (char *)"new_couvreur99_check", _wrap_new_couvreur99_check, METH_VARARGS, NULL},
	 { (char *)"delete_couvreur99_check", _wrap_delete_couvreur99_check, METH_VARARGS, NULL},
	 { (char *)"couvreur99_check_check", _wrap_couvreur99_check_check, METH_VARARGS, NULL},
	 { (char *)"couvreur99_check_print_stats", _wrap_couvreur99_check_print_stats, METH_VARARGS, NULL},
	 { (char *)"couvreur99_check_result", _wrap_couvreur99_check_result, METH_VARARGS, NULL},
	 { (char *)"couvreur99_check_swigregister", couvreur99_check_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_couvreur99_check_shy", _wrap_new_couvreur99_check_shy, METH_VARARGS, NULL},
	 { (char *)"delete_couvreur99_check_shy", _wrap_delete_couvreur99_check_shy, METH_VARARGS, NULL},
	 { (char *)"couvreur99_check_shy_check", _wrap_couvreur99_check_shy_check, METH_VARARGS, NULL},
	 { (char *)"couvreur99_check_shy_swigregister", couvreur99_check_shy_swigregister, METH_VARARGS, NULL},
	 { (char *)"lbtt_reachable", _wrap_lbtt_reachable, METH_VARARGS, NULL},
	 { (char *)"ltl_to_taa", _wrap_ltl_to_taa, METH_VARARGS, NULL},
	 { (char *)"ltl_to_tgba_fm", _wrap_ltl_to_tgba_fm, METH_VARARGS, NULL},
	 { (char *)"ltl_to_tgba_lacim", _wrap_ltl_to_tgba_lacim, METH_VARARGS, NULL},
	 { (char *)"explicit_magic_search", _wrap_explicit_magic_search, METH_VARARGS, NULL},
	 { (char *)"bit_state_hashing_magic_search", _wrap_bit_state_hashing_magic_search, METH_VARARGS, NULL},
	 { (char *)"magic_search", _wrap_magic_search, METH_VARARGS, NULL},
	 { (char *)"minimize_monitor", _wrap_minimize_monitor, METH_VARARGS, NULL},
	 { (char *)"minimize_wdba", _wrap_minimize_wdba, METH_VARARGS, NULL},
	 { (char *)"minimize_obligation", _wrap_minimize_obligation, METH_VARARGS, NULL},
	 { (char *)"never_claim_reachable", _wrap_never_claim_reachable, METH_VARARGS, NULL},
	 { (char *)"reduc_tgba_sim", _wrap_reduc_tgba_sim, METH_VARARGS, NULL},
	 { (char *)"new_tgba_run_dotty_decorator", _wrap_new_tgba_run_dotty_decorator, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_run_dotty_decorator", _wrap_delete_tgba_run_dotty_decorator, METH_VARARGS, NULL},
	 { (char *)"tgba_run_dotty_decorator_state_decl", _wrap_tgba_run_dotty_decorator_state_decl, METH_VARARGS, NULL},
	 { (char *)"tgba_run_dotty_decorator_link_decl", _wrap_tgba_run_dotty_decorator_link_decl, METH_VARARGS, NULL},
	 { (char *)"tgba_run_dotty_decorator_swigregister", tgba_run_dotty_decorator_swigregister, METH_VARARGS, NULL},
	 { (char *)"tgba_save_reachable", _wrap_tgba_save_reachable, METH_VARARGS, NULL},
	 { (char *)"scc_filter", _wrap_scc_filter, METH_VARARGS, NULL},
	 { (char *)"tgba_statistics_transitions_set", _wrap_tgba_statistics_transitions_set, METH_VARARGS, NULL},
	 { (char *)"tgba_statistics_transitions_get", _wrap_tgba_statistics_transitions_get, METH_VARARGS, NULL},
	 { (char *)"tgba_statistics_states_set", _wrap_tgba_statistics_states_set, METH_VARARGS, NULL},
	 { (char *)"tgba_statistics_states_get", _wrap_tgba_statistics_states_get, METH_VARARGS, NULL},
	 { (char *)"new_tgba_statistics", _wrap_new_tgba_statistics, METH_VARARGS, NULL},
	 { (char *)"tgba_statistics_dump", _wrap_tgba_statistics_dump, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_statistics", _wrap_delete_tgba_statistics, METH_VARARGS, NULL},
	 { (char *)"tgba_statistics_swigregister", tgba_statistics_swigregister, METH_VARARGS, NULL},
	 { (char *)"tgba_sub_statistics_sub_transitions_set", _wrap_tgba_sub_statistics_sub_transitions_set, METH_VARARGS, NULL},
	 { (char *)"tgba_sub_statistics_sub_transitions_get", _wrap_tgba_sub_statistics_sub_transitions_get, METH_VARARGS, NULL},
	 { (char *)"new_tgba_sub_statistics", _wrap_new_tgba_sub_statistics, METH_VARARGS, NULL},
	 { (char *)"tgba_sub_statistics_dump", _wrap_tgba_sub_statistics_dump, METH_VARARGS, NULL},
	 { (char *)"delete_tgba_sub_statistics", _wrap_delete_tgba_sub_statistics, METH_VARARGS, NULL},
	 { (char *)"tgba_sub_statistics_swigregister", tgba_sub_statistics_swigregister, METH_VARARGS, NULL},
	 { (char *)"stats_reachable", _wrap_stats_reachable, METH_VARARGS, NULL},
	 { (char *)"sub_stats_reachable", _wrap_sub_stats_reachable, METH_VARARGS, NULL},
	 { (char *)"delete_ostream", _wrap_delete_ostream, METH_VARARGS, NULL},
	 { (char *)"ostream_swigregister", ostream_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ofstream", _wrap_new_ofstream, METH_VARARGS, NULL},
	 { (char *)"delete_ofstream", _wrap_delete_ofstream, METH_VARARGS, NULL},
	 { (char *)"ofstream_swigregister", ofstream_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ostringstream", _wrap_new_ostringstream, METH_VARARGS, NULL},
	 { (char *)"ostringstream_str", _wrap_ostringstream_str, METH_VARARGS, NULL},
	 { (char *)"delete_ostringstream", _wrap_delete_ostringstream, METH_VARARGS, NULL},
	 { (char *)"ostringstream_swigregister", ostringstream_swigregister, METH_VARARGS, NULL},
	 { (char *)"minimize_obligation_new", _wrap_minimize_obligation_new, METH_VARARGS, NULL},
	 { (char *)"empty_parse_error_list", _wrap_empty_parse_error_list, METH_VARARGS, NULL},
	 { (char *)"get_cout", _wrap_get_cout, METH_VARARGS, NULL},
	 { (char *)"get_cerr", _wrap_get_cerr, METH_VARARGS, NULL},
	 { (char *)"print_on", _wrap_print_on, METH_VARARGS, NULL},
	 { (char *)"unblock_signal", _wrap_unblock_signal, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_spot__taa_succ_iteratorTo_p_spot__tgba_succ_iterator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba_succ_iterator *)  ((spot::taa_succ_iterator *) x));
}
static void *_p_spot__tgba_succ_iterator_concreteTo_p_spot__tgba_succ_iterator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba_succ_iterator *)  ((spot::tgba_succ_iterator_concrete *) x));
}
static void *_p_spot__tgba_explicit_succ_iteratorTo_p_spot__tgba_succ_iterator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba_succ_iterator *)  ((spot::tgba_explicit_succ_iterator *) x));
}
static void *_p_spot__tgba_product_initTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *) (spot::tgba_product *) ((spot::tgba_product_init *) x));
}
static void *_p_spot__tgba_explicit_formulaTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_explicit_formula *) x));
}
static void *_p_spot__tgba_explicitTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_explicit *) x));
}
static void *_p_spot__taa_tgbaTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::taa_tgba *) x));
}
static void *_p_spot__tgba_bdd_concreteTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_bdd_concrete *) x));
}
static void *_p_spot__tgba_explicit_numberTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_explicit_number *) x));
}
static void *_p_spot__tgba_explicit_stringTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_explicit_string *) x));
}
static void *_p_spot__tgba_productTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_product *) x));
}
static void *_p_spot__tgba_tba_proxyTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *)  ((spot::tgba_tba_proxy *) x));
}
static void *_p_spot__tgba_sba_proxyTo_p_spot__tgba(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba *) (spot::tgba_tba_proxy *) ((spot::tgba_sba_proxy *) x));
}
static void *_p_spot__state_setTo_p_spot__state(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::state *)  ((spot::state_set *) x));
}
static void *_p_spot__state_explicitTo_p_spot__state(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::state *)  ((spot::state_explicit *) x));
}
static void *_p_spot__state_bddTo_p_spot__state(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::state *)  ((spot::state_bdd *) x));
}
static void *_p_spot__state_productTo_p_spot__state(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::state *)  ((spot::state_product *) x));
}
static void *_p_spot__tgba_sub_statisticsTo_p_spot__tgba_statistics(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba_statistics *)  ((spot::tgba_sub_statistics *) x));
}
static void *_p_spot__ltl__atomic_propTo_p_spot__ltl__ref_formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::atomic_prop *) x));
}
static void *_p_spot__ltl__unopTo_p_spot__ltl__ref_formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::unop *) x));
}
static void *_p_spot__ltl__binopTo_p_spot__ltl__ref_formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::binop *) x));
}
static void *_p_spot__ltl__multopTo_p_spot__ltl__ref_formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::multop *) x));
}
static void *_p_spot__ltl__ref_formulaTo_p_spot__ltl__formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::formula *)  ((spot::ltl::ref_formula *) x));
}
static void *_p_spot__ltl__atomic_propTo_p_spot__ltl__formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::atomic_prop *) x));
}
static void *_p_spot__ltl__unopTo_p_spot__ltl__formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::unop *) x));
}
static void *_p_spot__ltl__binopTo_p_spot__ltl__formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::binop *) x));
}
static void *_p_spot__ltl__constantTo_p_spot__ltl__formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::formula *)  ((spot::ltl::constant *) x));
}
static void *_p_spot__ltl__multopTo_p_spot__ltl__formula(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::multop *) x));
}
static void *_p_spot__tgba_sba_proxyTo_p_spot__tgba_tba_proxy(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba_tba_proxy *)  ((spot::tgba_sba_proxy *) x));
}
static void *_p_spot__tgba_product_initTo_p_spot__tgba_product(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::tgba_product *)  ((spot::tgba_product_init *) x));
}
static void *_p_spot__ltl__default_environmentTo_p_spot__ltl__environment(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::environment *)  ((spot::ltl::default_environment *) x));
}
static void *_p_spot__bdd_dictTo_p_spot__bdd_allocator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::bdd_allocator *)  ((spot::bdd_dict *) x));
}
static void *_p_std__ofstreamTo_p_std__ostream(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ostream *)  ((std::ofstream *) x));
}
static void *_p_std__ostringstreamTo_p_std__ostream(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ostream *)  ((std::ostringstream *) x));
}
static void *_p_spot__tgba_run_dotty_decoratorTo_p_spot__dotty_decorator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::dotty_decorator *)  ((spot::tgba_run_dotty_decorator *) x));
}
static void *_p_spot__couvreur99_check_shyTo_p_spot__couvreur99_check(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::couvreur99_check *)  ((spot::couvreur99_check_shy *) x));
}
static void *_p_spot__couvreur99_check_shyTo_p_spot__emptiness_check(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::emptiness_check *) (spot::couvreur99_check *) ((spot::couvreur99_check_shy *) x));
}
static void *_p_spot__couvreur99_checkTo_p_spot__emptiness_check(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::emptiness_check *)  ((spot::couvreur99_check *) x));
}
static void *_p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__unabbreviate_logic_visitor(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((spot::ltl::unabbreviate_logic_visitor *)  ((spot::ltl::unabbreviate_ltl_visitor *) x));
}
static swig_type_info _swigt__p_automatop = {"_p_automatop", "automatop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bdd = {"_p_bdd", "bdd *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bddPair = {"_p_bddPair", "bddPair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_spot__state_const_t = {"_p_boost__shared_ptrT_spot__state_const_t", "boost::shared_ptr< spot::state const > *|spot::shared_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cc_map = {"_p_cc_map", "cc_map *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_visitor = {"_p_const_visitor", "const_visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_couvreur99_check_status = {"_p_couvreur99_check_status", "couvreur99_check_status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cycle_list = {"_p_cycle_list", "cycle_list *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_environment = {"_p_environment", "environment *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fixed_size_pool = {"_p_fixed_size_pool", "fixed_size_pool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fv_map = {"_p_fv_map", "fv_map *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_numbered_state_heap_factory = {"_p_numbered_state_heap_factory", "numbered_state_heap_factory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__bdd_allocator = {"_p_spot__bdd_allocator", "spot::bdd_allocator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__bdd_dict = {"_p_spot__bdd_dict", "spot::bdd_dict *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__couvreur99_check = {"_p_spot__couvreur99_check", "spot::couvreur99_check *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__couvreur99_check_shy = {"_p_spot__couvreur99_check_shy", "spot::couvreur99_check_shy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__dotty_decorator = {"_p_spot__dotty_decorator", "spot::dotty_decorator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__emptiness_check = {"_p_spot__emptiness_check", "spot::emptiness_check *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__emptiness_check_instantiator = {"_p_spot__emptiness_check_instantiator", "spot::emptiness_check_instantiator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__emptiness_check_result = {"_p_spot__emptiness_check_result", "spot::emptiness_check_result *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__loopless_modular_mixed_radix_gray_code = {"_p_spot__loopless_modular_mixed_radix_gray_code", "spot::loopless_modular_mixed_radix_gray_code *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__atomic_prop = {"_p_spot__ltl__atomic_prop", "spot::ltl::atomic_prop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__atomic_prop_set = {"_p_spot__ltl__atomic_prop_set", "spot::ltl::atomic_prop_set *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__binop = {"_p_spot__ltl__binop", "spot::ltl::binop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__const_visitor = {"_p_spot__ltl__const_visitor", "spot::ltl::const_visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__constant = {"_p_spot__ltl__constant", "spot::ltl::constant *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__default_environment = {"_p_spot__ltl__default_environment", "spot::ltl::default_environment *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__environment = {"_p_spot__ltl__environment", "spot::ltl::environment *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__formula = {"_p_spot__ltl__formula", "spot::ltl::formula *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__formula_ptr_hash = {"_p_spot__ltl__formula_ptr_hash", "spot::ltl::formula_ptr_hash *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__formula_ptr_less_than = {"_p_spot__ltl__formula_ptr_less_than", "spot::ltl::formula_ptr_less_than *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__multop = {"_p_spot__ltl__multop", "spot::ltl::multop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__parse_error_list = {"_p_spot__ltl__parse_error_list", "spot::ltl::parse_error_list *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__ref_formula = {"_p_spot__ltl__ref_formula", "spot::ltl::ref_formula *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__unabbreviate_logic_visitor = {"_p_spot__ltl__unabbreviate_logic_visitor", "spot::ltl::unabbreviate_logic_visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__unabbreviate_ltl_visitor = {"_p_spot__ltl__unabbreviate_ltl_visitor", "spot::ltl::unabbreviate_ltl_visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__unop = {"_p_spot__ltl__unop", "spot::ltl::unop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__ltl__visitor = {"_p_spot__ltl__visitor", "spot::ltl::visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__minato_isop = {"_p_spot__minato_isop", "spot::minato_isop *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__option_map = {"_p_spot__option_map", "spot::option_map *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state = {"_p_spot__state", "spot::state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_bdd = {"_p_spot__state_bdd", "spot::state_bdd *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_explicit = {"_p_spot__state_explicit", "spot::state_explicit *|spot::tgba_explicit::state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_explicit__transition = {"_p_spot__state_explicit__transition", "spot::state_explicit::transition *|spot::tgba_explicit::transition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_product = {"_p_spot__state_product", "spot::state_product *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_ptr_equal = {"_p_spot__state_ptr_equal", "spot::state_ptr_equal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_ptr_hash = {"_p_spot__state_ptr_hash", "spot::state_ptr_hash *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_ptr_less_than = {"_p_spot__state_ptr_less_than", "spot::state_ptr_less_than *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_set = {"_p_spot__state_set", "spot::state_set *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_shared_ptr_equal = {"_p_spot__state_shared_ptr_equal", "spot::state_shared_ptr_equal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_shared_ptr_hash = {"_p_spot__state_shared_ptr_hash", "spot::state_shared_ptr_hash *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__state_shared_ptr_less_than = {"_p_spot__state_shared_ptr_less_than", "spot::state_shared_ptr_less_than *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__taa_succ_iterator = {"_p_spot__taa_succ_iterator", "spot::taa_succ_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__taa_tgba = {"_p_spot__taa_tgba", "spot::taa_tgba *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__taa_tgba__transition = {"_p_spot__taa_tgba__transition", "spot::taa_tgba::transition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__taa_tgba_formula = {"_p_spot__taa_tgba_formula", "spot::taa_tgba_formula *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__taa_tgba_string = {"_p_spot__taa_tgba_string", "spot::taa_tgba_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba = {"_p_spot__tgba", "spot::tgba *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_bdd_concrete = {"_p_spot__tgba_bdd_concrete", "spot::tgba_bdd_concrete *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_bdd_core_data = {"_p_spot__tgba_bdd_core_data", "spot::tgba_bdd_core_data *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_explicit = {"_p_spot__tgba_explicit", "spot::tgba_explicit *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_explicit_formula = {"_p_spot__tgba_explicit_formula", "spot::tgba_explicit_formula *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_explicit_number = {"_p_spot__tgba_explicit_number", "spot::tgba_explicit_number *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_explicit_string = {"_p_spot__tgba_explicit_string", "spot::tgba_explicit_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_explicit_succ_iterator = {"_p_spot__tgba_explicit_succ_iterator", "spot::tgba_explicit_succ_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_product = {"_p_spot__tgba_product", "spot::tgba_product *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_product_init = {"_p_spot__tgba_product_init", "spot::tgba_product_init *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_run = {"_p_spot__tgba_run", "spot::tgba_run *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_run_dotty_decorator = {"_p_spot__tgba_run_dotty_decorator", "spot::tgba_run_dotty_decorator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_sba_proxy = {"_p_spot__tgba_sba_proxy", "spot::tgba_sba_proxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_statistics = {"_p_spot__tgba_statistics", "spot::tgba_statistics *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_sub_statistics = {"_p_spot__tgba_sub_statistics", "spot::tgba_sub_statistics *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_succ_iterator = {"_p_spot__tgba_succ_iterator", "spot::tgba_succ_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_succ_iterator_concrete = {"_p_spot__tgba_succ_iterator_concrete", "spot::tgba_succ_iterator_concrete *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_spot__tgba_tba_proxy = {"_p_spot__tgba_tba_proxy", "spot::tgba_tba_proxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_state = {"_p_state", "state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_state_set = {"_p_state_set", "state_set *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_spot__step_std__allocatorT_spot__step_t_t = {"_p_std__listT_spot__step_std__allocatorT_spot__step_t_t", "std::list< spot::tgba_run::step,std::allocator< spot::step > > *|std::list< spot::step,std::allocator< spot::step > > *|spot::tgba_run::steps *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t = {"_p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t", "std::list< spot::transition,std::allocator< spot::transition > > *|std::list< spot::state_explicit::transition,std::allocator< spot::transition > > *|spot::state_explicit::transitions_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_int_t = {"_p_std__mapT_int_int_t", "spot::bdd_dict::cc_map *|std::map< int,int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_spot__ltl__formula_const_p_t = {"_p_std__mapT_int_spot__ltl__formula_const_p_t", "spot::bdd_dict::vf_map *|std::map< int,spot::ltl::formula const * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_spot__ltl__formula_const_p_int_t = {"_p_std__mapT_spot__ltl__formula_const_p_int_t", "spot::bdd_dict::fv_map *|std::map< spot::ltl::formula const *,int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ofstream = {"_p_std__ofstream", "std::ofstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostringstream = {"_p_std__ostringstream", "std::ostringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t = {"_p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t", "std::set< std::list< spot::taa_tgba::transition *,std::allocator< spot::taa_tgba::transition * > > * > *|spot::taa_tgba::state_set *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_spot__ltl__formula_p_t = {"_p_std__vectorT_spot__ltl__formula_p_t", "spot::ltl::multop::vec *|std::vector< spot::ltl::formula * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_steps = {"_p_steps", "steps *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tgba_bdd_factory = {"_p_tgba_bdd_factory", "tgba_bdd_factory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_transition = {"_p_transition", "transition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_transitions_t = {"_p_transitions_t", "transitions_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_statistics = {"_p_unsigned_statistics", "unsigned_statistics *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vec = {"_p_vec", "vec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vf_map = {"_p_vf_map", "vf_map *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_visitor = {"_p_visitor", "visitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_automatop,
  &_swigt__p_bdd,
  &_swigt__p_bddPair,
  &_swigt__p_boost__shared_ptrT_spot__state_const_t,
  &_swigt__p_cc_map,
  &_swigt__p_char,
  &_swigt__p_const_visitor,
  &_swigt__p_couvreur99_check_status,
  &_swigt__p_cycle_list,
  &_swigt__p_environment,
  &_swigt__p_fixed_size_pool,
  &_swigt__p_fv_map,
  &_swigt__p_numbered_state_heap_factory,
  &_swigt__p_p_char,
  &_swigt__p_spot__bdd_allocator,
  &_swigt__p_spot__bdd_dict,
  &_swigt__p_spot__couvreur99_check,
  &_swigt__p_spot__couvreur99_check_shy,
  &_swigt__p_spot__dotty_decorator,
  &_swigt__p_spot__emptiness_check,
  &_swigt__p_spot__emptiness_check_instantiator,
  &_swigt__p_spot__emptiness_check_result,
  &_swigt__p_spot__loopless_modular_mixed_radix_gray_code,
  &_swigt__p_spot__ltl__atomic_prop,
  &_swigt__p_spot__ltl__atomic_prop_set,
  &_swigt__p_spot__ltl__binop,
  &_swigt__p_spot__ltl__const_visitor,
  &_swigt__p_spot__ltl__constant,
  &_swigt__p_spot__ltl__default_environment,
  &_swigt__p_spot__ltl__environment,
  &_swigt__p_spot__ltl__formula,
  &_swigt__p_spot__ltl__formula_ptr_hash,
  &_swigt__p_spot__ltl__formula_ptr_less_than,
  &_swigt__p_spot__ltl__multop,
  &_swigt__p_spot__ltl__parse_error_list,
  &_swigt__p_spot__ltl__ref_formula,
  &_swigt__p_spot__ltl__unabbreviate_logic_visitor,
  &_swigt__p_spot__ltl__unabbreviate_ltl_visitor,
  &_swigt__p_spot__ltl__unop,
  &_swigt__p_spot__ltl__visitor,
  &_swigt__p_spot__minato_isop,
  &_swigt__p_spot__option_map,
  &_swigt__p_spot__state,
  &_swigt__p_spot__state_bdd,
  &_swigt__p_spot__state_explicit,
  &_swigt__p_spot__state_explicit__transition,
  &_swigt__p_spot__state_product,
  &_swigt__p_spot__state_ptr_equal,
  &_swigt__p_spot__state_ptr_hash,
  &_swigt__p_spot__state_ptr_less_than,
  &_swigt__p_spot__state_set,
  &_swigt__p_spot__state_shared_ptr_equal,
  &_swigt__p_spot__state_shared_ptr_hash,
  &_swigt__p_spot__state_shared_ptr_less_than,
  &_swigt__p_spot__taa_succ_iterator,
  &_swigt__p_spot__taa_tgba,
  &_swigt__p_spot__taa_tgba__transition,
  &_swigt__p_spot__taa_tgba_formula,
  &_swigt__p_spot__taa_tgba_string,
  &_swigt__p_spot__tgba,
  &_swigt__p_spot__tgba_bdd_concrete,
  &_swigt__p_spot__tgba_bdd_core_data,
  &_swigt__p_spot__tgba_explicit,
  &_swigt__p_spot__tgba_explicit_formula,
  &_swigt__p_spot__tgba_explicit_number,
  &_swigt__p_spot__tgba_explicit_string,
  &_swigt__p_spot__tgba_explicit_succ_iterator,
  &_swigt__p_spot__tgba_product,
  &_swigt__p_spot__tgba_product_init,
  &_swigt__p_spot__tgba_run,
  &_swigt__p_spot__tgba_run_dotty_decorator,
  &_swigt__p_spot__tgba_sba_proxy,
  &_swigt__p_spot__tgba_statistics,
  &_swigt__p_spot__tgba_sub_statistics,
  &_swigt__p_spot__tgba_succ_iterator,
  &_swigt__p_spot__tgba_succ_iterator_concrete,
  &_swigt__p_spot__tgba_tba_proxy,
  &_swigt__p_state,
  &_swigt__p_state_set,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__listT_spot__step_std__allocatorT_spot__step_t_t,
  &_swigt__p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t,
  &_swigt__p_std__mapT_int_int_t,
  &_swigt__p_std__mapT_int_spot__ltl__formula_const_p_t,
  &_swigt__p_std__mapT_spot__ltl__formula_const_p_int_t,
  &_swigt__p_std__ofstream,
  &_swigt__p_std__ostream,
  &_swigt__p_std__ostringstream,
  &_swigt__p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t,
  &_swigt__p_std__vectorT_spot__ltl__formula_p_t,
  &_swigt__p_steps,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_tgba_bdd_factory,
  &_swigt__p_transition,
  &_swigt__p_transitions_t,
  &_swigt__p_unsigned_statistics,
  &_swigt__p_vec,
  &_swigt__p_vf_map,
  &_swigt__p_visitor,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_automatop[] = {  {&_swigt__p_automatop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bdd[] = {  {&_swigt__p_bdd, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bddPair[] = {  {&_swigt__p_bddPair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_spot__state_const_t[] = {  {&_swigt__p_boost__shared_ptrT_spot__state_const_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cc_map[] = {  {&_swigt__p_cc_map, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_visitor[] = {  {&_swigt__p_const_visitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_couvreur99_check_status[] = {  {&_swigt__p_couvreur99_check_status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cycle_list[] = {  {&_swigt__p_cycle_list, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_environment[] = {  {&_swigt__p_environment, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fixed_size_pool[] = {  {&_swigt__p_fixed_size_pool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fv_map[] = {  {&_swigt__p_fv_map, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_numbered_state_heap_factory[] = {  {&_swigt__p_numbered_state_heap_factory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__bdd_allocator[] = {  {&_swigt__p_spot__bdd_dict, _p_spot__bdd_dictTo_p_spot__bdd_allocator, 0, 0},  {&_swigt__p_spot__bdd_allocator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__bdd_dict[] = {  {&_swigt__p_spot__bdd_dict, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__couvreur99_check[] = {  {&_swigt__p_spot__couvreur99_check_shy, _p_spot__couvreur99_check_shyTo_p_spot__couvreur99_check, 0, 0},  {&_swigt__p_spot__couvreur99_check, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__couvreur99_check_shy[] = {  {&_swigt__p_spot__couvreur99_check_shy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__dotty_decorator[] = {  {&_swigt__p_spot__dotty_decorator, 0, 0, 0},  {&_swigt__p_spot__tgba_run_dotty_decorator, _p_spot__tgba_run_dotty_decoratorTo_p_spot__dotty_decorator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__emptiness_check[] = {  {&_swigt__p_spot__couvreur99_check_shy, _p_spot__couvreur99_check_shyTo_p_spot__emptiness_check, 0, 0},  {&_swigt__p_spot__emptiness_check, 0, 0, 0},  {&_swigt__p_spot__couvreur99_check, _p_spot__couvreur99_checkTo_p_spot__emptiness_check, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__emptiness_check_instantiator[] = {  {&_swigt__p_spot__emptiness_check_instantiator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__emptiness_check_result[] = {  {&_swigt__p_spot__emptiness_check_result, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__loopless_modular_mixed_radix_gray_code[] = {  {&_swigt__p_spot__loopless_modular_mixed_radix_gray_code, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__atomic_prop[] = {  {&_swigt__p_spot__ltl__atomic_prop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__atomic_prop_set[] = {  {&_swigt__p_spot__ltl__atomic_prop_set, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__binop[] = {  {&_swigt__p_spot__ltl__binop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__const_visitor[] = {  {&_swigt__p_spot__ltl__const_visitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__constant[] = {  {&_swigt__p_spot__ltl__constant, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__default_environment[] = {  {&_swigt__p_spot__ltl__default_environment, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__environment[] = {  {&_swigt__p_spot__ltl__environment, 0, 0, 0},  {&_swigt__p_spot__ltl__default_environment, _p_spot__ltl__default_environmentTo_p_spot__ltl__environment, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__formula[] = {  {&_swigt__p_spot__ltl__formula, 0, 0, 0},  {&_swigt__p_spot__ltl__ref_formula, _p_spot__ltl__ref_formulaTo_p_spot__ltl__formula, 0, 0},  {&_swigt__p_spot__ltl__atomic_prop, _p_spot__ltl__atomic_propTo_p_spot__ltl__formula, 0, 0},  {&_swigt__p_spot__ltl__constant, _p_spot__ltl__constantTo_p_spot__ltl__formula, 0, 0},  {&_swigt__p_spot__ltl__binop, _p_spot__ltl__binopTo_p_spot__ltl__formula, 0, 0},  {&_swigt__p_spot__ltl__multop, _p_spot__ltl__multopTo_p_spot__ltl__formula, 0, 0},  {&_swigt__p_spot__ltl__unop, _p_spot__ltl__unopTo_p_spot__ltl__formula, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__formula_ptr_hash[] = {  {&_swigt__p_spot__ltl__formula_ptr_hash, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__formula_ptr_less_than[] = {  {&_swigt__p_spot__ltl__formula_ptr_less_than, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__multop[] = {  {&_swigt__p_spot__ltl__multop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__parse_error_list[] = {  {&_swigt__p_spot__ltl__parse_error_list, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__ref_formula[] = {  {&_swigt__p_spot__ltl__ref_formula, 0, 0, 0},  {&_swigt__p_spot__ltl__atomic_prop, _p_spot__ltl__atomic_propTo_p_spot__ltl__ref_formula, 0, 0},  {&_swigt__p_spot__ltl__binop, _p_spot__ltl__binopTo_p_spot__ltl__ref_formula, 0, 0},  {&_swigt__p_spot__ltl__multop, _p_spot__ltl__multopTo_p_spot__ltl__ref_formula, 0, 0},  {&_swigt__p_spot__ltl__unop, _p_spot__ltl__unopTo_p_spot__ltl__ref_formula, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__unabbreviate_logic_visitor[] = {  {&_swigt__p_spot__ltl__unabbreviate_logic_visitor, 0, 0, 0},  {&_swigt__p_spot__ltl__unabbreviate_ltl_visitor, _p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__unabbreviate_logic_visitor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__unabbreviate_ltl_visitor[] = {  {&_swigt__p_spot__ltl__unabbreviate_ltl_visitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__unop[] = {  {&_swigt__p_spot__ltl__unop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__ltl__visitor[] = {  {&_swigt__p_spot__ltl__visitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__minato_isop[] = {  {&_swigt__p_spot__minato_isop, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__option_map[] = {  {&_swigt__p_spot__option_map, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state[] = {  {&_swigt__p_spot__state_set, _p_spot__state_setTo_p_spot__state, 0, 0},  {&_swigt__p_spot__state_explicit, _p_spot__state_explicitTo_p_spot__state, 0, 0},  {&_swigt__p_spot__state, 0, 0, 0},  {&_swigt__p_spot__state_bdd, _p_spot__state_bddTo_p_spot__state, 0, 0},  {&_swigt__p_spot__state_product, _p_spot__state_productTo_p_spot__state, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_bdd[] = {  {&_swigt__p_spot__state_bdd, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_explicit[] = {  {&_swigt__p_spot__state_explicit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_explicit__transition[] = {  {&_swigt__p_spot__state_explicit__transition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_product[] = {  {&_swigt__p_spot__state_product, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_ptr_equal[] = {  {&_swigt__p_spot__state_ptr_equal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_ptr_hash[] = {  {&_swigt__p_spot__state_ptr_hash, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_ptr_less_than[] = {  {&_swigt__p_spot__state_ptr_less_than, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_set[] = {  {&_swigt__p_spot__state_set, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_shared_ptr_equal[] = {  {&_swigt__p_spot__state_shared_ptr_equal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_shared_ptr_hash[] = {  {&_swigt__p_spot__state_shared_ptr_hash, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__state_shared_ptr_less_than[] = {  {&_swigt__p_spot__state_shared_ptr_less_than, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__taa_succ_iterator[] = {  {&_swigt__p_spot__taa_succ_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__taa_tgba[] = {  {&_swigt__p_spot__taa_tgba, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__taa_tgba__transition[] = {  {&_swigt__p_spot__taa_tgba__transition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__taa_tgba_formula[] = {  {&_swigt__p_spot__taa_tgba_formula, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__taa_tgba_string[] = {  {&_swigt__p_spot__taa_tgba_string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba[] = {  {&_swigt__p_spot__tgba, 0, 0, 0},  {&_swigt__p_spot__tgba_product_init, _p_spot__tgba_product_initTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_explicit_formula, _p_spot__tgba_explicit_formulaTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_explicit, _p_spot__tgba_explicitTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__taa_tgba, _p_spot__taa_tgbaTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_bdd_concrete, _p_spot__tgba_bdd_concreteTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_explicit_number, _p_spot__tgba_explicit_numberTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_explicit_string, _p_spot__tgba_explicit_stringTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_product, _p_spot__tgba_productTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_tba_proxy, _p_spot__tgba_tba_proxyTo_p_spot__tgba, 0, 0},  {&_swigt__p_spot__tgba_sba_proxy, _p_spot__tgba_sba_proxyTo_p_spot__tgba, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_bdd_concrete[] = {  {&_swigt__p_spot__tgba_bdd_concrete, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_bdd_core_data[] = {  {&_swigt__p_spot__tgba_bdd_core_data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_explicit[] = {  {&_swigt__p_spot__tgba_explicit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_explicit_formula[] = {  {&_swigt__p_spot__tgba_explicit_formula, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_explicit_number[] = {  {&_swigt__p_spot__tgba_explicit_number, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_explicit_string[] = {  {&_swigt__p_spot__tgba_explicit_string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_explicit_succ_iterator[] = {  {&_swigt__p_spot__tgba_explicit_succ_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_product[] = {  {&_swigt__p_spot__tgba_product_init, _p_spot__tgba_product_initTo_p_spot__tgba_product, 0, 0},  {&_swigt__p_spot__tgba_product, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_product_init[] = {  {&_swigt__p_spot__tgba_product_init, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_run[] = {  {&_swigt__p_spot__tgba_run, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_run_dotty_decorator[] = {  {&_swigt__p_spot__tgba_run_dotty_decorator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_sba_proxy[] = {  {&_swigt__p_spot__tgba_sba_proxy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_statistics[] = {  {&_swigt__p_spot__tgba_statistics, 0, 0, 0},  {&_swigt__p_spot__tgba_sub_statistics, _p_spot__tgba_sub_statisticsTo_p_spot__tgba_statistics, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_sub_statistics[] = {  {&_swigt__p_spot__tgba_sub_statistics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_succ_iterator[] = {  {&_swigt__p_spot__tgba_succ_iterator, 0, 0, 0},  {&_swigt__p_spot__taa_succ_iterator, _p_spot__taa_succ_iteratorTo_p_spot__tgba_succ_iterator, 0, 0},  {&_swigt__p_spot__tgba_succ_iterator_concrete, _p_spot__tgba_succ_iterator_concreteTo_p_spot__tgba_succ_iterator, 0, 0},  {&_swigt__p_spot__tgba_explicit_succ_iterator, _p_spot__tgba_explicit_succ_iteratorTo_p_spot__tgba_succ_iterator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_succ_iterator_concrete[] = {  {&_swigt__p_spot__tgba_succ_iterator_concrete, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_spot__tgba_tba_proxy[] = {  {&_swigt__p_spot__tgba_tba_proxy, 0, 0, 0},  {&_swigt__p_spot__tgba_sba_proxy, _p_spot__tgba_sba_proxyTo_p_spot__tgba_tba_proxy, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_state[] = {  {&_swigt__p_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_state_set[] = {  {&_swigt__p_state_set, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_spot__step_std__allocatorT_spot__step_t_t[] = {  {&_swigt__p_std__listT_spot__step_std__allocatorT_spot__step_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t[] = {  {&_swigt__p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_int_t[] = {  {&_swigt__p_std__mapT_int_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_spot__ltl__formula_const_p_t[] = {  {&_swigt__p_std__mapT_int_spot__ltl__formula_const_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_spot__ltl__formula_const_p_int_t[] = {  {&_swigt__p_std__mapT_spot__ltl__formula_const_p_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ofstream[] = {  {&_swigt__p_std__ofstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ofstream, _p_std__ofstreamTo_p_std__ostream, 0, 0},  {&_swigt__p_std__ostream, 0, 0, 0},  {&_swigt__p_std__ostringstream, _p_std__ostringstreamTo_p_std__ostream, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostringstream[] = {  {&_swigt__p_std__ostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t[] = {  {&_swigt__p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_spot__ltl__formula_p_t[] = {  {&_swigt__p_std__vectorT_spot__ltl__formula_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_steps[] = {  {&_swigt__p_steps, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tgba_bdd_factory[] = {  {&_swigt__p_tgba_bdd_factory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_transition[] = {  {&_swigt__p_transition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_transitions_t[] = {  {&_swigt__p_transitions_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_statistics[] = {  {&_swigt__p_unsigned_statistics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vec[] = {  {&_swigt__p_vec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vf_map[] = {  {&_swigt__p_vf_map, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_visitor[] = {  {&_swigt__p_visitor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_automatop,
  _swigc__p_bdd,
  _swigc__p_bddPair,
  _swigc__p_boost__shared_ptrT_spot__state_const_t,
  _swigc__p_cc_map,
  _swigc__p_char,
  _swigc__p_const_visitor,
  _swigc__p_couvreur99_check_status,
  _swigc__p_cycle_list,
  _swigc__p_environment,
  _swigc__p_fixed_size_pool,
  _swigc__p_fv_map,
  _swigc__p_numbered_state_heap_factory,
  _swigc__p_p_char,
  _swigc__p_spot__bdd_allocator,
  _swigc__p_spot__bdd_dict,
  _swigc__p_spot__couvreur99_check,
  _swigc__p_spot__couvreur99_check_shy,
  _swigc__p_spot__dotty_decorator,
  _swigc__p_spot__emptiness_check,
  _swigc__p_spot__emptiness_check_instantiator,
  _swigc__p_spot__emptiness_check_result,
  _swigc__p_spot__loopless_modular_mixed_radix_gray_code,
  _swigc__p_spot__ltl__atomic_prop,
  _swigc__p_spot__ltl__atomic_prop_set,
  _swigc__p_spot__ltl__binop,
  _swigc__p_spot__ltl__const_visitor,
  _swigc__p_spot__ltl__constant,
  _swigc__p_spot__ltl__default_environment,
  _swigc__p_spot__ltl__environment,
  _swigc__p_spot__ltl__formula,
  _swigc__p_spot__ltl__formula_ptr_hash,
  _swigc__p_spot__ltl__formula_ptr_less_than,
  _swigc__p_spot__ltl__multop,
  _swigc__p_spot__ltl__parse_error_list,
  _swigc__p_spot__ltl__ref_formula,
  _swigc__p_spot__ltl__unabbreviate_logic_visitor,
  _swigc__p_spot__ltl__unabbreviate_ltl_visitor,
  _swigc__p_spot__ltl__unop,
  _swigc__p_spot__ltl__visitor,
  _swigc__p_spot__minato_isop,
  _swigc__p_spot__option_map,
  _swigc__p_spot__state,
  _swigc__p_spot__state_bdd,
  _swigc__p_spot__state_explicit,
  _swigc__p_spot__state_explicit__transition,
  _swigc__p_spot__state_product,
  _swigc__p_spot__state_ptr_equal,
  _swigc__p_spot__state_ptr_hash,
  _swigc__p_spot__state_ptr_less_than,
  _swigc__p_spot__state_set,
  _swigc__p_spot__state_shared_ptr_equal,
  _swigc__p_spot__state_shared_ptr_hash,
  _swigc__p_spot__state_shared_ptr_less_than,
  _swigc__p_spot__taa_succ_iterator,
  _swigc__p_spot__taa_tgba,
  _swigc__p_spot__taa_tgba__transition,
  _swigc__p_spot__taa_tgba_formula,
  _swigc__p_spot__taa_tgba_string,
  _swigc__p_spot__tgba,
  _swigc__p_spot__tgba_bdd_concrete,
  _swigc__p_spot__tgba_bdd_core_data,
  _swigc__p_spot__tgba_explicit,
  _swigc__p_spot__tgba_explicit_formula,
  _swigc__p_spot__tgba_explicit_number,
  _swigc__p_spot__tgba_explicit_string,
  _swigc__p_spot__tgba_explicit_succ_iterator,
  _swigc__p_spot__tgba_product,
  _swigc__p_spot__tgba_product_init,
  _swigc__p_spot__tgba_run,
  _swigc__p_spot__tgba_run_dotty_decorator,
  _swigc__p_spot__tgba_sba_proxy,
  _swigc__p_spot__tgba_statistics,
  _swigc__p_spot__tgba_sub_statistics,
  _swigc__p_spot__tgba_succ_iterator,
  _swigc__p_spot__tgba_succ_iterator_concrete,
  _swigc__p_spot__tgba_tba_proxy,
  _swigc__p_state,
  _swigc__p_state_set,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__listT_spot__step_std__allocatorT_spot__step_t_t,
  _swigc__p_std__listT_spot__transition_std__allocatorT_spot__transition_t_t,
  _swigc__p_std__mapT_int_int_t,
  _swigc__p_std__mapT_int_spot__ltl__formula_const_p_t,
  _swigc__p_std__mapT_spot__ltl__formula_const_p_int_t,
  _swigc__p_std__ofstream,
  _swigc__p_std__ostream,
  _swigc__p_std__ostringstream,
  _swigc__p_std__setT_std__listT_spot__transition_p_std__allocatorT_spot__transition_p_t_t_p_t,
  _swigc__p_std__vectorT_spot__ltl__formula_p_t,
  _swigc__p_steps,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_tgba_bdd_factory,
  _swigc__p_transition,
  _swigc__p_transitions_t,
  _swigc__p_unsigned_statistics,
  _swigc__p_vec,
  _swigc__p_vf_map,
  _swigc__p_visitor,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  md = d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "binop_Xor",SWIG_From_int(static_cast< int >(spot::ltl::binop::Xor)));
  SWIG_Python_SetConstant(d, "binop_Implies",SWIG_From_int(static_cast< int >(spot::ltl::binop::Implies)));
  SWIG_Python_SetConstant(d, "binop_Equiv",SWIG_From_int(static_cast< int >(spot::ltl::binop::Equiv)));
  SWIG_Python_SetConstant(d, "binop_U",SWIG_From_int(static_cast< int >(spot::ltl::binop::U)));
  SWIG_Python_SetConstant(d, "binop_R",SWIG_From_int(static_cast< int >(spot::ltl::binop::R)));
  SWIG_Python_SetConstant(d, "binop_W",SWIG_From_int(static_cast< int >(spot::ltl::binop::W)));
  SWIG_Python_SetConstant(d, "binop_M",SWIG_From_int(static_cast< int >(spot::ltl::binop::M)));
  SWIG_Python_SetConstant(d, "constant_False",SWIG_From_int(static_cast< int >(spot::ltl::constant::False)));
  SWIG_Python_SetConstant(d, "constant_True",SWIG_From_int(static_cast< int >(spot::ltl::constant::True)));
  SWIG_Python_SetConstant(d, "multop_Or",SWIG_From_int(static_cast< int >(spot::ltl::multop::Or)));
  SWIG_Python_SetConstant(d, "multop_And",SWIG_From_int(static_cast< int >(spot::ltl::multop::And)));
  SWIG_Python_SetConstant(d, "unop_Not",SWIG_From_int(static_cast< int >(spot::ltl::unop::Not)));
  SWIG_Python_SetConstant(d, "unop_X",SWIG_From_int(static_cast< int >(spot::ltl::unop::X)));
  SWIG_Python_SetConstant(d, "unop_F",SWIG_From_int(static_cast< int >(spot::ltl::unop::F)));
  SWIG_Python_SetConstant(d, "unop_G",SWIG_From_int(static_cast< int >(spot::ltl::unop::G)));
  SWIG_Python_SetConstant(d, "unop_Finish",SWIG_From_int(static_cast< int >(spot::ltl::unop::Finish)));
  SWIG_Python_SetConstant(d, "Reduce_None",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_None)));
  SWIG_Python_SetConstant(d, "Reduce_Basics",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_Basics)));
  SWIG_Python_SetConstant(d, "Reduce_Syntactic_Implications",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_Syntactic_Implications)));
  SWIG_Python_SetConstant(d, "Reduce_Eventuality_And_Universality",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_Eventuality_And_Universality)));
  SWIG_Python_SetConstant(d, "Reduce_Containment_Checks",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_Containment_Checks)));
  SWIG_Python_SetConstant(d, "Reduce_Containment_Checks_Stronger",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_Containment_Checks_Stronger)));
  SWIG_Python_SetConstant(d, "Reduce_All",SWIG_From_int(static_cast< int >(spot::ltl::Reduce_All)));
  SWIG_Python_SetConstant(d, "Reduce_quotient_Dir_Sim",SWIG_From_int(static_cast< int >(spot::Reduce_quotient_Dir_Sim)));
  SWIG_Python_SetConstant(d, "Reduce_transition_Dir_Sim",SWIG_From_int(static_cast< int >(spot::Reduce_transition_Dir_Sim)));
  SWIG_Python_SetConstant(d, "Reduce_quotient_Del_Sim",SWIG_From_int(static_cast< int >(spot::Reduce_quotient_Del_Sim)));
  SWIG_Python_SetConstant(d, "Reduce_transition_Del_Sim",SWIG_From_int(static_cast< int >(spot::Reduce_transition_Del_Sim)));
  SWIG_Python_SetConstant(d, "Reduce_Scc",SWIG_From_int(static_cast< int >(spot::Reduce_Scc)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

