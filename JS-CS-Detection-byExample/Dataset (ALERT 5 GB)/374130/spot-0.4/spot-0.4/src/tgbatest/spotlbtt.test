#!/bin/sh
# Copyright (C) 2003, 2004, 2005, 2006, 2007 Laboratoire d'Informatique de
# Paris 6 (LIP6), département Systèmes Répartis Coopératifs (SRC),
# Université Pierre et Marie Curie.
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Spot; see the file COPYING.  If not, write to the Free
# Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.


echo 'This test can take as long as 15 minutes on a 2GHz Pentium 4.'

. ./defs

set -e

cat > config <<EOF
Algorithm
{
   Name = "Spot (Couvreur -- LaCIM)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- LaCIM), reduction of formula"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r4 -F -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- LaCIM), degeneralized"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -t -D'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- LaCIM), fake"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -T'"
   Enabled = no
}

Algorithm
{
   Name = "Spot (Couvreur -- FM)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), basic reduction of formula"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r1 -F -f -t'"
   Enabled = no
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), reduction of formula using class of formula"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r2 -F -f -t'"
   Enabled = no
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), reduction of formula using implies relation"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r3 -F -f -t'"
   Enabled = no
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), reduction of formula (pre reduction)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r4 -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), reduction7 of formula (pre reduction)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r7 -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), reduction of formula in FM"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -fr4 -F -f -t'"
   Enabled = no
}

Algorithm
{
   Name = "Spot (Couvreur -- FM) reduction7 of formula in FM"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -fr7 -F -f -t'"
   Enabled = no
}



Algorithm
{
   Name = "Spot (Couvreur -- FM), post reduction with direct simulation"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -R1q -R1t -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), post reduction with delayed simulation"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -R2q -R2t -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), post reduction with scc"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -R3 -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), pre + post reduction"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r4 -R1q -R1t -R3 -F -f -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), pre + allpost reduction"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -r4 -R1q -R1t -R2q -R2t -R3 -F -f -t'"
   Enabled = no
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), without symb_merge"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -y -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), degeneralized"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -t -D'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM), degeneralized, via never claim"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spin './ltl2tgba -F -f -N'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM exprop)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -x -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM exprop), without symb_merge"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -x -y -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM exprop), degeneralized"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -x -t -D'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM post_branch + exprop)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -x -p -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM post_branch + exprop + flapprox)"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -x -p -L -t'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM post_branch + exprop), degeneralized"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -p -x -t -D'"
   Enabled = yes
}

Algorithm
{
   Name = "Spot (Couvreur -- FM post_branch + exprop + flapprox), degeneralized"
   Path = "${LBTT_TRANSLATE}"
   Parameters = "--spot './ltl2tgba -F -f -p -x -t -L -D'"
   Enabled = yes
}

GlobalOptions
{
   Rounds = 100
   Interactive = Never
#   Verbosity = 5
#   ComparisonCheck = no
#   ConsistencyCheck = no
#   IntersectionCheck = no
}

FormulaOptions
{
  Size = 1...13
  Propositions = 6

  AbbreviatedOperators = Yes
  GenerateMode = Normal
  OutputMode = Normal
  PropositionPriority = 50

  TruePriority = 1
  FalsePriority = 1

  AndPriority = 10
  OrPriority = 10
  XorPriority = 0
  # EquivalencePriority = 0

  BeforePriority = 0
  StrongReleasePriority = 0
  WeakUntilPriority = 0

  DefaultOperatorPriority = 5
}
EOF

${LBTT}
rm config
