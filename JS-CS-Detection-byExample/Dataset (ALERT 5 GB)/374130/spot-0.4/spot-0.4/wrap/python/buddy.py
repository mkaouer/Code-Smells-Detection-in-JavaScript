# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _buddy
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class const_int_ptr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, const_int_ptr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, const_int_ptr, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _buddy.new_const_int_ptr(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_setmethods__["ptr"] = _buddy.const_int_ptr_ptr_set
    __swig_getmethods__["ptr"] = _buddy.const_int_ptr_ptr_get
    if _newclass:ptr = _swig_property(_buddy.const_int_ptr_ptr_get, _buddy.const_int_ptr_ptr_set)
    def __getitem__(*args): return _buddy.const_int_ptr___getitem__(*args)
    __swig_destroy__ = _buddy.delete_const_int_ptr
    __del__ = lambda self : None;
const_int_ptr_swigregister = _buddy.const_int_ptr_swigregister
const_int_ptr_swigregister(const_int_ptr)

class bdd(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bdd, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bdd, name)
    __repr__ = _swig_repr
    def id(*args): return _buddy.bdd_id(*args)
    def __cmp__(*args): return _buddy.bdd___cmp__(*args)
    def __str__(*args): return _buddy.bdd___str__(*args)
    def __and__(*args): return _buddy.bdd___and__(*args)
    def __xor__(*args): return _buddy.bdd___xor__(*args)
    def __or__(*args): return _buddy.bdd___or__(*args)
    def __rshift__(*args): return _buddy.bdd___rshift__(*args)
    def __lshift__(*args): return _buddy.bdd___lshift__(*args)
    def __sub__(*args): return _buddy.bdd___sub__(*args)
    def __neg__(*args): return _buddy.bdd___neg__(*args)
    def __init__(self, *args): 
        this = _buddy.new_bdd(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _buddy.delete_bdd
    __del__ = lambda self : None;
bdd_swigregister = _buddy.bdd_swigregister
bdd_swigregister(bdd)

bdd_init = _buddy.bdd_init
bdd_done = _buddy.bdd_done
bdd_setvarnum = _buddy.bdd_setvarnum
bdd_extvarnum = _buddy.bdd_extvarnum
bdd_isrunning = _buddy.bdd_isrunning
bdd_setmaxnodenum = _buddy.bdd_setmaxnodenum
bdd_setmaxincrease = _buddy.bdd_setmaxincrease
bdd_setminfreenodes = _buddy.bdd_setminfreenodes
bdd_getnodenum = _buddy.bdd_getnodenum
bdd_getallocnum = _buddy.bdd_getallocnum
bdd_versionstr = _buddy.bdd_versionstr
bdd_versionnum = _buddy.bdd_versionnum
bdd_fprintstat = _buddy.bdd_fprintstat
bdd_printstat = _buddy.bdd_printstat
bdd_errstring = _buddy.bdd_errstring
bdd_clear_error = _buddy.bdd_clear_error
bdd_ithvar = _buddy.bdd_ithvar
bdd_nithvar = _buddy.bdd_nithvar
bdd_var = _buddy.bdd_var
bdd_low = _buddy.bdd_low
bdd_high = _buddy.bdd_high
bdd_scanset = _buddy.bdd_scanset
bdd_makeset = _buddy.bdd_makeset
bdd_setbddpair = _buddy.bdd_setbddpair
bdd_replace = _buddy.bdd_replace
bdd_compose = _buddy.bdd_compose
bdd_veccompose = _buddy.bdd_veccompose
bdd_restrict = _buddy.bdd_restrict
bdd_constrain = _buddy.bdd_constrain
bdd_simplify = _buddy.bdd_simplify
bdd_ibuildcube = _buddy.bdd_ibuildcube
bdd_not = _buddy.bdd_not
bdd_apply = _buddy.bdd_apply
bdd_and = _buddy.bdd_and
bdd_or = _buddy.bdd_or
bdd_xor = _buddy.bdd_xor
bdd_imp = _buddy.bdd_imp
bdd_biimp = _buddy.bdd_biimp
bdd_ite = _buddy.bdd_ite
bdd_exist = _buddy.bdd_exist
bdd_existcomp = _buddy.bdd_existcomp
bdd_forall = _buddy.bdd_forall
bdd_forallcomp = _buddy.bdd_forallcomp
bdd_unique = _buddy.bdd_unique
bdd_uniquecomp = _buddy.bdd_uniquecomp
bdd_appex = _buddy.bdd_appex
bdd_appexcomp = _buddy.bdd_appexcomp
bdd_appall = _buddy.bdd_appall
bdd_appallcomp = _buddy.bdd_appallcomp
bdd_appuni = _buddy.bdd_appuni
bdd_appunicomp = _buddy.bdd_appunicomp
bdd_support = _buddy.bdd_support
bdd_satone = _buddy.bdd_satone
bdd_satoneset = _buddy.bdd_satoneset
bdd_fullsatone = _buddy.bdd_fullsatone
bdd_allsat = _buddy.bdd_allsat
bdd_satcount = _buddy.bdd_satcount
bdd_satcountset = _buddy.bdd_satcountset
bdd_satcountln = _buddy.bdd_satcountln
bdd_satcountlnset = _buddy.bdd_satcountlnset
bdd_nodecount = _buddy.bdd_nodecount
bdd_varprofile = _buddy.bdd_varprofile
bdd_pathcount = _buddy.bdd_pathcount
bdd_fprinttable = _buddy.bdd_fprinttable
bdd_printtable = _buddy.bdd_printtable
bdd_fprintset = _buddy.bdd_fprintset
bdd_printset = _buddy.bdd_printset
bdd_printdot = _buddy.bdd_printdot
bdd_fprintdot = _buddy.bdd_fprintdot
bdd_fnprintdot = _buddy.bdd_fnprintdot
bdd_fnsave = _buddy.bdd_fnsave
bdd_save = _buddy.bdd_save
bdd_fnload = _buddy.bdd_fnload
bdd_load = _buddy.bdd_load
bdd_addvarblock = _buddy.bdd_addvarblock
bddop_and = _buddy.bddop_and
bddop_xor = _buddy.bddop_xor
bddop_or = _buddy.bddop_or
bddop_nand = _buddy.bddop_nand
bddop_nor = _buddy.bddop_nor
bddop_imp = _buddy.bddop_imp
bddop_biimp = _buddy.bddop_biimp
bddop_diff = _buddy.bddop_diff
bddop_less = _buddy.bddop_less
bddop_invimp = _buddy.bddop_invimp
BDD_REORDER_NONE = _buddy.BDD_REORDER_NONE
BDD_REORDER_WIN2 = _buddy.BDD_REORDER_WIN2
BDD_REORDER_WIN2ITE = _buddy.BDD_REORDER_WIN2ITE
BDD_REORDER_SIFT = _buddy.BDD_REORDER_SIFT
BDD_REORDER_SIFTITE = _buddy.BDD_REORDER_SIFTITE
BDD_REORDER_WIN3 = _buddy.BDD_REORDER_WIN3
BDD_REORDER_WIN3ITE = _buddy.BDD_REORDER_WIN3ITE
BDD_REORDER_RANDOM = _buddy.BDD_REORDER_RANDOM
fdd_extdomain = _buddy.fdd_extdomain
fdd_overlapdomain = _buddy.fdd_overlapdomain
fdd_clearall = _buddy.fdd_clearall
fdd_domainnum = _buddy.fdd_domainnum
fdd_domainsize = _buddy.fdd_domainsize
fdd_varnum = _buddy.fdd_varnum
fdd_vars = _buddy.fdd_vars
fdd_ithvar = _buddy.fdd_ithvar
fdd_scanvar = _buddy.fdd_scanvar
fdd_scanallvar = _buddy.fdd_scanallvar
fdd_ithset = _buddy.fdd_ithset
fdd_domain = _buddy.fdd_domain
fdd_equals = _buddy.fdd_equals
fdd_printset = _buddy.fdd_printset
fdd_fprintset = _buddy.fdd_fprintset
fdd_scanset = _buddy.fdd_scanset
fdd_makeset = _buddy.fdd_makeset
fdd_intaddvarblock = _buddy.fdd_intaddvarblock
fdd_setpair = _buddy.fdd_setpair
fdd_setpairs = _buddy.fdd_setpairs
bvec_copy = _buddy.bvec_copy
bvec_true = _buddy.bvec_true
bvec_false = _buddy.bvec_false
bvec_con = _buddy.bvec_con
bvec_var = _buddy.bvec_var
bvec_varfdd = _buddy.bvec_varfdd
bvec_varvec = _buddy.bvec_varvec
bvec_coerce = _buddy.bvec_coerce
bvec_isconst = _buddy.bvec_isconst
bvec_val = _buddy.bvec_val
bvec_map1 = _buddy.bvec_map1
bvec_map2 = _buddy.bvec_map2
bvec_map3 = _buddy.bvec_map3
bvec_add = _buddy.bvec_add
bvec_sub = _buddy.bvec_sub
bvec_mulfixed = _buddy.bvec_mulfixed
bvec_mul = _buddy.bvec_mul
bvec_divfixed = _buddy.bvec_divfixed
bvec_div = _buddy.bvec_div
bvec_ite = _buddy.bvec_ite
bvec_shlfixed = _buddy.bvec_shlfixed
bvec_shl = _buddy.bvec_shl
bvec_shrfixed = _buddy.bvec_shrfixed
bvec_shr = _buddy.bvec_shr
bvec_lth = _buddy.bvec_lth
bvec_lte = _buddy.bvec_lte
bvec_gth = _buddy.bvec_gth
bvec_gte = _buddy.bvec_gte
bvec_equ = _buddy.bvec_equ
bvec_neq = _buddy.bvec_neq
class bvec(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bvec, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bvec, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _buddy.new_bvec(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _buddy.delete_bvec
    __del__ = lambda self : None;
    def set(*args): return _buddy.bvec_set(*args)
    def bitnum(*args): return _buddy.bvec_bitnum(*args)
    def empty(*args): return _buddy.bvec_empty(*args)
    def __and__(*args): return _buddy.bvec___and__(*args)
    def __xor__(*args): return _buddy.bvec___xor__(*args)
    def __or__(*args): return _buddy.bvec___or__(*args)
    def __lshift__(*args): return _buddy.bvec___lshift__(*args)
    def __rshift__(*args): return _buddy.bvec___rshift__(*args)
    def __add__(*args): return _buddy.bvec___add__(*args)
    def __sub__(*args): return _buddy.bvec___sub__(*args)
    def __mul__(*args): return _buddy.bvec___mul__(*args)
    def __lt__(*args): return _buddy.bvec___lt__(*args)
    def __le__(*args): return _buddy.bvec___le__(*args)
    def __gt__(*args): return _buddy.bvec___gt__(*args)
    def __ge__(*args): return _buddy.bvec___ge__(*args)
    def __eq__(*args): return _buddy.bvec___eq__(*args)
    def __ne__(*args): return _buddy.bvec___ne__(*args)
    def __str__(*args): return _buddy.bvec___str__(*args)
    def __getitem__(*args): return _buddy.bvec___getitem__(*args)
bvec_swigregister = _buddy.bvec_swigregister
bvec_swigregister(bvec)
cvar = _buddy.cvar
bddfalse = cvar.bddfalse
bddtrue = cvar.bddtrue



