<map id="spot::tgba" name="spot::tgba">
<area shape="rect" id="node3" href="$classspot_1_1explicit__graph.html" title="{spot::explicit_graph\l\&lt; State, tgba \&gt;\n|# ls_\l# alias_\l# sl_\l# init_\l# dict_\l# all_acceptance_conditions_\l# all_acceptance_conditions\l_computed_\l# neg_acceptance_conditions_\l# to_string_func_\l|+ explicit_graph()\l+ add_default_init()\l+ num_states()\l+ create_transition()\l+ create_transition()\l+ get_transition()\l+ add_condition()\l+ add_conditions()\l+ has_acceptance_condition()\l+ has_state()\land 22 more...\l# compute_support_conditions()\l# compute_support_variables()\l}" alt="" coords="5,515,211,949"/>
<area shape="rect" id="node7" href="$classspot_1_1fair__kripke.html" title="Interface for a Fair Kripke structure.A Kripke structure is a graph in which each node (=state) is la..." alt="" coords="235,667,445,797"/>
<area shape="rect" id="node13" href="$classspot_1_1sba.html" title="A State&#45;based Generalized BÃ¼chi Automaton.An SBA is a TGBA in which the outgoing transitions of a st..." alt="" coords="469,691,619,773"/>
<area shape="rect" id="node19" href="$classspot_1_1taa__tgba.html" title="A self&#45;loop Transition&#45;based Alternating Automaton (TAA) which is seen as a TGBA (abstract class..." alt="" coords="643,547,848,917"/>
<area shape="rect" id="node33" href="$classspot_1_1tgba__bdd__concrete.html" title="A concrete spot::tgba implemented using BDDs." alt="" coords="872,555,1077,909"/>
<area shape="rect" id="node35" href="$classspot_1_1tgba__kv__complement.html" title="Build a complemented automaton.The construction comes from:" alt="" coords="1101,587,1307,877"/>
<area shape="rect" id="node37" href="$classspot_1_1tgba__product.html" title="A lazy product. (States are computed on the fly.)" alt="" coords="1331,515,1536,949"/>
<area shape="rect" id="node43" href="$classspot_1_1tgba__safra__complement.html" title="Build a complemented automaton.It creates an automaton that recognizes the negated language of aut..." alt="" coords="1560,579,1765,885"/>
<area shape="rect" id="node45" href="$classspot_1_1tgba__scc.html" title="Wrap a tgba to offer information about strongly connected components.This class is a spot::tgba wrapp..." alt="" coords="1789,579,1995,885"/>
<area shape="rect" id="node49" href="$classspot_1_1tgba__sgba__proxy.html" title="Change the labeling&#45;mode of spot::tgba on the fly, producing a state&#45;based generalized Büchi automato..." alt="" coords="2019,579,2229,885"/>
<area shape="rect" id="node51" href="$classspot_1_1tgba__tba__proxy.html" title="Degeneralize a spot::tgba on the fly, producing a TBA.This class acts as a proxy in front of a spot::..." alt="" coords="2253,515,2475,949"/>
<area shape="rect" id="node55" href="$classspot_1_1tgba__union.html" title="A lazy union. (States are computed on the fly.)" alt="" coords="2499,507,2704,957"/>
<area shape="rect" id="node57" href="$classspot_1_1tgta.html" title="A Transition&#45;based Generalized Testing Automaton (TGTA).Transition&#45;based Generalized Testing Automato..." alt="" coords="2728,675,2909,789"/>
<area shape="rect" id="node5" href="$classspot_1_1tgba__explicit.html" title="{spot::tgba_explicit\l\&lt; State \&gt;\n||+ tgba_explicit()\l+ ~tgba_explicit()\l&#45; tgba_explicit()\l&#45; operator=()\l}" alt="" coords="45,1153,171,1298"/>
<area shape="rect" id="node9" href="$classspot_1_1kripke.html" title="Interface for a Kripke structureA Kripke structure is a graph in which each node (=state) is labeled ..." alt="" coords="207,1161,417,1290"/>
<area shape="rect" id="node11" href="$classspot_1_1kripke__explicit.html" title="Kripke Structure." alt="" coords="245,1539,379,1941"/>
<area shape="rect" id="node15" href="$classspot_1_1explicit__graph.html" title="{spot::explicit_graph\l\&lt; State, sba \&gt;\n|# ls_\l# alias_\l# sl_\l# init_\l# dict_\l# all_acceptance_conditions_\l# all_acceptance_conditions\l_computed_\l# neg_acceptance_conditions_\l# to_string_func_\l|+ explicit_graph()\l+ add_default_init()\l+ num_states()\l+ create_transition()\l+ create_transition()\l+ get_transition()\l+ add_condition()\l+ add_conditions()\l+ has_acceptance_condition()\l+ has_state()\land 22 more...\l# compute_support_conditions()\l# compute_support_variables()\l}" alt="" coords="441,1009,647,1442"/>
<area shape="rect" id="node17" href="$classspot_1_1sba__explicit.html" title="{spot::sba_explicit\l\&lt; State \&gt;\n||+ sba_explicit()\l+ ~sba_explicit()\l+ state_is_accepting()\l&#45; sba_explicit()\l&#45; operator=()\l}" alt="" coords="464,1659,613,1821"/>
<area shape="rect" id="node21" href="$classspot_1_1taa__tgba__labelled.html" title="{spot::taa_tgba_labelled\l\&lt; label, label_hash \&gt;\n|# name_state_map_\l# state_name_map_\l|+ taa_tgba_labelled()\l+ set_init_state()\l+ set_init_state()\l+ create_transition()\l+ create_transition()\l+ add_acceptance_condition()\l+ format_state()\l+ output()\l# label_to_string()\l# clone_if()\l&#45; add_state()\l&#45; add_state_set()\l&#45; format_state_set()\l}" alt="" coords="728,1073,923,1378"/>
<area shape="rect" id="node23" href="$classspot_1_1taa__tgba__labelled.html" title="{spot::taa_tgba_labelled\l\&lt; const ltl::formula *,\l ltl::formula_ptr_hash \&gt;\n|# name_state_map_\l# state_name_map_\l|+ taa_tgba_labelled()\l+ set_init_state()\l+ set_init_state()\l+ create_transition()\l+ create_transition()\l+ add_acceptance_condition()\l+ format_state()\l+ output()\l# label_to_string()\l# clone_if()\l&#45; add_state()\l&#45; add_state_set()\l&#45; format_state_set()\l}" alt="" coords="881,1579,1076,1901"/>
<area shape="rect" id="node27" href="$classspot_1_1taa__tgba__labelled.html" title="{spot::taa_tgba_labelled\l\&lt; std::string, string\l_hash \&gt;\n|# name_state_map_\l# state_name_map_\l|+ taa_tgba_labelled()\l+ set_init_state()\l+ set_init_state()\l+ create_transition()\l+ create_transition()\l+ add_acceptance_condition()\l+ format_state()\l+ output()\l# label_to_string()\l# clone_if()\l&#45; add_state()\l&#45; add_state_set()\l&#45; format_state_set()\l}" alt="" coords="637,1579,832,1901"/>
<area shape="rect" id="node25" href="$classspot_1_1taa__tgba__formula.html" title="{spot::taa_tgba_formula\n||+ taa_tgba_formula()\l+ ~taa_tgba_formula()\l# label_to_string()\l# clone_if()\l}" alt="" coords="903,1993,1055,2122"/>
<area shape="rect" id="node29" href="$classspot_1_1taa__tgba__string.html" title="{spot::taa_tgba_string\n||+ taa_tgba_string()\l+ ~taa_tgba_string()\l# label_to_string()\l# clone_if()\l}" alt="" coords="664,1993,805,2122"/>
<area shape="rect" id="node39" href="$classspot_1_1tgba__product__init.html" title="A lazy product with different initial states." alt="" coords="1439,1169,1591,1282"/>
<area shape="rect" id="node41" href="$classspot_1_1tgta__product.html" title="A lazy product. (States are computed on the fly.)" alt="" coords="1289,1169,1415,1282"/>
<area shape="rect" id="node47" href="$classspot_1_1future__conditions__collector.html" title="Wrap a tgba to offer information about upcoming conditions.This class is a spot::tgba wrapper that si..." alt="" coords="1795,1137,1989,1314"/>
<area shape="rect" id="node53" href="$classspot_1_1tgba__sba__proxy.html" title="Degeneralize a spot::tgba on the fly, producing an SBA.This class acts as a proxy in front of a spot:..." alt="" coords="2289,1169,2439,1282"/>
<area shape="rect" id="node59" href="$classspot_1_1tgta__explicit.html" title="{spot::tgta_explicit\n|# ta_\l|+ tgta_explicit()\l+ get_init_state()\l+ succ_iter()\l+ get_dict()\l+ get_ta()\l+ get_ta()\l+ all_acceptance_conditions()\l+ neg_acceptance_conditions()\l+ format_state()\l+ succ_iter_by_changeset()\l# compute_support_conditions()\l# compute_support_variables()\l}" alt="" coords="2716,1097,2921,1354"/>
</map>
