.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.12.
.TH LTLCROSS "1" "October 2012" "ltlcross (spot 1.0)" "User Commands"
.SH NAME
ltlcross \- cross-compare LTL/PSL translators to Büchi automata
.SH SYNOPSIS
.B ltlcross
[\fIOPTION\fR...] [\fICOMMANDFMT\fR...]
.SH DESCRIPTION
.\" Add any additional description here
.PP
Call several LTL/PSL translators and cross\-compare their output to detect bugs,
or to gather statistics.  The list of formulas to use should be supplied on
standard input, or using the \fB\-f\fR or \fB\-F\fR options.
.SS "Input options:"
.TP
\fB\-f\fR, \fB\-\-formula\fR=\fISTRING\fR
process the formula STRING
.TP
\fB\-F\fR, \fB\-\-file\fR=\fIFILENAME\fR
process each line of FILENAME as a formula
.TP
\fB\-\-lbt\-input\fR
read all formulas using LBT's prefix syntax
.TP
\fB\-\-lenient\fR
parenthesized blocks that cannot be parsed as
subformulas are considered as atomic properties
.SS "Specifying translator to call:"
.TP
\fB\-t\fR, \fB\-\-translator\fR=\fICOMMANDFMT\fR
register one translators to call
.TP
\fB\-T\fR, \fB\-\-timeout\fR=\fINUMBER\fR
kill translators after NUMBER seconds
.PP
COMMANDFMT should specify input and output arguments using the following
character sequences:
.TP
%f,%s,%l,%w
the formula as a (quoted) string in Spot, Spin,
LBT, or Wring's syntax
.TP
%F,%S,%L,%W
the formula as a file in Spot, Spin, LBT, or
Wring's syntax
.TP
%N,%T
the output automaton as a Never claim, or in
LBTT's format
.PP
If either %l, %L, or %T are used, any input formula that does not use LBT\-style
atomic propositions (i.e. p0, p1, ...) will be relabeled automatically.
.SS "ltlcross behavior:"
.TP
\fB\-\-allow\-dups\fR
translate duplicate formulas in input
.TP
\fB\-\-no\-checks\fR
do not perform any sanity checks (negated formulas
will not be translated)
.TP
\fB\-\-stop\-on\-error\fR
stop on first execution error or failure to pass
sanity checks (timeouts are OK)
.SS "State-space generation:"
.TP
\fB\-\-density\fR=\fIFLOAT\fR
probability, between 0.0 and 1.0, to add a
transition between two states (0.1 by default)
.TP
\fB\-\-states\fR=\fIINT\fR
number of the states in the state\-spaces (200 by
default)
.SS "Statistics output:"
.TP
\fB\-\-csv\fR[=\fIFILENAME\fR]
output statistics as CSV in FILENAME or on
standard output
.TP
\fB\-\-json\fR[=\fIFILENAME\fR]
output statistics as JSON in FILENAME or on
standard output
.SS "Miscellaneous options:"
.TP
\fB\-\-help\fR
print this help
.TP
\fB\-\-version\fR
print program version
.PP
Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.
.SS "Exit status:"
.TP
0
everything went fine (timeouts are OK too)
.TP
1
some translator failed to output something we understand, or failed
sanity checks (statistics were output nonetheless)
.TP
2
ltlcross aborted on error
.SH EXAMPLES
The following commands compare never claims produced by ltl2tgba(1)
and spin(1) and 100 random formulas, using a timeout of 2 minutes.  A
trace of the execution of the two tools, including any potential issue
detected, is reported on standard error, while statistics are
written to \f(CWresults.json\fR.

.nf
% randltl \-n100 \-\-tree\-size=20..30 a b c | \e
ltlcross \-T120 'ltl2tgba \-s %f >%N' 'spin \-f %s >%N' \-\-json=results.json
.fi
.LP

The next command compare lbt, ltl3ba, and ltl2tgba(1) on a set of
formulas saved in file \f(CWinput.ltl\fR.  Statistics are again writen
as CSV into \f(CWresults.csv\fR.  Note the use of \f(CW%L\fR to
indicate that the formula passed to lbt should be written into a file
in LBT's format, and \f(CW%T\fR to read the output in LBTT's format
(which is a superset of the format output by LBT).

.nf
% ltlcross \-F input.ltl \-\-csv=results.csv \e
           'lbt <%L >%T' \e
           'ltl3ba \-f %s >%N' \e
           'ltl2tgba \-\-lbtt %f >%T'
.fi
.LP

If you use ltlcross in an automated testsuite just to check for
potential problems, avoid the \fB\-\-csv\fR and \fB\-\-json\fR
options: ltlcross is faster when it does not have to compute these
statistics.
.SH BIBLIOGRAPHY
ltlcross is a Spot-based reimplementation of a tool called LBTT.  LBTT
was developped by Heikki Tauriainen at the Helsinki University of
Technology.  The main motivation for the reimplementation was to
support PSL, and output more statistics about the translations.

The sanity checks performed on the result of each translator (by
either LBTT or ltlcross) are described in the following paper.  Our
implementation will detect and reports problems (like inconsistencies
between two translations) but unlike LBTT it does not offer an
interactive mode to investigate such problems.

.TP
th02
H. Tauriainen and K. Heljanko: Testing LTL formula translation into
Büchi automata.  Int. J. on Software Tools for Technology Transfer.
Volume 4, number 1, October 2002.
.SH "REPORTING BUGS"
Report bugs to <spot@lrde.epita.fr>.
.SH COPYRIGHT
Copyright \(co 2012  Laboratoire de Recherche et Développement de l'Epita.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR randltl (1),
.BR genltl (1),
.BR ltlfilt (1),
.BR ltl2tgba (1)
