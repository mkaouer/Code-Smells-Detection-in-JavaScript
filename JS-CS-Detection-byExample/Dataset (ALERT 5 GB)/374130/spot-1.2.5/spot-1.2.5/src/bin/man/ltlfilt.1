.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.12.
.TH LTLFILT "1" "August 2014" "ltlfilt (spot 1.2.5)" "User Commands"
.SH NAME
ltlfilt \- filter files or lists of LTL/PSL formulas
.SH SYNOPSIS
.B ltlfilt
[\fIOPTION\fR...] [\fIFILENAME\fR[\fI/COL\fR]...]
.SH DESCRIPTION
.\" Add any additional description here
.PP
Read a list of formulas and output them back after some optional processing.
.SS "Input options:"
.TP
\fB\-f\fR, \fB\-\-formula\fR=\fISTRING\fR
process the formula STRING
.TP
\fB\-F\fR, \fB\-\-file\fR=\fIFILENAME[\fR/COL]
process each line of FILENAME as a formula; if COL
is a positive integer, assume a CSV file and read
column COL; use a negative COL to drop the first
line of the CSV file
.TP
\fB\-\-lbt\-input\fR
read all formulas using LBT's prefix syntax
.TP
\fB\-\-lenient\fR
parenthesized blocks that cannot be parsed as
subformulas are considered as atomic properties
.SS "Error handling:"
.TP
\fB\-\-drop\-errors\fR
discard erroneous lines (default)
.TP
\fB\-q\fR, \fB\-\-quiet\fR
do not report syntax errors
.TP
\fB\-\-skip\-errors\fR
output erroneous lines as\-is without processing
.SS "Transformation options:"
.TP
\fB\-\-boolean\-to\-isop\fR
rewrite Boolean subformulas as irredundant sum of
products (implies at least \fB\-r1\fR)
.TP
\fB\-n\fR, \fB\-\-negate\fR
negate each formula
.TP
\fB\-\-nnf\fR
rewrite formulas in negative normal form
.TP
\fB\-\-relabel[\fR=\fIabc\fR|pnn]
relabel all atomic propositions, alphabetically
unless specified otherwise
.TP
\fB\-\-relabel\-bool[\fR=\fIabc\fR|pnn]
relabel Boolean subexpressions, alphabetically
unless specified otherwise
.TP
\fB\-\-remove\-wm\fR
rewrite operators W and M using U and R
.TP
\fB\-\-remove\-x\fR
remove X operators (valid only for
stutter\-insensitive properties)
.TP
\fB\-r\fR, \fB\-\-simplify\fR[=\fILEVEL\fR]
simplify formulas according to LEVEL (see below);
LEVEL is set to 3 if omitted
.PP
The simplification LEVEL may be set as follows.
.TP
0
No rewriting
.TP
1
basic rewritings and eventual/universal rules
.TP
2
additional syntactic implication rules
.TP
3
better implications using containment
.SS "Filtering options (matching is done after transformation):"
.TP
\fB\-\-boolean\fR
match Boolean formulas
.TP
\fB\-\-bsize\-max\fR=\fIINT\fR
match formulas with Boolean size <= INT
.TP
\fB\-\-bsize\-min\fR=\fIINT\fR
match formulas with Boolean size >= INT
.TP
\fB\-\-equivalent\-to\fR=\fIFORMULA\fR
match formulas equivalent to FORMULA
.TP
\fB\-\-eventual\fR
match pure eventualities
.TP
\fB\-\-guarantee\fR
match guarantee formulas (even pathological)
.TP
\fB\-\-implied\-by\fR=\fIFORMULA\fR
match formulas implied by FORMULA
.TP
\fB\-\-imply\fR=\fIFORMULA\fR
match formulas implying FORMULA
.TP
\fB\-\-ltl\fR
match only LTL formulas (no PSL operator)
.TP
\fB\-\-nox\fR
match X\-free formulas
.TP
\fB\-\-obligation\fR
match obligation formulas (even pathological)
.TP
\fB\-\-safety\fR
match safety formulas (even pathological)
.TP
\fB\-\-size\-max\fR=\fIINT\fR
match formulas with size <= INT
.TP
\fB\-\-size\-min\fR=\fIINT\fR
match formulas with size >= INT
.TP
\fB\-\-stutter\-insensitive\fR, \fB\-\-stutter\-invariant\fR
match stutter\-insensitive LTL formulas
.TP
\fB\-\-syntactic\-guarantee\fR
match syntactic\-guarantee formulas
.HP
\fB\-\-syntactic\-obligation\fR match syntactic\-obligation formulas
.TP
\fB\-\-syntactic\-persistence\fR
match syntactic\-persistence formulas
.HP
\fB\-\-syntactic\-recurrence\fR match syntactic\-recurrence formulas
.TP
\fB\-\-syntactic\-safety\fR
match syntactic\-safety formulas
.TP
\fB\-\-universal\fR
match purely universal formulas
.TP
\fB\-u\fR, \fB\-\-unique\fR
drop formulas that have already been output (not
affected by \fB\-v\fR)
.TP
\fB\-v\fR, \fB\-\-invert\-match\fR
select non\-matching formulas
.SS "Output options:"
.TP
\fB\-8\fR, \fB\-\-utf8\fR
output using UTF\-8 characters
.TP
\fB\-\-csv\-escape\fR
quote the formula for use in a CSV file
.TP
\fB\-\-format\fR=\fIFORMAT\fR
specify how each line should be output (default:
"%f")
.TP
\fB\-l\fR, \fB\-\-lbt\fR
output in LBT's syntax
.TP
\fB\-\-latex\fR
output using LaTeX macros
.TP
\fB\-p\fR, \fB\-\-full\-parentheses\fR
output fully\-parenthesized formulas
.TP
\fB\-s\fR, \fB\-\-spin\fR
output in Spin's syntax
.TP
\fB\-\-spot\fR
output in Spot's syntax (default)
.TP
\fB\-\-wring\fR
output in Wring's syntax
.PP
The FORMAT string passed to \fB\-\-format\fR may use the following interpreted
sequences:
.TP
%<
the part of the line before the formula if it
comes from a column extracted from a CSV file
.TP
%>
the part of the line after the formula if it comes
from a column extracted from a CSV file
.TP
%%
a single %
.TP
%f
the formula (in the selected syntax)
.TP
%F
the name of the input file
.TP
%L
the original line number in the input file
.SS "Miscellaneous options:"
.TP
\fB\-\-help\fR
print this help
.TP
\fB\-\-version\fR
print program version
.PP
Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.
.SS "Exit status:"
.TP
0
if some formulas were output (skipped syntax errors do not count)
.TP
1
if no formulas were output (no match)
.TP
2
if any error has been reported
.SH BIBLIOGRAPHY
If you would like to give a reference to this tool in an article,
we suggest you cite the following paper:
.TP
\(bu
Alexandre Duret-Lutz: Manipulating LTL formulas using Spot 1.0.
Proceedings of ATVA'13.  LNCS 8172.
.PP
The following papers describes algorithms used by ltlfilt:
.TP
\(bu
Kousha Etessami: A note on a question of Peled and Wilke regarding
stutter-invariant LTL. Information Processing Letters 75(6): 261-263
(2000).

Describes the transformation behind the \fB\-\-remove\-x\fR option.
.TP
\(bu
Christian Dax, Jochen Eisinger, Felix Klaedtke: Mechanizing the
Powerset Construction for Restricted Classes of
ω-Automata. Proceedings of ATVA'07.  LNCS 4762.

Describes the checks implemented by the \fB\-\-safety\fR,
\fB\-\-guarantee\fR, and \fB\-\-obligation\fR options.
.TP
\(bu
Ivana Černá, Radek Pelánek: Relating Hierarchy of Temporal Properties
to Model Checking.  Proceedings of MFCS'03.  LNCS 2747.

Describes the syntactic LTL classes matched by the
\fB\-\-syntactic\-safety\fR, \fB\-\-syntactic\-guarantee\fR,
\fB\-\-syntactic\-obligation\fR options,
\fB\-\-syntactic\-persistence\fR, and \fB\-\-syntactic\-recurrence\fR
options.
.TP
\(bu
Kousha Etessami, Gerard J. Holzmann: Optimizing Büchi
Automata. Proceedings of CONCUR'00.  LNCS 1877.

Describe the syntactic LTL classes matched by \fB\-\-eventual\fR, and
\fB\-\-universal\fR.
.SH "REPORTING BUGS"
Report bugs to <spot@lrde.epita.fr>.
.SH COPYRIGHT
Copyright \(co 2014  Laboratoire de Recherche et Développement de l'Epita.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR randltl (1)
