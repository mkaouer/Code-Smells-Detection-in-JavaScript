/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.19
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_NOINCLUDE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; } 
    inline SwigValueWrapper& operator=(const T& t) { tt = new T(t); return *this; }
    inline operator T&() const { return *tt; }
    inline T *operator&() { return tt; }
};                                                    
#endif


#include "Python.h"

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;                 
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;	
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;	
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;  /**/
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
	s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;  /**/
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) 
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) 
{
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
     ty = (*ty->dcast)(ptr);
     if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
	if ((strcmp(tc->name, equiv->name) == 0))
	  SWIG_TypeClientData(tc,clientdata);
	tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

#ifdef SWIG_NOINCLUDE

SWIGEXPORT(PyObject *)        SWIG_newvarlink(void);
SWIGEXPORT(void)              SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(int)               SWIG_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(PyObject *)        SWIG_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_InstallConstants(PyObject *d, swig_const_info constants[]);
#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",                      /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
      PyObject *zero = PyInt_FromLong(0);
      PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
      Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
	PyObject *n = PyInt_FromLong(1);
	PyObject_SetAttrString(inst,(char*)"thisown",n);
	Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

#ifdef __cplusplus
}
#endif








/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_spot__state_product swig_types[0] 
#define  SWIGTYPE_p_spot__tgba_succ_iterator_product swig_types[1] 
#define  SWIGTYPE_p_spot__tgba_product swig_types[2] 
#define  SWIGTYPE_p_spot__ltl__atomic_prop swig_types[3] 
#define  SWIGTYPE_p_spot__tgba_succ_iterator_concrete swig_types[4] 
#define  SWIGTYPE_p_spot__tgba_bdd_concrete swig_types[5] 
#define  SWIGTYPE_p_spot__bdd_dict swig_types[6] 
#define  SWIGTYPE_p_spot__ltl__constant swig_types[7] 
#define  SWIGTYPE_p_spot__bdd_dict__fv_map swig_types[8] 
#define  SWIGTYPE_p_bdd swig_types[9] 
#define  SWIGTYPE_p_tgba_bdd_factory swig_types[10] 
#define  SWIGTYPE_p_spot__magic_search swig_types[11] 
#define  SWIGTYPE_p_spot__ltl__parse_error_list swig_types[12] 
#define  SWIGTYPE_p_spot__ltl__multop__vec swig_types[13] 
#define  SWIGTYPE_p_spot__state_ptr_hash swig_types[14] 
#define  SWIGTYPE_p_spot__state_ptr_less_than swig_types[15] 
#define  SWIGTYPE_p_spot__tgba_explicit__transition swig_types[16] 
#define  SWIGTYPE_p_spot__tgba_tba_proxy swig_types[17] 
#define  SWIGTYPE_p_spot__state_bdd swig_types[18] 
#define  SWIGTYPE_p_spot__tgba_bdd_core_data swig_types[19] 
#define  SWIGTYPE_p_spot__tgba_explicit swig_types[20] 
#define  SWIGTYPE_p_spot__state_explicit swig_types[21] 
#define  SWIGTYPE_p_spot__tgba_succ_iterator swig_types[22] 
#define  SWIGTYPE_p_spot__tgba_explicit_succ_iterator swig_types[23] 
#define  SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor swig_types[24] 
#define  SWIGTYPE_p_spot__ltl__const_visitor swig_types[25] 
#define  SWIGTYPE_p_spot__ltl__visitor swig_types[26] 
#define  SWIGTYPE_p_spot__ltl__clone_visitor swig_types[27] 
#define  SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor swig_types[28] 
#define  SWIGTYPE_p_visitor swig_types[29] 
#define  SWIGTYPE_p_const_visitor swig_types[30] 
#define  SWIGTYPE_p_spot__bdd_dict__vf_map swig_types[31] 
#define  SWIGTYPE_p_spot__ltl__binop swig_types[32] 
#define  SWIGTYPE_p_spot__tgba swig_types[33] 
#define  SWIGTYPE_p_spot__ltl__unop swig_types[34] 
#define  SWIGTYPE_p_std__ostream swig_types[35] 
#define  SWIGTYPE_p_std__ostringstream swig_types[36] 
#define  SWIGTYPE_p_spot__state swig_types[37] 
#define  SWIGTYPE_p_spot__tgba_explicit__state swig_types[38] 
#define  SWIGTYPE_p_spot__ltl__default_environment swig_types[39] 
#define  SWIGTYPE_p_spot__ltl__environment swig_types[40] 
#define  SWIGTYPE_p_environment swig_types[41] 
#define  SWIGTYPE_p_bddPair swig_types[42] 
#define  SWIGTYPE_p_spot__ltl__multop swig_types[43] 
#define  SWIGTYPE_p_spot__ltl__formula swig_types[44] 
#define  SWIGTYPE_p_spot__ltl__ref_formula swig_types[45] 
#define  SWIGTYPE_p_spot__state_ptr_equal swig_types[46] 
#define  SWIGTYPE_p_std__ofstream swig_types[47] 
static swig_type_info *swig_types[49];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _spot.so
  ------------------------------------------------*/
#define SWIG_init    init_spot

#define SWIG_name    "_spot"

#define  SWIG_MemoryError    1
#define  SWIG_IOError        2
#define  SWIG_RuntimeError   3
#define  SWIG_IndexError     4
#define  SWIG_TypeError      5
#define  SWIG_DivisionByZero 6
#define  SWIG_OverflowError  7
#define  SWIG_SyntaxError    8
#define  SWIG_ValueError     9
#define  SWIG_SystemError   10
#define  SWIG_UnknownError  99


static void _SWIG_exception(int code, const char *msg) {
  switch(code) {
  case SWIG_MemoryError:
    PyErr_SetString(PyExc_MemoryError,msg);
    break;
  case SWIG_IOError:
    PyErr_SetString(PyExc_IOError,msg);
    break;
  case SWIG_RuntimeError:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  case SWIG_IndexError:
    PyErr_SetString(PyExc_IndexError,msg);
    break;
  case SWIG_TypeError:
    PyErr_SetString(PyExc_TypeError,msg);
    break;
  case SWIG_DivisionByZero:
    PyErr_SetString(PyExc_ZeroDivisionError,msg);
    break;
  case SWIG_OverflowError:
    PyErr_SetString(PyExc_OverflowError,msg);
    break;
  case SWIG_SyntaxError:
    PyErr_SetString(PyExc_SyntaxError,msg);
    break;
  case SWIG_ValueError:
    PyErr_SetString(PyExc_ValueError,msg);
    break;
  case SWIG_SystemError:
    PyErr_SetString(PyExc_SystemError,msg);
    break;
  default:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  }
}

#define SWIG_exception(a,b) { _SWIG_exception(a,b); SWIG_fail; }


#include <string>


#include <list>
#include <stdexcept>


#include <iostream>
#include <fstream>
#include <sstream>

#include "misc/version.hh"

#include "ltlast/formula.hh"
#include "ltlast/refformula.hh"
#include "ltlast/atomic_prop.hh"
#include "ltlast/binop.hh"
#include "ltlast/constant.hh"
#include "ltlast/multop.hh"
#include "ltlast/unop.hh"
#include "ltlast/visitor.hh"

#include "ltlenv/environment.hh"
#include "ltlenv/defaultenv.hh"

#include "ltlparse/public.hh"

#include "ltlvisit/clone.hh"
#include "ltlvisit/destroy.hh"
#include "ltlvisit/dotty.hh"
#include "ltlvisit/dump.hh"
#include "ltlvisit/lunabbrev.hh"
#include "ltlvisit/nenoform.hh"
#include "ltlvisit/tostring.hh"
#include "ltlvisit/tunabbrev.hh"

#include "tgba/bdddict.hh"
#include "tgba/bddprint.hh"
#include "tgba/state.hh"
#include "tgba/succiter.hh"
#include "tgba/tgba.hh"
#include "tgba/statebdd.hh"
#include "tgba/tgbabddcoredata.hh"
#include "tgba/succiterconcrete.hh"
#include "tgba/tgbabddconcrete.hh"
#include "tgba/tgbaexplicit.hh"
#include "tgba/tgbaproduct.hh"
#include "tgba/tgbatba.hh"

#include "tgbaalgos/ltl2tgba_lacim.hh"
#include "tgbaalgos/ltl2tgba_fm.hh"
#include "tgbaalgos/dotty.hh"
#include "tgbaalgos/lbtt.hh"
#include "tgbaalgos/magic.hh"
#include "tgbaalgos/save.hh"

using namespace spot::ltl;
using namespace spot;

int spot_ltl_formula___cmp__(spot::ltl::formula *self,spot::ltl::formula const *b){
    return b - self;
  }
std::string spot_ltl_formula___str__(spot::ltl::formula *self){
    return spot::ltl::to_string(self);
  }


spot::ltl::parse_error_list
empty_parse_error_list()
{
  parse_error_list l;
  return l;
}

std::ostream&
get_cout()
{
  return std::cout;
}

std::ostream&
get_cerr()
{
  return std::cerr;
}

void
print_on(std::ostream& on, const std::string& what)
{
  on << what;
}


#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_version(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *result;
    
    if(!PyArg_ParseTuple(args,(char *)":version")) goto fail;
    result = (char *)spot::version();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_formula(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_formula",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_formula_accept__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:formula_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_formula_accept__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    const_visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:formula_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((spot::ltl::formula const *)arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_formula_accept(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__formula, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_formula_accept__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__formula, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_const_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_formula_accept__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'formula_accept'");
    return NULL;
}


static PyObject *_wrap_formula_ref(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:formula_ref",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->ref();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_formula_unref(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:formula_unref",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    spot::ltl::formula::unref(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_formula___cmp__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:formula___cmp__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)spot_ltl_formula___cmp__(arg1,(spot::ltl::formula const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_formula___str__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:formula___str__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = spot_ltl_formula___str__(arg1);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * formula_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__formula, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject * ref_formula_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__ref_formula, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_atomic_prop_instance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    environment *arg2 = 0 ;
    spot::ltl::atomic_prop *result;
    std::string temp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:atomic_prop_instance",&obj0,&obj1)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (spot::ltl::atomic_prop *)spot::ltl::atomic_prop::instance((std::string const &)*arg1,*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__atomic_prop, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_atomic_prop_accept__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
    visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:atomic_prop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_atomic_prop_accept__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
    const_visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:atomic_prop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((spot::ltl::atomic_prop const *)arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_atomic_prop_accept(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_atomic_prop_accept__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_const_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_atomic_prop_accept__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'atomic_prop_accept'");
    return NULL;
}


static PyObject *_wrap_atomic_prop_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
    std::string *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:atomic_prop_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((spot::ltl::atomic_prop const *)arg1)->name();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromStringAndSize(result->data(),result->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_atomic_prop_env(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::atomic_prop *arg1 = (spot::ltl::atomic_prop *) 0 ;
    environment *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:atomic_prop_env",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        environment &_result_ref = ((spot::ltl::atomic_prop const *)arg1)->env();
        result = (environment *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_environment, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_atomic_prop_instance_count(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int result;
    
    if(!PyArg_ParseTuple(args,(char *)":atomic_prop_instance_count")) goto fail;
    result = (unsigned int)spot::ltl::atomic_prop::instance_count();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * atomic_prop_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__atomic_prop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_binop_instance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
    spot::ltl::binop *result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOO:binop_instance",&arg1,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::binop *)spot::ltl::binop::instance((spot::ltl::binop::type )arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__binop, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_accept__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:binop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_accept__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    const_visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:binop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((spot::ltl::binop const *)arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_accept(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_binop_accept__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_const_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_binop_accept__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'binop_accept'");
    return NULL;
}


static PyObject *_wrap_binop_first__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:binop_first",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)((spot::ltl::binop const *)arg1)->first();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_first__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:binop_first",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->first();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_first(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_binop_first__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_binop_first__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'binop_first'");
    return NULL;
}


static PyObject *_wrap_binop_second__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:binop_second",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)((spot::ltl::binop const *)arg1)->second();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_second__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:binop_second",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->second();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_second(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_binop_second__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_binop_second__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'binop_second'");
    return NULL;
}


static PyObject *_wrap_binop_op(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:binop_op",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::ltl::binop const *)arg1)->op();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_op_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::binop *arg1 = (spot::ltl::binop *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:binop_op_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((spot::ltl::binop const *)arg1)->op_name();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_binop_instance_count(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int result;
    
    if(!PyArg_ParseTuple(args,(char *)":binop_instance_count")) goto fail;
    result = (unsigned int)spot::ltl::binop::instance_count();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * binop_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__binop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_constant_accept__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
    visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:constant_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_constant_accept__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
    const_visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:constant_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((spot::ltl::constant const *)arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_constant_accept(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__constant, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_constant_accept__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__constant, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_const_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_constant_accept__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'constant_accept'");
    return NULL;
}


static PyObject *_wrap_constant_val(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:constant_val",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::ltl::constant const *)arg1)->val();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_constant_val_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::constant *arg1 = (spot::ltl::constant *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:constant_val_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((spot::ltl::constant const *)arg1)->val_name();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_constant_true_instance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::constant *result;
    
    if(!PyArg_ParseTuple(args,(char *)":constant_true_instance")) goto fail;
    result = (spot::ltl::constant *)spot::ltl::constant::true_instance();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__constant, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_constant_false_instance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::constant *result;
    
    if(!PyArg_ParseTuple(args,(char *)":constant_false_instance")) goto fail;
    result = (spot::ltl::constant *)spot::ltl::constant::false_instance();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__constant, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * constant_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__constant, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_multop_instance__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOO:multop_instance",&arg1,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)spot::ltl::multop::instance((spot::ltl::multop::type )arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_instance__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    spot::ltl::multop::vec *arg2 = (spot::ltl::multop::vec *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iO:multop_instance",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__multop__vec,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)spot::ltl::multop::instance((spot::ltl::multop::type )arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_instance(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop__vec, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_multop_instance__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__formula, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_spot__ltl__formula, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_multop_instance__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'multop_instance'");
    return NULL;
}


static PyObject *_wrap_multop_accept__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:multop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_accept__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    const_visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:multop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((spot::ltl::multop const *)arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_accept(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_multop_accept__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_const_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_multop_accept__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'multop_accept'");
    return NULL;
}


static PyObject *_wrap_multop_size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:multop_size",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((spot::ltl::multop const *)arg1)->size();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_nth__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    unsigned int arg2 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:multop_nth",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (spot::ltl::formula *)((spot::ltl::multop const *)arg1)->nth(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_nth__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    unsigned int arg2 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:multop_nth",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->nth(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_nth(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_multop_nth__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_multop_nth__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'multop_nth'");
    return NULL;
}


static PyObject *_wrap_multop_op(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:multop_op",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::ltl::multop const *)arg1)->op();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_op_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::multop *arg1 = (spot::ltl::multop *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:multop_op_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((spot::ltl::multop const *)arg1)->op_name();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_multop_instance_count(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int result;
    
    if(!PyArg_ParseTuple(args,(char *)":multop_instance_count")) goto fail;
    result = (unsigned int)spot::ltl::multop::instance_count();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * multop_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__multop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_unop_instance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    spot::ltl::unop *result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iO:unop_instance",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::unop *)spot::ltl::unop::instance((spot::ltl::unop::type )arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__unop, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_accept__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
    visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:unop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_accept__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
    const_visitor *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:unop_accept",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((spot::ltl::unop const *)arg1)->accept(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_accept(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_unop_accept__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_const_visitor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_unop_accept__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'unop_accept'");
    return NULL;
}


static PyObject *_wrap_unop_child__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:unop_child",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)((spot::ltl::unop const *)arg1)->child();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_child__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:unop_child",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->child();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_child(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_unop_child__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_unop_child__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'unop_child'");
    return NULL;
}


static PyObject *_wrap_unop_op(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:unop_op",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::ltl::unop const *)arg1)->op();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_op_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unop *arg1 = (spot::ltl::unop *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:unop_op_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((spot::ltl::unop const *)arg1)->op_name();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unop_instance_count(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int result;
    
    if(!PyArg_ParseTuple(args,(char *)":unop_instance_count")) goto fail;
    result = (unsigned int)spot::ltl::unop::instance_count();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * unop_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__unop, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_visitor_visit__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
    spot::ltl::atomic_prop *arg2 = (spot::ltl::atomic_prop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_visitor_visit__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
    spot::ltl::constant *arg2 = (spot::ltl::constant *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_visitor_visit__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
    spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_visitor_visit__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
    spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_visitor_visit__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
    spot::ltl::multop *arg2 = (spot::ltl::multop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_visitor_visit(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_visitor_visit__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__constant, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_visitor_visit__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_visitor_visit__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_visitor_visit__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_visitor_visit__SWIG_4(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'visitor_visit'");
    return NULL;
}


static PyObject *_wrap_delete_visitor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::visitor *arg1 = (spot::ltl::visitor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_visitor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * visitor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__visitor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_const_visitor_visit__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
    spot::ltl::atomic_prop *arg2 = (spot::ltl::atomic_prop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit((spot::ltl::atomic_prop const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_const_visitor_visit__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
    spot::ltl::constant *arg2 = (spot::ltl::constant *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit((spot::ltl::constant const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_const_visitor_visit__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
    spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit((spot::ltl::binop const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_const_visitor_visit__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
    spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit((spot::ltl::unop const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_const_visitor_visit__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
    spot::ltl::multop *arg2 = (spot::ltl::multop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:const_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit((spot::ltl::multop const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_const_visitor_visit(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__const_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_const_visitor_visit__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__const_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__constant, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_const_visitor_visit__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__const_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_const_visitor_visit__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__const_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_const_visitor_visit__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__const_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_const_visitor_visit__SWIG_4(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'const_visitor_visit'");
    return NULL;
}


static PyObject *_wrap_delete_const_visitor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::const_visitor *arg1 = (spot::ltl::const_visitor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_const_visitor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__const_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * const_visitor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__const_visitor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_environment_require(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::environment *arg1 = (spot::ltl::environment *) 0 ;
    std::string *arg2 = 0 ;
    spot::ltl::formula *result;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:environment_require",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = (spot::ltl::formula *)(arg1)->require((std::string const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_environment_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::environment *arg1 = (spot::ltl::environment *) 0 ;
    std::string *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:environment_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = (arg1)->name();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromStringAndSize(result->data(),result->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_environment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::environment *arg1 = (spot::ltl::environment *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_environment",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * environment_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__environment, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_default_environment(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::default_environment *arg1 = (spot::ltl::default_environment *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_default_environment",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__default_environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_default_environment_require(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::default_environment *arg1 = (spot::ltl::default_environment *) 0 ;
    std::string *arg2 = 0 ;
    spot::ltl::formula *result;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:default_environment_require",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__default_environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = (spot::ltl::formula *)(arg1)->require((std::string const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_default_environment_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::default_environment *arg1 = (spot::ltl::default_environment *) 0 ;
    std::string *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:default_environment_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__default_environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = (arg1)->name();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromStringAndSize(result->data(),result->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_default_environment_instance(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::default_environment *result;
    
    if(!PyArg_ParseTuple(args,(char *)":default_environment_instance")) goto fail;
    {
        spot::ltl::default_environment &_result_ref = spot::ltl::default_environment::instance();
        result = (spot::ltl::default_environment *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__default_environment, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * default_environment_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__default_environment, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_parse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    spot::ltl::parse_error_list *arg2 = 0 ;
    spot::ltl::environment &arg3_defvalue = default_environment::instance() ;
    spot::ltl::environment *arg3 = (spot::ltl::environment *) &arg3_defvalue ;
    bool arg4 = (bool) false ;
    spot::ltl::formula *result;
    std::string temp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:parse",&obj0,&obj1,&obj2,&obj3)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__parse_error_list,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__ltl__environment,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg3 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (spot::ltl::formula *)spot::ltl::parse((std::string const &)*arg1,*arg2,*arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_format_parse_errors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    spot::ltl::parse_error_list *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:format_parse_errors",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__ltl__parse_error_list,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)spot::ltl::format_parse_errors(*arg1,(std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_clone_visitor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_clone_visitor")) goto fail;
    result = (spot::ltl::clone_visitor *)new spot::ltl::clone_visitor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__clone_visitor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_clone_visitor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_clone_visitor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_result(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:clone_visitor_result",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)((spot::ltl::clone_visitor const *)arg1)->result();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_visit__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::atomic_prop *arg2 = (spot::ltl::atomic_prop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:clone_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__atomic_prop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_visit__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:clone_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_visit__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:clone_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_visit__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::multop *arg2 = (spot::ltl::multop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:clone_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__multop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_visit__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::constant *arg2 = (spot::ltl::constant *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:clone_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__constant,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_clone_visitor_visit(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__clone_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__atomic_prop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_clone_visitor_visit__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__clone_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__unop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_clone_visitor_visit__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__clone_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__binop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_clone_visitor_visit__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__clone_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__multop, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_clone_visitor_visit__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__clone_visitor, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__ltl__constant, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_clone_visitor_visit__SWIG_4(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'clone_visitor_visit'");
    return NULL;
}


static PyObject *_wrap_clone_visitor_recurse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::clone_visitor *arg1 = (spot::ltl::clone_visitor *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:clone_visitor_recurse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__clone_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->recurse(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * clone_visitor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__clone_visitor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)spot::ltl::clone((spot::ltl::formula const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_destroy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:destroy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    spot::ltl::destroy((spot::ltl::formula const *)arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_dotty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:dotty",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::ostream &_result_ref = spot::ltl::dotty(*arg1,(spot::ltl::formula const *)arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:dump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::ostream &_result_ref = spot::ltl::dump(*arg1,(spot::ltl::formula const *)arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_unabbreviate_logic_visitor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unabbreviate_logic_visitor *arg1 = (spot::ltl::unabbreviate_logic_visitor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_unabbreviate_logic_visitor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unabbreviate_logic_visitor_visit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unabbreviate_logic_visitor *arg1 = (spot::ltl::unabbreviate_logic_visitor *) 0 ;
    spot::ltl::binop *arg2 = (spot::ltl::binop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_logic_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__binop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unabbreviate_logic_visitor_recurse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unabbreviate_logic_visitor *arg1 = (spot::ltl::unabbreviate_logic_visitor *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_logic_visitor_recurse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->recurse(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * unabbreviate_logic_visitor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__unabbreviate_logic_visitor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_unabbreviate_logic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:unabbreviate_logic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)spot::ltl::unabbreviate_logic((spot::ltl::formula const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_negative_normal_form(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    bool arg2 = (bool) false ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:negative_normal_form",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (spot::ltl::formula *)spot::ltl::negative_normal_form((spot::ltl::formula const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_to_string__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    std::ostream *arg2 = 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:to_string",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        std::ostream &_result_ref = spot::ltl::to_string((spot::ltl::formula const *)arg1,*arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_to_string__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:to_string",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = spot::ltl::to_string((spot::ltl::formula const *)arg1);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_to_string(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__formula, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_to_string__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__ltl__formula, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_std__ostream, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_to_string__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'to_string'");
    return NULL;
}


static PyObject *_wrap_delete_unabbreviate_ltl_visitor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unabbreviate_ltl_visitor *arg1 = (spot::ltl::unabbreviate_ltl_visitor *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_unabbreviate_ltl_visitor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unabbreviate_ltl_visitor_visit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unabbreviate_ltl_visitor *arg1 = (spot::ltl::unabbreviate_ltl_visitor *) 0 ;
    spot::ltl::unop *arg2 = (spot::ltl::unop *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_ltl_visitor_visit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__unop,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->visit(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_unabbreviate_ltl_visitor_recurse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::unabbreviate_ltl_visitor *arg1 = (spot::ltl::unabbreviate_ltl_visitor *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:unabbreviate_ltl_visitor_recurse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)(arg1)->recurse(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * unabbreviate_ltl_visitor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__ltl__unabbreviate_ltl_visitor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_unabbreviate_ltl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::ltl::formula *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:unabbreviate_ltl",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::ltl::formula *)spot::ltl::unabbreviate_ltl((spot::ltl::formula const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__ltl__formula, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_bdd_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_bdd_dict")) goto fail;
    result = (spot::bdd_dict *)new spot::bdd_dict();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_bdd_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_bdd_dict",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_now_map_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::fv_map arg2 ;
    spot::bdd_dict::fv_map *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_now_map_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_spot__bdd_dict__fv_map,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->now_map = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_now_map_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::fv_map result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_now_map_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->now_map);
    
    {
        spot::bdd_dict::fv_map * resultptr;
        resultptr = new spot::bdd_dict::fv_map((spot::bdd_dict::fv_map &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__bdd_dict__fv_map, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_now_formula_map_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::vf_map arg2 ;
    spot::bdd_dict::vf_map *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_now_formula_map_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_spot__bdd_dict__vf_map,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->now_formula_map = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_now_formula_map_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::vf_map result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_now_formula_map_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->now_formula_map);
    
    {
        spot::bdd_dict::vf_map * resultptr;
        resultptr = new spot::bdd_dict::vf_map((spot::bdd_dict::vf_map &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__bdd_dict__vf_map, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_var_map_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::fv_map arg2 ;
    spot::bdd_dict::fv_map *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_var_map_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_spot__bdd_dict__fv_map,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->var_map = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_var_map_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::fv_map result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_var_map_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->var_map);
    
    {
        spot::bdd_dict::fv_map * resultptr;
        resultptr = new spot::bdd_dict::fv_map((spot::bdd_dict::fv_map &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__bdd_dict__fv_map, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_var_formula_map_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::vf_map arg2 ;
    spot::bdd_dict::vf_map *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_var_formula_map_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_spot__bdd_dict__vf_map,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->var_formula_map = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_var_formula_map_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::vf_map result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_var_formula_map_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->var_formula_map);
    
    {
        spot::bdd_dict::vf_map * resultptr;
        resultptr = new spot::bdd_dict::vf_map((spot::bdd_dict::vf_map &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__bdd_dict__vf_map, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_acc_map_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::fv_map arg2 ;
    spot::bdd_dict::fv_map *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_acc_map_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_spot__bdd_dict__fv_map,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->acc_map = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_acc_map_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::fv_map result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_acc_map_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->acc_map);
    
    {
        spot::bdd_dict::fv_map * resultptr;
        resultptr = new spot::bdd_dict::fv_map((spot::bdd_dict::fv_map &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__bdd_dict__fv_map, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_acc_formula_map_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::vf_map arg2 ;
    spot::bdd_dict::vf_map *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_acc_formula_map_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_spot__bdd_dict__vf_map,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->acc_formula_map = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_acc_formula_map_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::bdd_dict::vf_map result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_acc_formula_map_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->acc_formula_map);
    
    {
        spot::bdd_dict::vf_map * resultptr;
        resultptr = new spot::bdd_dict::vf_map((spot::bdd_dict::vf_map &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__bdd_dict__vf_map, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_next_to_now_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bddPair *arg2 = (bddPair *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_next_to_now_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bddPair,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->next_to_now = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_next_to_now_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bddPair *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_next_to_now_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bddPair *) ((arg1)->next_to_now);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bddPair, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_now_to_next_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bddPair *arg2 = (bddPair *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_now_to_next_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bddPair,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->now_to_next = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_now_to_next_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bddPair *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_now_to_next_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bddPair *) ((arg1)->now_to_next);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bddPair, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_register_proposition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    void *arg3 = (void *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_proposition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->register_proposition((spot::ltl::formula const *)arg2,(void const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_register_propositions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bdd arg2 ;
    void *arg3 = (void *) 0 ;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_propositions",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->register_propositions(arg2,(void const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_register_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    void *arg3 = (void *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_state",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->register_state((spot::ltl::formula const *)arg2,(void const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_register_acceptance_variable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    void *arg3 = (void *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_acceptance_variable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->register_acceptance_variable((spot::ltl::formula const *)arg2,(void const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_register_acceptance_variables(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bdd arg2 ;
    void *arg3 = (void *) 0 ;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_acceptance_variables",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->register_acceptance_variables(arg2,(void const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_register_all_variables_of(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    void *arg2 = (void *) 0 ;
    void *arg3 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_register_all_variables_of",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->register_all_variables_of((void const *)arg2,(void const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_unregister_all_my_variables(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    void *arg2 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_unregister_all_my_variables",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->unregister_all_my_variables((void const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_is_registered_proposition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    void *arg3 = (void *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_is_registered_proposition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->is_registered_proposition((spot::ltl::formula const *)arg2,(void const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_is_registered_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    void *arg3 = (void *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_is_registered_state",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->is_registered_state((spot::ltl::formula const *)arg2,(void const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_is_registered_acceptance_variable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    void *arg3 = (void *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_dict_is_registered_acceptance_variable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->is_registered_acceptance_variable((spot::ltl::formula const *)arg2,(void const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_dump(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    std::ostream *arg2 = 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_dict_dump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        std::ostream &_result_ref = ((spot::bdd_dict const *)arg1)->dump(*arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_dict_assert_emptiness(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_dict_assert_emptiness",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ((spot::bdd_dict const *)arg1)->assert_emptiness();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * bdd_dict_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__bdd_dict, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_bdd_print_sat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_sat",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_sat(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_format_sat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bdd arg2 ;
    std::string result;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_format_sat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = spot::bdd_format_sat((spot::bdd_dict const *)arg1,arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_print_acc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_acc",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_acc(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_print_accset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_accset",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_accset(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_print_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_set",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_set(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_format_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bdd arg2 ;
    std::string result;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_format_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = spot::bdd_format_set((spot::bdd_dict const *)arg1,arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_print_formula(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_formula",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_formula(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_format_formula(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    bdd arg2 ;
    std::string result;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_format_formula",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = spot::bdd_format_formula((spot::bdd_dict const *)arg1,arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_print_dot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_dot",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_dot(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_print_table(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    bdd arg3 ;
    std::ostream *result;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_print_table",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        std::ostream &_result_ref = spot::bdd_print_table(*arg1,(spot::bdd_dict const *)arg2,arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_compare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state *arg1 = (spot::state *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:state_compare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::state const *)arg1)->compare((spot::state const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state *arg1 = (spot::state *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::state const *)arg1)->hash();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state *arg1 = (spot::state *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::state const *)arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state *arg1 = (spot::state *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_state_ptr_less_than___call__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_less_than *arg1 = (spot::state_ptr_less_than *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:state_ptr_less_than___call__",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_ptr_less_than,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::state_ptr_less_than const *)arg1)->operator ()((spot::state const *)arg2,(spot::state const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_state_ptr_less_than(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_less_than *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_state_ptr_less_than")) goto fail;
    result = (spot::state_ptr_less_than *)new spot::state_ptr_less_than();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_ptr_less_than, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_state_ptr_less_than(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_less_than *arg1 = (spot::state_ptr_less_than *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state_ptr_less_than",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_ptr_less_than,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_ptr_less_than_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state_ptr_less_than, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_state_ptr_equal___call__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_equal *arg1 = (spot::state_ptr_equal *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:state_ptr_equal___call__",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_ptr_equal,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::state_ptr_equal const *)arg1)->operator ()((spot::state const *)arg2,(spot::state const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_state_ptr_equal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_equal *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_state_ptr_equal")) goto fail;
    result = (spot::state_ptr_equal *)new spot::state_ptr_equal();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_ptr_equal, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_state_ptr_equal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_equal *arg1 = (spot::state_ptr_equal *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state_ptr_equal",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_ptr_equal,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_ptr_equal_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state_ptr_equal, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_state_ptr_hash___call__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_hash *arg1 = (spot::state_ptr_hash *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:state_ptr_hash___call__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_ptr_hash,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::state_ptr_hash const *)arg1)->operator ()((spot::state const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_state_ptr_hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_hash *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_state_ptr_hash")) goto fail;
    result = (spot::state_ptr_hash *)new spot::state_ptr_hash();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_ptr_hash, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_state_ptr_hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_ptr_hash *arg1 = (spot::state_ptr_hash *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state_ptr_hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_ptr_hash,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_ptr_hash_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state_ptr_hash, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_tgba_succ_iterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_succ_iterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_first(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_first",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->first();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_done",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::tgba_succ_iterator const *)arg1)->done();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_current_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_current_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba_succ_iterator const *)arg1)->current_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_current_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_current_condition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_succ_iterator const *)arg1)->current_condition();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_current_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_current_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_succ_iterator const *)arg1)->current_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_succ_iterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_succ_iterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_delete_tgba(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_get_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_get_init_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba const *)arg1)->get_init_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    spot::tgba *arg4 = (spot::tgba *) 0 ;
    spot::tgba_succ_iterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:tgba_succ_iter",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (spot::tgba_succ_iterator *)((spot::tgba const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_support_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_support_conditions",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba const *)arg1)->support_conditions((spot::state const *)arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_support_variables(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_support_variables",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba const *)arg1)->support_variables((spot::state const *)arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_get_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::bdd_dict *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_get_dict",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::bdd_dict *)((spot::tgba const *)arg1)->get_dict();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_format_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_format_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba const *)arg1)->format_state((spot::state const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_project_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::tgba *arg3 = (spot::tgba *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_project_state",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba const *)arg1)->project_state((spot::state const *)arg2,(spot::tgba const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_all_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_all_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba const *)arg1)->all_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_neg_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_neg_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba const *)arg1)->neg_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_state_bdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd arg1 ;
    spot::state_bdd *result;
    bdd *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_state_bdd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (spot::state_bdd *)new spot::state_bdd(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_bdd, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_bdd_as_bdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_bdd_as_bdd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::state_bdd const *)arg1)->as_bdd();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_bdd_compare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:state_bdd_compare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::state_bdd const *)arg1)->compare((spot::state const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_bdd_hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_bdd_hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::state_bdd const *)arg1)->hash();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_bdd_clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
    spot::state_bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_bdd_clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_bdd *)((spot::state_bdd const *)arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_state_bdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_bdd *arg1 = (spot::state_bdd *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state_bdd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_bdd_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state_bdd, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_tgba_bdd_core_data_relation_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_relation_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->relation = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_relation_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_relation_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->relation);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_acceptance_conditions_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_acceptance_conditions_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->acceptance_conditions = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_acceptance_conditions_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_acceptance_conditions_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->acceptance_conditions);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_all_acceptance_conditions_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_all_acceptance_conditions_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->all_acceptance_conditions = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_all_acceptance_conditions_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_all_acceptance_conditions_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->all_acceptance_conditions);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_now_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_now_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->now_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_now_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_now_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->now_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_next_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_next_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->next_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_next_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_next_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->next_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_nownext_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_nownext_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->nownext_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_nownext_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_nownext_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->nownext_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notnow_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notnow_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->notnow_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notnow_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notnow_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->notnow_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notnext_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notnext_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->notnext_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notnext_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notnext_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->notnext_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_var_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_var_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->var_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_var_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_var_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->var_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notvar_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notvar_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->notvar_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notvar_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notvar_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->notvar_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_varandnext_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_varandnext_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->varandnext_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_varandnext_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_varandnext_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->varandnext_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_acc_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_acc_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->acc_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_acc_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_acc_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->acc_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notacc_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_notacc_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->notacc_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_notacc_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_notacc_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->notacc_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_negacc_set_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_negacc_set_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->negacc_set = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_negacc_set_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_negacc_set_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bdd *)& ((arg1)->negacc_set);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_dict_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_dict_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->dict = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_dict_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    spot::bdd_dict *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_core_data_dict_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::bdd_dict *) ((arg1)->dict);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_tgba_bdd_core_data__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::tgba_bdd_core_data *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_tgba_bdd_core_data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_bdd_core_data *)new spot::tgba_bdd_core_data(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_core_data, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_tgba_bdd_core_data__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = 0 ;
    spot::tgba_bdd_core_data *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_tgba_bdd_core_data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (spot::tgba_bdd_core_data *)new spot::tgba_bdd_core_data((spot::tgba_bdd_core_data const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_core_data, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_tgba_bdd_core_data__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = 0 ;
    spot::tgba_bdd_core_data *arg2 = 0 ;
    spot::tgba_bdd_core_data *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_tgba_bdd_core_data",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (spot::tgba_bdd_core_data *)new spot::tgba_bdd_core_data((spot::tgba_bdd_core_data const &)*arg1,(spot::tgba_bdd_core_data const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_core_data, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_tgba_bdd_core_data(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__bdd_dict, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_tgba_bdd_core_data__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__tgba_bdd_core_data, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_tgba_bdd_core_data__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__tgba_bdd_core_data, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__tgba_bdd_core_data, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_tgba_bdd_core_data__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_tgba_bdd_core_data'");
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_declare_now_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd arg2 ;
    bdd arg3 ;
    bdd *argp2 ;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_bdd_core_data_declare_now_next",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->declare_now_next(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_declare_atomic_prop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd arg2 ;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_declare_atomic_prop",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->declare_atomic_prop(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_core_data_declare_acceptance_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    bdd arg2 ;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_core_data_declare_acceptance_condition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->declare_acceptance_condition(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_bdd_core_data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = (spot::tgba_bdd_core_data *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_bdd_core_data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_bdd_core_data_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_bdd_core_data, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_succ_iterator_concrete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_core_data *arg1 = 0 ;
    bdd arg2 ;
    spot::tgba_succ_iterator_concrete *result;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_tgba_succ_iterator_concrete",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_core_data,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (spot::tgba_succ_iterator_concrete *)new spot::tgba_succ_iterator_concrete((spot::tgba_bdd_core_data const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_succ_iterator_concrete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_succ_iterator_concrete",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_concrete_first(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_first",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->first();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_concrete_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_concrete_done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_done",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::tgba_succ_iterator_concrete const *)arg1)->done();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_concrete_current_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    spot::state_bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_current_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_bdd *)((spot::tgba_succ_iterator_concrete const *)arg1)->current_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_bdd, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_concrete_current_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_current_condition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_succ_iterator_concrete const *)arg1)->current_condition();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_concrete_current_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_concrete *arg1 = (spot::tgba_succ_iterator_concrete *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_concrete_current_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_succ_iterator_concrete const *)arg1)->current_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_succ_iterator_concrete_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_succ_iterator_concrete, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_bdd_concrete__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    tgba_bdd_factory *arg1 = 0 ;
    spot::tgba_bdd_concrete *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_tgba_bdd_concrete",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_tgba_bdd_factory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (spot::tgba_bdd_concrete *)new spot::tgba_bdd_concrete((tgba_bdd_factory const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_concrete, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_tgba_bdd_concrete__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    tgba_bdd_factory *arg1 = 0 ;
    bdd arg2 ;
    spot::tgba_bdd_concrete *result;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_tgba_bdd_concrete",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_tgba_bdd_factory,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (spot::tgba_bdd_concrete *)new spot::tgba_bdd_concrete((tgba_bdd_factory const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_concrete, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_tgba_bdd_concrete(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_tgba_bdd_factory, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_tgba_bdd_concrete__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_tgba_bdd_factory, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_bdd, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_tgba_bdd_concrete__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_tgba_bdd_concrete'");
    return NULL;
}


static PyObject *_wrap_delete_tgba_bdd_concrete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_bdd_concrete",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_set_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    bdd arg2 ;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_concrete_set_init_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->set_init_state(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_get_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    spot::state_bdd *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_init_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_bdd *)((spot::tgba_bdd_concrete const *)arg1)->get_init_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_bdd, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_get_init_bdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_init_bdd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_bdd_concrete const *)arg1)->get_init_bdd();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_succ_iter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    spot::tgba *arg4 = (spot::tgba *) 0 ;
    spot::tgba_succ_iterator_concrete *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:tgba_bdd_concrete_succ_iter",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (spot::tgba_succ_iterator_concrete *)((spot::tgba_bdd_concrete const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator_concrete, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_format_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_bdd_concrete_format_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_bdd_concrete const *)arg1)->format_state((spot::state const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_get_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    spot::bdd_dict *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_dict",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::bdd_dict *)((spot::tgba_bdd_concrete const *)arg1)->get_dict();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_get_core_data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    spot::tgba_bdd_core_data *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_get_core_data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        spot::tgba_bdd_core_data const &_result_ref = ((spot::tgba_bdd_concrete const *)arg1)->get_core_data();
        result = (spot::tgba_bdd_core_data *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_core_data, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_all_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_all_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_bdd_concrete const *)arg1)->all_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_bdd_concrete_neg_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_bdd_concrete *arg1 = (spot::tgba_bdd_concrete *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_bdd_concrete_neg_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_bdd_concrete,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_bdd_concrete const *)arg1)->neg_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_bdd_concrete_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_bdd_concrete, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_explicit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::bdd_dict *arg1 = (spot::bdd_dict *) 0 ;
    spot::tgba_explicit *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_tgba_explicit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_explicit *)new spot::tgba_explicit(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_explicit, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_set_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    std::string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_set_init_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->set_init_state((std::string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_create_transition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    spot::tgba_explicit::transition *result;
    std::string temp2 ;
    std::string temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_create_transition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    {
        if (PyString_Check(obj2)) {
            temp3 = std::string(PyString_AsString(obj2));
            arg3 = &temp3;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = (spot::tgba_explicit::transition *)(arg1)->create_transition((std::string const &)*arg2,(std::string const &)*arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_explicit__transition, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_add_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
    spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_condition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba_explicit__transition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->add_condition(arg2,(spot::ltl::formula const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_add_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
    bdd arg3 ;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_conditions",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba_explicit__transition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->add_conditions(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_declare_acceptance_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_declare_acceptance_condition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->declare_acceptance_condition((spot::ltl::formula const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_has_acceptance_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::ltl::formula *arg2 = (spot::ltl::formula *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_has_acceptance_condition",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::tgba_explicit const *)arg1)->has_acceptance_condition((spot::ltl::formula const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_add_acceptance_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
    spot::ltl::formula *arg3 = (spot::ltl::formula *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_acceptance_condition",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba_explicit__transition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->add_acceptance_condition(arg2,(spot::ltl::formula const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_add_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::tgba_explicit::transition *arg2 = (spot::tgba_explicit::transition *) 0 ;
    bdd arg3 ;
    bdd *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_explicit_add_acceptance_conditions",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba_explicit__transition,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    (arg1)->add_acceptance_conditions(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_complement_all_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_complement_all_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->complement_all_acceptance_conditions();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_explicit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_get_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_get_init_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba_explicit const *)arg1)->get_init_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    spot::tgba *arg4 = (spot::tgba *) 0 ;
    spot::tgba_succ_iterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:tgba_explicit_succ_iter",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (spot::tgba_succ_iterator *)((spot::tgba_explicit const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_get_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::bdd_dict *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_get_dict",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::bdd_dict *)((spot::tgba_explicit const *)arg1)->get_dict();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_format_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_explicit_format_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_explicit const *)arg1)->format_state((spot::state const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_all_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_all_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_explicit const *)arg1)->all_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_neg_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit *arg1 = (spot::tgba_explicit *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_neg_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_explicit const *)arg1)->neg_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_explicit_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_explicit, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_state_explicit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit::state *arg1 = (spot::tgba_explicit::state *) 0 ;
    spot::state_explicit *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_state_explicit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_explicit *)new spot::state_explicit((spot::tgba_explicit::state const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_explicit, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_explicit_compare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:state_explicit_compare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::state_explicit const *)arg1)->compare((spot::state const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_explicit_hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_explicit_hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::state_explicit const *)arg1)->hash();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_explicit_clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
    spot::state_explicit *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_explicit_clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_explicit *)((spot::state_explicit const *)arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_explicit, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_state_explicit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state_explicit",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_explicit_get_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_explicit *arg1 = (spot::state_explicit *) 0 ;
    spot::tgba_explicit::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_explicit_get_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_explicit,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_explicit::state *)((spot::state_explicit const *)arg1)->get_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_explicit__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_explicit_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state_explicit, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_explicit_succ_iterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit::state *arg1 = (spot::tgba_explicit::state *) 0 ;
    bdd arg2 ;
    spot::tgba_explicit_succ_iterator *result;
    bdd *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_tgba_explicit_succ_iterator",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (spot::tgba_explicit_succ_iterator *)new spot::tgba_explicit_succ_iterator((spot::tgba_explicit::state const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_explicit_succ_iterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_explicit_succ_iterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_explicit_succ_iterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iterator_first(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_first",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->first();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iterator_done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_done",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::tgba_explicit_succ_iterator const *)arg1)->done();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iterator_current_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    spot::state_explicit *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_current_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_explicit *)((spot::tgba_explicit_succ_iterator const *)arg1)->current_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_explicit, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iterator_current_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_current_condition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_explicit_succ_iterator const *)arg1)->current_condition();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_explicit_succ_iterator_current_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_explicit_succ_iterator *arg1 = (spot::tgba_explicit_succ_iterator *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_explicit_succ_iterator_current_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_explicit_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_explicit_succ_iterator const *)arg1)->current_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_explicit_succ_iterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_explicit_succ_iterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_state_product__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state *arg1 = (spot::state *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state_product *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_state_product",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_product *)new spot::state_product(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_product, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_state_product__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = 0 ;
    spot::state_product *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_state_product",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (spot::state_product *)new spot::state_product((spot::state_product const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_product, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_state_product(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__state_product, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_state_product__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_spot__state, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_spot__state, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_state_product__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_state_product'");
    return NULL;
}


static PyObject *_wrap_delete_state_product(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = (spot::state_product *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_state_product",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_product_left(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = (spot::state_product *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_product_left",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::state_product const *)arg1)->left();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_product_right(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = (spot::state_product *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_product_right",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::state_product const *)arg1)->right();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_product_compare(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = (spot::state_product *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:state_product_compare",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((spot::state_product const *)arg1)->compare((spot::state const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_product_hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = (spot::state_product *) 0 ;
    size_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_product_hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::state_product const *)arg1)->hash();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_state_product_clone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::state_product *arg1 = (spot::state_product *) 0 ;
    spot::state_product *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:state_product_clone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__state_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_product *)((spot::state_product const *)arg1)->clone();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_product, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * state_product_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__state_product, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_succ_iterator_product(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator *arg1 = (spot::tgba_succ_iterator *) 0 ;
    spot::tgba_succ_iterator *arg2 = (spot::tgba_succ_iterator *) 0 ;
    bdd arg3 ;
    bdd arg4 ;
    spot::tgba_succ_iterator_product *result;
    bdd *argp3 ;
    bdd *argp4 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:new_tgba_succ_iterator_product",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba_succ_iterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg4 = *argp4; 
    result = (spot::tgba_succ_iterator_product *)new spot::tgba_succ_iterator_product(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator_product, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_succ_iterator_product(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_succ_iterator_product",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_product_first(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_product_first",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->first();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_product_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_product_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_product_done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_product_done",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::tgba_succ_iterator_product const *)arg1)->done();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_product_current_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    spot::state_product *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_product_current_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state_product *)((spot::tgba_succ_iterator_product const *)arg1)->current_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state_product, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_product_current_condition(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_product_current_condition",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_succ_iterator_product const *)arg1)->current_condition();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_succ_iterator_product_current_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_succ_iterator_product *arg1 = (spot::tgba_succ_iterator_product *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_succ_iterator_product_current_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_succ_iterator_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_succ_iterator_product const *)arg1)->current_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_succ_iterator_product_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_succ_iterator_product, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_product(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::tgba *arg2 = (spot::tgba *) 0 ;
    spot::tgba_product *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_tgba_product",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_product *)new spot::tgba_product((spot::tgba const *)arg1,(spot::tgba const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_product, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_product(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_product",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_get_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_product_get_init_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba_product const *)arg1)->get_init_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_succ_iter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    spot::tgba *arg4 = (spot::tgba *) 0 ;
    spot::tgba_succ_iterator_product *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:tgba_product_succ_iter",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (spot::tgba_succ_iterator_product *)((spot::tgba_product const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator_product, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_get_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    spot::bdd_dict *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_product_get_dict",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::bdd_dict *)((spot::tgba_product const *)arg1)->get_dict();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_format_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_product_format_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_product const *)arg1)->format_state((spot::state const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_project_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::tgba *arg3 = (spot::tgba *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_product_project_state",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba_product const *)arg1)->project_state((spot::state const *)arg2,(spot::tgba const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_all_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_product_all_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_product const *)arg1)->all_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_product_neg_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_product *arg1 = (spot::tgba_product *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_product_neg_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_product,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_product const *)arg1)->neg_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_product_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_product, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_tgba_tba_proxy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba *arg1 = (spot::tgba *) 0 ;
    spot::tgba_tba_proxy *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_tgba_tba_proxy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_tba_proxy *)new spot::tgba_tba_proxy((spot::tgba const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_tba_proxy, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_tgba_tba_proxy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_tgba_tba_proxy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_get_init_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_get_init_state",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba_tba_proxy const *)arg1)->get_init_state();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_succ_iter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::state *arg3 = (spot::state *) 0 ;
    spot::tgba *arg4 = (spot::tgba *) 0 ;
    spot::tgba_succ_iterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:tgba_tba_proxy_succ_iter",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (spot::tgba_succ_iterator *)((spot::tgba_tba_proxy const *)arg1)->succ_iter((spot::state const *)arg2,(spot::state const *)arg3,(spot::tgba const *)arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_succ_iterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_get_dict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::bdd_dict *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_get_dict",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::bdd_dict *)((spot::tgba_tba_proxy const *)arg1)->get_dict();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__bdd_dict, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_format_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_tba_proxy_format_state",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_tba_proxy const *)arg1)->format_state((spot::state const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_project_state(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    spot::tgba *arg3 = (spot::tgba *) 0 ;
    spot::state *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:tgba_tba_proxy_project_state",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::state *)((spot::tgba_tba_proxy const *)arg1)->project_state((spot::state const *)arg2,(spot::tgba const *)arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__state, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_all_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_all_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_tba_proxy const *)arg1)->all_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_neg_acceptance_conditions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:tgba_tba_proxy_neg_acceptance_conditions",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((spot::tgba_tba_proxy const *)arg1)->neg_acceptance_conditions();
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_tgba_tba_proxy_state_is_accepting(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::state *arg2 = (spot::state *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_tba_proxy_state_is_accepting",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__state,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((spot::tgba_tba_proxy const *)arg1)->state_is_accepting((spot::state const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * tgba_tba_proxy_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__tgba_tba_proxy, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ltl_to_tgba_lacim(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    spot::tgba_bdd_concrete *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ltl_to_tgba_lacim",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_bdd_concrete *)spot::ltl_to_tgba_lacim((spot::ltl::formula const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_bdd_concrete, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ltl_to_tgba_fm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::ltl::formula *arg1 = (spot::ltl::formula *) 0 ;
    spot::bdd_dict *arg2 = (spot::bdd_dict *) 0 ;
    spot::tgba_explicit *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ltl_to_tgba_fm",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__ltl__formula,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__bdd_dict,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::tgba_explicit *)spot::ltl_to_tgba_fm((spot::ltl::formula const *)arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__tgba_explicit, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_dotty_reachable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::tgba *arg2 = (spot::tgba *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:dotty_reachable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::ostream &_result_ref = spot::dotty_reachable(*arg1,(spot::tgba const *)arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_lbtt_reachable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::tgba *arg2 = (spot::tgba *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:lbtt_reachable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::ostream &_result_ref = spot::lbtt_reachable(*arg1,(spot::tgba const *)arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_magic_search(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::tgba_tba_proxy *arg1 = (spot::tgba_tba_proxy *) 0 ;
    spot::magic_search *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_magic_search",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__tgba_tba_proxy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (spot::magic_search *)new spot::magic_search((spot::tgba_tba_proxy const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_spot__magic_search, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_magic_search(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::magic_search *arg1 = (spot::magic_search *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_magic_search",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__magic_search,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_magic_search_check(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::magic_search *arg1 = (spot::magic_search *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:magic_search_check",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__magic_search,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->check();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_magic_search_print_result(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    spot::magic_search *arg1 = (spot::magic_search *) 0 ;
    std::ostream *arg2 = 0 ;
    spot::tgba *arg3 = (spot::tgba *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:magic_search_print_result",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_spot__magic_search,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    {
        std::ostream &_result_ref = ((spot::magic_search const *)arg1)->print_result(*arg2,(spot::tgba const *)arg3);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * magic_search_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_spot__magic_search, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_tgba_save_reachable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    spot::tgba *arg2 = (spot::tgba *) 0 ;
    std::ostream *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:tgba_save_reachable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_spot__tgba,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::ostream &_result_ref = spot::tgba_save_reachable(*arg1,(spot::tgba const *)arg2);
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ostream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_std__ostream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ofstream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    std::ofstream *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_ofstream",&arg1)) goto fail;
    result = (std::ofstream *)new std::ofstream((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ofstream, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ofstream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ofstream *arg1 = (std::ofstream *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ofstream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ofstream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ofstream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_std__ofstream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ostringstream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostringstream *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ostringstream")) goto fail;
    result = (std::ostringstream *)new std::ostringstream();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostringstream, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ostringstream_str(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostringstream *arg1 = (std::ostringstream *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ostringstream_str",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostringstream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((std::ostringstream const *)arg1)->str();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ostringstream(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostringstream *arg1 = (std::ostringstream *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ostringstream",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostringstream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ostringstream_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_std__ostringstream, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_empty_parse_error_list(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    SwigValueWrapper< spot::ltl::parse_error_list > result;
    
    if(!PyArg_ParseTuple(args,(char *)":empty_parse_error_list")) goto fail;
    result = empty_parse_error_list();
    
    {
        spot::ltl::parse_error_list * resultptr;
        resultptr = new spot::ltl::parse_error_list((spot::ltl::parse_error_list &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_spot__ltl__parse_error_list, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_get_cout(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *result;
    
    if(!PyArg_ParseTuple(args,(char *)":get_cout")) goto fail;
    {
        std::ostream &_result_ref = get_cout();
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_get_cerr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *result;
    
    if(!PyArg_ParseTuple(args,(char *)":get_cerr")) goto fail;
    {
        std::ostream &_result_ref = get_cerr();
        result = (std::ostream *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_std__ostream, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_print_on(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:print_on",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    print_on(*arg1,(std::string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"version", _wrap_version, METH_VARARGS },
	 { (char *)"delete_formula", _wrap_delete_formula, METH_VARARGS },
	 { (char *)"formula_accept", _wrap_formula_accept, METH_VARARGS },
	 { (char *)"formula_ref", _wrap_formula_ref, METH_VARARGS },
	 { (char *)"formula_unref", _wrap_formula_unref, METH_VARARGS },
	 { (char *)"formula___cmp__", _wrap_formula___cmp__, METH_VARARGS },
	 { (char *)"formula___str__", _wrap_formula___str__, METH_VARARGS },
	 { (char *)"formula_swigregister", formula_swigregister, METH_VARARGS },
	 { (char *)"ref_formula_swigregister", ref_formula_swigregister, METH_VARARGS },
	 { (char *)"atomic_prop_instance", _wrap_atomic_prop_instance, METH_VARARGS },
	 { (char *)"atomic_prop_accept", _wrap_atomic_prop_accept, METH_VARARGS },
	 { (char *)"atomic_prop_name", _wrap_atomic_prop_name, METH_VARARGS },
	 { (char *)"atomic_prop_env", _wrap_atomic_prop_env, METH_VARARGS },
	 { (char *)"atomic_prop_instance_count", _wrap_atomic_prop_instance_count, METH_VARARGS },
	 { (char *)"atomic_prop_swigregister", atomic_prop_swigregister, METH_VARARGS },
	 { (char *)"binop_instance", _wrap_binop_instance, METH_VARARGS },
	 { (char *)"binop_accept", _wrap_binop_accept, METH_VARARGS },
	 { (char *)"binop_first", _wrap_binop_first, METH_VARARGS },
	 { (char *)"binop_second", _wrap_binop_second, METH_VARARGS },
	 { (char *)"binop_op", _wrap_binop_op, METH_VARARGS },
	 { (char *)"binop_op_name", _wrap_binop_op_name, METH_VARARGS },
	 { (char *)"binop_instance_count", _wrap_binop_instance_count, METH_VARARGS },
	 { (char *)"binop_swigregister", binop_swigregister, METH_VARARGS },
	 { (char *)"constant_accept", _wrap_constant_accept, METH_VARARGS },
	 { (char *)"constant_val", _wrap_constant_val, METH_VARARGS },
	 { (char *)"constant_val_name", _wrap_constant_val_name, METH_VARARGS },
	 { (char *)"constant_true_instance", _wrap_constant_true_instance, METH_VARARGS },
	 { (char *)"constant_false_instance", _wrap_constant_false_instance, METH_VARARGS },
	 { (char *)"constant_swigregister", constant_swigregister, METH_VARARGS },
	 { (char *)"multop_instance", _wrap_multop_instance, METH_VARARGS },
	 { (char *)"multop_accept", _wrap_multop_accept, METH_VARARGS },
	 { (char *)"multop_size", _wrap_multop_size, METH_VARARGS },
	 { (char *)"multop_nth", _wrap_multop_nth, METH_VARARGS },
	 { (char *)"multop_op", _wrap_multop_op, METH_VARARGS },
	 { (char *)"multop_op_name", _wrap_multop_op_name, METH_VARARGS },
	 { (char *)"multop_instance_count", _wrap_multop_instance_count, METH_VARARGS },
	 { (char *)"multop_swigregister", multop_swigregister, METH_VARARGS },
	 { (char *)"unop_instance", _wrap_unop_instance, METH_VARARGS },
	 { (char *)"unop_accept", _wrap_unop_accept, METH_VARARGS },
	 { (char *)"unop_child", _wrap_unop_child, METH_VARARGS },
	 { (char *)"unop_op", _wrap_unop_op, METH_VARARGS },
	 { (char *)"unop_op_name", _wrap_unop_op_name, METH_VARARGS },
	 { (char *)"unop_instance_count", _wrap_unop_instance_count, METH_VARARGS },
	 { (char *)"unop_swigregister", unop_swigregister, METH_VARARGS },
	 { (char *)"visitor_visit", _wrap_visitor_visit, METH_VARARGS },
	 { (char *)"delete_visitor", _wrap_delete_visitor, METH_VARARGS },
	 { (char *)"visitor_swigregister", visitor_swigregister, METH_VARARGS },
	 { (char *)"const_visitor_visit", _wrap_const_visitor_visit, METH_VARARGS },
	 { (char *)"delete_const_visitor", _wrap_delete_const_visitor, METH_VARARGS },
	 { (char *)"const_visitor_swigregister", const_visitor_swigregister, METH_VARARGS },
	 { (char *)"environment_require", _wrap_environment_require, METH_VARARGS },
	 { (char *)"environment_name", _wrap_environment_name, METH_VARARGS },
	 { (char *)"delete_environment", _wrap_delete_environment, METH_VARARGS },
	 { (char *)"environment_swigregister", environment_swigregister, METH_VARARGS },
	 { (char *)"delete_default_environment", _wrap_delete_default_environment, METH_VARARGS },
	 { (char *)"default_environment_require", _wrap_default_environment_require, METH_VARARGS },
	 { (char *)"default_environment_name", _wrap_default_environment_name, METH_VARARGS },
	 { (char *)"default_environment_instance", _wrap_default_environment_instance, METH_VARARGS },
	 { (char *)"default_environment_swigregister", default_environment_swigregister, METH_VARARGS },
	 { (char *)"parse", _wrap_parse, METH_VARARGS },
	 { (char *)"format_parse_errors", _wrap_format_parse_errors, METH_VARARGS },
	 { (char *)"new_clone_visitor", _wrap_new_clone_visitor, METH_VARARGS },
	 { (char *)"delete_clone_visitor", _wrap_delete_clone_visitor, METH_VARARGS },
	 { (char *)"clone_visitor_result", _wrap_clone_visitor_result, METH_VARARGS },
	 { (char *)"clone_visitor_visit", _wrap_clone_visitor_visit, METH_VARARGS },
	 { (char *)"clone_visitor_recurse", _wrap_clone_visitor_recurse, METH_VARARGS },
	 { (char *)"clone_visitor_swigregister", clone_visitor_swigregister, METH_VARARGS },
	 { (char *)"clone", _wrap_clone, METH_VARARGS },
	 { (char *)"destroy", _wrap_destroy, METH_VARARGS },
	 { (char *)"dotty", _wrap_dotty, METH_VARARGS },
	 { (char *)"dump", _wrap_dump, METH_VARARGS },
	 { (char *)"delete_unabbreviate_logic_visitor", _wrap_delete_unabbreviate_logic_visitor, METH_VARARGS },
	 { (char *)"unabbreviate_logic_visitor_visit", _wrap_unabbreviate_logic_visitor_visit, METH_VARARGS },
	 { (char *)"unabbreviate_logic_visitor_recurse", _wrap_unabbreviate_logic_visitor_recurse, METH_VARARGS },
	 { (char *)"unabbreviate_logic_visitor_swigregister", unabbreviate_logic_visitor_swigregister, METH_VARARGS },
	 { (char *)"unabbreviate_logic", _wrap_unabbreviate_logic, METH_VARARGS },
	 { (char *)"negative_normal_form", _wrap_negative_normal_form, METH_VARARGS },
	 { (char *)"to_string", _wrap_to_string, METH_VARARGS },
	 { (char *)"delete_unabbreviate_ltl_visitor", _wrap_delete_unabbreviate_ltl_visitor, METH_VARARGS },
	 { (char *)"unabbreviate_ltl_visitor_visit", _wrap_unabbreviate_ltl_visitor_visit, METH_VARARGS },
	 { (char *)"unabbreviate_ltl_visitor_recurse", _wrap_unabbreviate_ltl_visitor_recurse, METH_VARARGS },
	 { (char *)"unabbreviate_ltl_visitor_swigregister", unabbreviate_ltl_visitor_swigregister, METH_VARARGS },
	 { (char *)"unabbreviate_ltl", _wrap_unabbreviate_ltl, METH_VARARGS },
	 { (char *)"new_bdd_dict", _wrap_new_bdd_dict, METH_VARARGS },
	 { (char *)"delete_bdd_dict", _wrap_delete_bdd_dict, METH_VARARGS },
	 { (char *)"bdd_dict_now_map_set", _wrap_bdd_dict_now_map_set, METH_VARARGS },
	 { (char *)"bdd_dict_now_map_get", _wrap_bdd_dict_now_map_get, METH_VARARGS },
	 { (char *)"bdd_dict_now_formula_map_set", _wrap_bdd_dict_now_formula_map_set, METH_VARARGS },
	 { (char *)"bdd_dict_now_formula_map_get", _wrap_bdd_dict_now_formula_map_get, METH_VARARGS },
	 { (char *)"bdd_dict_var_map_set", _wrap_bdd_dict_var_map_set, METH_VARARGS },
	 { (char *)"bdd_dict_var_map_get", _wrap_bdd_dict_var_map_get, METH_VARARGS },
	 { (char *)"bdd_dict_var_formula_map_set", _wrap_bdd_dict_var_formula_map_set, METH_VARARGS },
	 { (char *)"bdd_dict_var_formula_map_get", _wrap_bdd_dict_var_formula_map_get, METH_VARARGS },
	 { (char *)"bdd_dict_acc_map_set", _wrap_bdd_dict_acc_map_set, METH_VARARGS },
	 { (char *)"bdd_dict_acc_map_get", _wrap_bdd_dict_acc_map_get, METH_VARARGS },
	 { (char *)"bdd_dict_acc_formula_map_set", _wrap_bdd_dict_acc_formula_map_set, METH_VARARGS },
	 { (char *)"bdd_dict_acc_formula_map_get", _wrap_bdd_dict_acc_formula_map_get, METH_VARARGS },
	 { (char *)"bdd_dict_next_to_now_set", _wrap_bdd_dict_next_to_now_set, METH_VARARGS },
	 { (char *)"bdd_dict_next_to_now_get", _wrap_bdd_dict_next_to_now_get, METH_VARARGS },
	 { (char *)"bdd_dict_now_to_next_set", _wrap_bdd_dict_now_to_next_set, METH_VARARGS },
	 { (char *)"bdd_dict_now_to_next_get", _wrap_bdd_dict_now_to_next_get, METH_VARARGS },
	 { (char *)"bdd_dict_register_proposition", _wrap_bdd_dict_register_proposition, METH_VARARGS },
	 { (char *)"bdd_dict_register_propositions", _wrap_bdd_dict_register_propositions, METH_VARARGS },
	 { (char *)"bdd_dict_register_state", _wrap_bdd_dict_register_state, METH_VARARGS },
	 { (char *)"bdd_dict_register_acceptance_variable", _wrap_bdd_dict_register_acceptance_variable, METH_VARARGS },
	 { (char *)"bdd_dict_register_acceptance_variables", _wrap_bdd_dict_register_acceptance_variables, METH_VARARGS },
	 { (char *)"bdd_dict_register_all_variables_of", _wrap_bdd_dict_register_all_variables_of, METH_VARARGS },
	 { (char *)"bdd_dict_unregister_all_my_variables", _wrap_bdd_dict_unregister_all_my_variables, METH_VARARGS },
	 { (char *)"bdd_dict_is_registered_proposition", _wrap_bdd_dict_is_registered_proposition, METH_VARARGS },
	 { (char *)"bdd_dict_is_registered_state", _wrap_bdd_dict_is_registered_state, METH_VARARGS },
	 { (char *)"bdd_dict_is_registered_acceptance_variable", _wrap_bdd_dict_is_registered_acceptance_variable, METH_VARARGS },
	 { (char *)"bdd_dict_dump", _wrap_bdd_dict_dump, METH_VARARGS },
	 { (char *)"bdd_dict_assert_emptiness", _wrap_bdd_dict_assert_emptiness, METH_VARARGS },
	 { (char *)"bdd_dict_swigregister", bdd_dict_swigregister, METH_VARARGS },
	 { (char *)"bdd_print_sat", _wrap_bdd_print_sat, METH_VARARGS },
	 { (char *)"bdd_format_sat", _wrap_bdd_format_sat, METH_VARARGS },
	 { (char *)"bdd_print_acc", _wrap_bdd_print_acc, METH_VARARGS },
	 { (char *)"bdd_print_accset", _wrap_bdd_print_accset, METH_VARARGS },
	 { (char *)"bdd_print_set", _wrap_bdd_print_set, METH_VARARGS },
	 { (char *)"bdd_format_set", _wrap_bdd_format_set, METH_VARARGS },
	 { (char *)"bdd_print_formula", _wrap_bdd_print_formula, METH_VARARGS },
	 { (char *)"bdd_format_formula", _wrap_bdd_format_formula, METH_VARARGS },
	 { (char *)"bdd_print_dot", _wrap_bdd_print_dot, METH_VARARGS },
	 { (char *)"bdd_print_table", _wrap_bdd_print_table, METH_VARARGS },
	 { (char *)"state_compare", _wrap_state_compare, METH_VARARGS },
	 { (char *)"state_hash", _wrap_state_hash, METH_VARARGS },
	 { (char *)"state_clone", _wrap_state_clone, METH_VARARGS },
	 { (char *)"delete_state", _wrap_delete_state, METH_VARARGS },
	 { (char *)"state_swigregister", state_swigregister, METH_VARARGS },
	 { (char *)"state_ptr_less_than___call__", _wrap_state_ptr_less_than___call__, METH_VARARGS },
	 { (char *)"new_state_ptr_less_than", _wrap_new_state_ptr_less_than, METH_VARARGS },
	 { (char *)"delete_state_ptr_less_than", _wrap_delete_state_ptr_less_than, METH_VARARGS },
	 { (char *)"state_ptr_less_than_swigregister", state_ptr_less_than_swigregister, METH_VARARGS },
	 { (char *)"state_ptr_equal___call__", _wrap_state_ptr_equal___call__, METH_VARARGS },
	 { (char *)"new_state_ptr_equal", _wrap_new_state_ptr_equal, METH_VARARGS },
	 { (char *)"delete_state_ptr_equal", _wrap_delete_state_ptr_equal, METH_VARARGS },
	 { (char *)"state_ptr_equal_swigregister", state_ptr_equal_swigregister, METH_VARARGS },
	 { (char *)"state_ptr_hash___call__", _wrap_state_ptr_hash___call__, METH_VARARGS },
	 { (char *)"new_state_ptr_hash", _wrap_new_state_ptr_hash, METH_VARARGS },
	 { (char *)"delete_state_ptr_hash", _wrap_delete_state_ptr_hash, METH_VARARGS },
	 { (char *)"state_ptr_hash_swigregister", state_ptr_hash_swigregister, METH_VARARGS },
	 { (char *)"delete_tgba_succ_iterator", _wrap_delete_tgba_succ_iterator, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_first", _wrap_tgba_succ_iterator_first, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_next", _wrap_tgba_succ_iterator_next, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_done", _wrap_tgba_succ_iterator_done, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_current_state", _wrap_tgba_succ_iterator_current_state, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_current_condition", _wrap_tgba_succ_iterator_current_condition, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_current_acceptance_conditions", _wrap_tgba_succ_iterator_current_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_swigregister", tgba_succ_iterator_swigregister, METH_VARARGS },
	 { (char *)"delete_tgba", _wrap_delete_tgba, METH_VARARGS },
	 { (char *)"tgba_get_init_state", _wrap_tgba_get_init_state, METH_VARARGS },
	 { (char *)"tgba_succ_iter", _wrap_tgba_succ_iter, METH_VARARGS },
	 { (char *)"tgba_support_conditions", _wrap_tgba_support_conditions, METH_VARARGS },
	 { (char *)"tgba_support_variables", _wrap_tgba_support_variables, METH_VARARGS },
	 { (char *)"tgba_get_dict", _wrap_tgba_get_dict, METH_VARARGS },
	 { (char *)"tgba_format_state", _wrap_tgba_format_state, METH_VARARGS },
	 { (char *)"tgba_project_state", _wrap_tgba_project_state, METH_VARARGS },
	 { (char *)"tgba_all_acceptance_conditions", _wrap_tgba_all_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_neg_acceptance_conditions", _wrap_tgba_neg_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_swigregister", tgba_swigregister, METH_VARARGS },
	 { (char *)"new_state_bdd", _wrap_new_state_bdd, METH_VARARGS },
	 { (char *)"state_bdd_as_bdd", _wrap_state_bdd_as_bdd, METH_VARARGS },
	 { (char *)"state_bdd_compare", _wrap_state_bdd_compare, METH_VARARGS },
	 { (char *)"state_bdd_hash", _wrap_state_bdd_hash, METH_VARARGS },
	 { (char *)"state_bdd_clone", _wrap_state_bdd_clone, METH_VARARGS },
	 { (char *)"delete_state_bdd", _wrap_delete_state_bdd, METH_VARARGS },
	 { (char *)"state_bdd_swigregister", state_bdd_swigregister, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_relation_set", _wrap_tgba_bdd_core_data_relation_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_relation_get", _wrap_tgba_bdd_core_data_relation_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_acceptance_conditions_set", _wrap_tgba_bdd_core_data_acceptance_conditions_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_acceptance_conditions_get", _wrap_tgba_bdd_core_data_acceptance_conditions_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_all_acceptance_conditions_set", _wrap_tgba_bdd_core_data_all_acceptance_conditions_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_all_acceptance_conditions_get", _wrap_tgba_bdd_core_data_all_acceptance_conditions_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_now_set_set", _wrap_tgba_bdd_core_data_now_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_now_set_get", _wrap_tgba_bdd_core_data_now_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_next_set_set", _wrap_tgba_bdd_core_data_next_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_next_set_get", _wrap_tgba_bdd_core_data_next_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_nownext_set_set", _wrap_tgba_bdd_core_data_nownext_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_nownext_set_get", _wrap_tgba_bdd_core_data_nownext_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notnow_set_set", _wrap_tgba_bdd_core_data_notnow_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notnow_set_get", _wrap_tgba_bdd_core_data_notnow_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notnext_set_set", _wrap_tgba_bdd_core_data_notnext_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notnext_set_get", _wrap_tgba_bdd_core_data_notnext_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_var_set_set", _wrap_tgba_bdd_core_data_var_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_var_set_get", _wrap_tgba_bdd_core_data_var_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notvar_set_set", _wrap_tgba_bdd_core_data_notvar_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notvar_set_get", _wrap_tgba_bdd_core_data_notvar_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_varandnext_set_set", _wrap_tgba_bdd_core_data_varandnext_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_varandnext_set_get", _wrap_tgba_bdd_core_data_varandnext_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_acc_set_set", _wrap_tgba_bdd_core_data_acc_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_acc_set_get", _wrap_tgba_bdd_core_data_acc_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notacc_set_set", _wrap_tgba_bdd_core_data_notacc_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_notacc_set_get", _wrap_tgba_bdd_core_data_notacc_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_negacc_set_set", _wrap_tgba_bdd_core_data_negacc_set_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_negacc_set_get", _wrap_tgba_bdd_core_data_negacc_set_get, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_dict_set", _wrap_tgba_bdd_core_data_dict_set, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_dict_get", _wrap_tgba_bdd_core_data_dict_get, METH_VARARGS },
	 { (char *)"new_tgba_bdd_core_data", _wrap_new_tgba_bdd_core_data, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_declare_now_next", _wrap_tgba_bdd_core_data_declare_now_next, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_declare_atomic_prop", _wrap_tgba_bdd_core_data_declare_atomic_prop, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_declare_acceptance_condition", _wrap_tgba_bdd_core_data_declare_acceptance_condition, METH_VARARGS },
	 { (char *)"delete_tgba_bdd_core_data", _wrap_delete_tgba_bdd_core_data, METH_VARARGS },
	 { (char *)"tgba_bdd_core_data_swigregister", tgba_bdd_core_data_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_succ_iterator_concrete", _wrap_new_tgba_succ_iterator_concrete, METH_VARARGS },
	 { (char *)"delete_tgba_succ_iterator_concrete", _wrap_delete_tgba_succ_iterator_concrete, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_first", _wrap_tgba_succ_iterator_concrete_first, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_next", _wrap_tgba_succ_iterator_concrete_next, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_done", _wrap_tgba_succ_iterator_concrete_done, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_current_state", _wrap_tgba_succ_iterator_concrete_current_state, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_current_condition", _wrap_tgba_succ_iterator_concrete_current_condition, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_current_acceptance_conditions", _wrap_tgba_succ_iterator_concrete_current_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_concrete_swigregister", tgba_succ_iterator_concrete_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_bdd_concrete", _wrap_new_tgba_bdd_concrete, METH_VARARGS },
	 { (char *)"delete_tgba_bdd_concrete", _wrap_delete_tgba_bdd_concrete, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_set_init_state", _wrap_tgba_bdd_concrete_set_init_state, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_get_init_state", _wrap_tgba_bdd_concrete_get_init_state, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_get_init_bdd", _wrap_tgba_bdd_concrete_get_init_bdd, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_succ_iter", _wrap_tgba_bdd_concrete_succ_iter, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_format_state", _wrap_tgba_bdd_concrete_format_state, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_get_dict", _wrap_tgba_bdd_concrete_get_dict, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_get_core_data", _wrap_tgba_bdd_concrete_get_core_data, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_all_acceptance_conditions", _wrap_tgba_bdd_concrete_all_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_neg_acceptance_conditions", _wrap_tgba_bdd_concrete_neg_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_bdd_concrete_swigregister", tgba_bdd_concrete_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_explicit", _wrap_new_tgba_explicit, METH_VARARGS },
	 { (char *)"tgba_explicit_set_init_state", _wrap_tgba_explicit_set_init_state, METH_VARARGS },
	 { (char *)"tgba_explicit_create_transition", _wrap_tgba_explicit_create_transition, METH_VARARGS },
	 { (char *)"tgba_explicit_add_condition", _wrap_tgba_explicit_add_condition, METH_VARARGS },
	 { (char *)"tgba_explicit_add_conditions", _wrap_tgba_explicit_add_conditions, METH_VARARGS },
	 { (char *)"tgba_explicit_declare_acceptance_condition", _wrap_tgba_explicit_declare_acceptance_condition, METH_VARARGS },
	 { (char *)"tgba_explicit_has_acceptance_condition", _wrap_tgba_explicit_has_acceptance_condition, METH_VARARGS },
	 { (char *)"tgba_explicit_add_acceptance_condition", _wrap_tgba_explicit_add_acceptance_condition, METH_VARARGS },
	 { (char *)"tgba_explicit_add_acceptance_conditions", _wrap_tgba_explicit_add_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_explicit_complement_all_acceptance_conditions", _wrap_tgba_explicit_complement_all_acceptance_conditions, METH_VARARGS },
	 { (char *)"delete_tgba_explicit", _wrap_delete_tgba_explicit, METH_VARARGS },
	 { (char *)"tgba_explicit_get_init_state", _wrap_tgba_explicit_get_init_state, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iter", _wrap_tgba_explicit_succ_iter, METH_VARARGS },
	 { (char *)"tgba_explicit_get_dict", _wrap_tgba_explicit_get_dict, METH_VARARGS },
	 { (char *)"tgba_explicit_format_state", _wrap_tgba_explicit_format_state, METH_VARARGS },
	 { (char *)"tgba_explicit_all_acceptance_conditions", _wrap_tgba_explicit_all_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_explicit_neg_acceptance_conditions", _wrap_tgba_explicit_neg_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_explicit_swigregister", tgba_explicit_swigregister, METH_VARARGS },
	 { (char *)"new_state_explicit", _wrap_new_state_explicit, METH_VARARGS },
	 { (char *)"state_explicit_compare", _wrap_state_explicit_compare, METH_VARARGS },
	 { (char *)"state_explicit_hash", _wrap_state_explicit_hash, METH_VARARGS },
	 { (char *)"state_explicit_clone", _wrap_state_explicit_clone, METH_VARARGS },
	 { (char *)"delete_state_explicit", _wrap_delete_state_explicit, METH_VARARGS },
	 { (char *)"state_explicit_get_state", _wrap_state_explicit_get_state, METH_VARARGS },
	 { (char *)"state_explicit_swigregister", state_explicit_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_explicit_succ_iterator", _wrap_new_tgba_explicit_succ_iterator, METH_VARARGS },
	 { (char *)"delete_tgba_explicit_succ_iterator", _wrap_delete_tgba_explicit_succ_iterator, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_first", _wrap_tgba_explicit_succ_iterator_first, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_next", _wrap_tgba_explicit_succ_iterator_next, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_done", _wrap_tgba_explicit_succ_iterator_done, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_current_state", _wrap_tgba_explicit_succ_iterator_current_state, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_current_condition", _wrap_tgba_explicit_succ_iterator_current_condition, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_current_acceptance_conditions", _wrap_tgba_explicit_succ_iterator_current_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_explicit_succ_iterator_swigregister", tgba_explicit_succ_iterator_swigregister, METH_VARARGS },
	 { (char *)"new_state_product", _wrap_new_state_product, METH_VARARGS },
	 { (char *)"delete_state_product", _wrap_delete_state_product, METH_VARARGS },
	 { (char *)"state_product_left", _wrap_state_product_left, METH_VARARGS },
	 { (char *)"state_product_right", _wrap_state_product_right, METH_VARARGS },
	 { (char *)"state_product_compare", _wrap_state_product_compare, METH_VARARGS },
	 { (char *)"state_product_hash", _wrap_state_product_hash, METH_VARARGS },
	 { (char *)"state_product_clone", _wrap_state_product_clone, METH_VARARGS },
	 { (char *)"state_product_swigregister", state_product_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_succ_iterator_product", _wrap_new_tgba_succ_iterator_product, METH_VARARGS },
	 { (char *)"delete_tgba_succ_iterator_product", _wrap_delete_tgba_succ_iterator_product, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_first", _wrap_tgba_succ_iterator_product_first, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_next", _wrap_tgba_succ_iterator_product_next, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_done", _wrap_tgba_succ_iterator_product_done, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_current_state", _wrap_tgba_succ_iterator_product_current_state, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_current_condition", _wrap_tgba_succ_iterator_product_current_condition, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_current_acceptance_conditions", _wrap_tgba_succ_iterator_product_current_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_succ_iterator_product_swigregister", tgba_succ_iterator_product_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_product", _wrap_new_tgba_product, METH_VARARGS },
	 { (char *)"delete_tgba_product", _wrap_delete_tgba_product, METH_VARARGS },
	 { (char *)"tgba_product_get_init_state", _wrap_tgba_product_get_init_state, METH_VARARGS },
	 { (char *)"tgba_product_succ_iter", _wrap_tgba_product_succ_iter, METH_VARARGS },
	 { (char *)"tgba_product_get_dict", _wrap_tgba_product_get_dict, METH_VARARGS },
	 { (char *)"tgba_product_format_state", _wrap_tgba_product_format_state, METH_VARARGS },
	 { (char *)"tgba_product_project_state", _wrap_tgba_product_project_state, METH_VARARGS },
	 { (char *)"tgba_product_all_acceptance_conditions", _wrap_tgba_product_all_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_product_neg_acceptance_conditions", _wrap_tgba_product_neg_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_product_swigregister", tgba_product_swigregister, METH_VARARGS },
	 { (char *)"new_tgba_tba_proxy", _wrap_new_tgba_tba_proxy, METH_VARARGS },
	 { (char *)"delete_tgba_tba_proxy", _wrap_delete_tgba_tba_proxy, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_get_init_state", _wrap_tgba_tba_proxy_get_init_state, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_succ_iter", _wrap_tgba_tba_proxy_succ_iter, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_get_dict", _wrap_tgba_tba_proxy_get_dict, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_format_state", _wrap_tgba_tba_proxy_format_state, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_project_state", _wrap_tgba_tba_proxy_project_state, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_all_acceptance_conditions", _wrap_tgba_tba_proxy_all_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_neg_acceptance_conditions", _wrap_tgba_tba_proxy_neg_acceptance_conditions, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_state_is_accepting", _wrap_tgba_tba_proxy_state_is_accepting, METH_VARARGS },
	 { (char *)"tgba_tba_proxy_swigregister", tgba_tba_proxy_swigregister, METH_VARARGS },
	 { (char *)"ltl_to_tgba_lacim", _wrap_ltl_to_tgba_lacim, METH_VARARGS },
	 { (char *)"ltl_to_tgba_fm", _wrap_ltl_to_tgba_fm, METH_VARARGS },
	 { (char *)"dotty_reachable", _wrap_dotty_reachable, METH_VARARGS },
	 { (char *)"lbtt_reachable", _wrap_lbtt_reachable, METH_VARARGS },
	 { (char *)"new_magic_search", _wrap_new_magic_search, METH_VARARGS },
	 { (char *)"delete_magic_search", _wrap_delete_magic_search, METH_VARARGS },
	 { (char *)"magic_search_check", _wrap_magic_search_check, METH_VARARGS },
	 { (char *)"magic_search_print_result", _wrap_magic_search_print_result, METH_VARARGS },
	 { (char *)"magic_search_swigregister", magic_search_swigregister, METH_VARARGS },
	 { (char *)"tgba_save_reachable", _wrap_tgba_save_reachable, METH_VARARGS },
	 { (char *)"ostream_swigregister", ostream_swigregister, METH_VARARGS },
	 { (char *)"new_ofstream", _wrap_new_ofstream, METH_VARARGS },
	 { (char *)"delete_ofstream", _wrap_delete_ofstream, METH_VARARGS },
	 { (char *)"ofstream_swigregister", ofstream_swigregister, METH_VARARGS },
	 { (char *)"new_ostringstream", _wrap_new_ostringstream, METH_VARARGS },
	 { (char *)"ostringstream_str", _wrap_ostringstream_str, METH_VARARGS },
	 { (char *)"delete_ostringstream", _wrap_delete_ostringstream, METH_VARARGS },
	 { (char *)"ostringstream_swigregister", ostringstream_swigregister, METH_VARARGS },
	 { (char *)"empty_parse_error_list", _wrap_empty_parse_error_list, METH_VARARGS },
	 { (char *)"get_cout", _wrap_get_cout, METH_VARARGS },
	 { (char *)"get_cerr", _wrap_get_cerr, METH_VARARGS },
	 { (char *)"print_on", _wrap_print_on, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_spot__tgba_explicitTo_p_spot__tgba(void *x) {
    return (void *)((spot::tgba *)  ((spot::tgba_explicit *) x));
}
static void *_p_spot__tgba_bdd_concreteTo_p_spot__tgba(void *x) {
    return (void *)((spot::tgba *)  ((spot::tgba_bdd_concrete *) x));
}
static void *_p_spot__tgba_productTo_p_spot__tgba(void *x) {
    return (void *)((spot::tgba *)  ((spot::tgba_product *) x));
}
static void *_p_spot__tgba_tba_proxyTo_p_spot__tgba(void *x) {
    return (void *)((spot::tgba *)  ((spot::tgba_tba_proxy *) x));
}
static void *_p_spot__tgba_succ_iterator_concreteTo_p_spot__tgba_succ_iterator(void *x) {
    return (void *)((spot::tgba_succ_iterator *)  ((spot::tgba_succ_iterator_concrete *) x));
}
static void *_p_spot__tgba_explicit_succ_iteratorTo_p_spot__tgba_succ_iterator(void *x) {
    return (void *)((spot::tgba_succ_iterator *)  ((spot::tgba_explicit_succ_iterator *) x));
}
static void *_p_spot__tgba_succ_iterator_productTo_p_spot__tgba_succ_iterator(void *x) {
    return (void *)((spot::tgba_succ_iterator *)  ((spot::tgba_succ_iterator_product *) x));
}
static void *_p_spot__ltl__clone_visitorTo_p_spot__ltl__visitor(void *x) {
    return (void *)((spot::ltl::visitor *)  ((spot::ltl::clone_visitor *) x));
}
static void *_p_spot__ltl__unabbreviate_logic_visitorTo_p_spot__ltl__visitor(void *x) {
    return (void *)((spot::ltl::visitor *) (spot::ltl::clone_visitor *) ((spot::ltl::unabbreviate_logic_visitor *) x));
}
static void *_p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__visitor(void *x) {
    return (void *)((spot::ltl::visitor *) (spot::ltl::clone_visitor *)(spot::ltl::unabbreviate_logic_visitor *) ((spot::ltl::unabbreviate_ltl_visitor *) x));
}
static void *_p_spot__ltl__unabbreviate_logic_visitorTo_p_spot__ltl__clone_visitor(void *x) {
    return (void *)((spot::ltl::clone_visitor *)  ((spot::ltl::unabbreviate_logic_visitor *) x));
}
static void *_p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__clone_visitor(void *x) {
    return (void *)((spot::ltl::clone_visitor *) (spot::ltl::unabbreviate_logic_visitor *) ((spot::ltl::unabbreviate_ltl_visitor *) x));
}
static void *_p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__unabbreviate_logic_visitor(void *x) {
    return (void *)((spot::ltl::unabbreviate_logic_visitor *)  ((spot::ltl::unabbreviate_ltl_visitor *) x));
}
static void *_p_spot__state_explicitTo_p_spot__state(void *x) {
    return (void *)((spot::state *)  ((spot::state_explicit *) x));
}
static void *_p_spot__state_bddTo_p_spot__state(void *x) {
    return (void *)((spot::state *)  ((spot::state_bdd *) x));
}
static void *_p_spot__state_productTo_p_spot__state(void *x) {
    return (void *)((spot::state *)  ((spot::state_product *) x));
}
static void *_p_std__ofstreamTo_p_std__ostream(void *x) {
    return (void *)((std::ostream *)  ((std::ofstream *) x));
}
static void *_p_std__ostringstreamTo_p_std__ostream(void *x) {
    return (void *)((std::ostream *)  ((std::ostringstream *) x));
}
static void *_p_spot__ltl__default_environmentTo_p_spot__ltl__environment(void *x) {
    return (void *)((spot::ltl::environment *)  ((spot::ltl::default_environment *) x));
}
static void *_p_spot__ltl__ref_formulaTo_p_spot__ltl__formula(void *x) {
    return (void *)((spot::ltl::formula *)  ((spot::ltl::ref_formula *) x));
}
static void *_p_spot__ltl__atomic_propTo_p_spot__ltl__formula(void *x) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::atomic_prop *) x));
}
static void *_p_spot__ltl__unopTo_p_spot__ltl__formula(void *x) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::unop *) x));
}
static void *_p_spot__ltl__binopTo_p_spot__ltl__formula(void *x) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::binop *) x));
}
static void *_p_spot__ltl__constantTo_p_spot__ltl__formula(void *x) {
    return (void *)((spot::ltl::formula *)  ((spot::ltl::constant *) x));
}
static void *_p_spot__ltl__multopTo_p_spot__ltl__formula(void *x) {
    return (void *)((spot::ltl::formula *) (spot::ltl::ref_formula *) ((spot::ltl::multop *) x));
}
static void *_p_spot__ltl__atomic_propTo_p_spot__ltl__ref_formula(void *x) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::atomic_prop *) x));
}
static void *_p_spot__ltl__unopTo_p_spot__ltl__ref_formula(void *x) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::unop *) x));
}
static void *_p_spot__ltl__binopTo_p_spot__ltl__ref_formula(void *x) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::binop *) x));
}
static void *_p_spot__ltl__multopTo_p_spot__ltl__ref_formula(void *x) {
    return (void *)((spot::ltl::ref_formula *)  ((spot::ltl::multop *) x));
}
static swig_type_info _swigt__p_spot__state_product[] = {{"_p_spot__state_product", 0, "spot::state_product *", 0},{"_p_spot__state_product"},{0}};
static swig_type_info _swigt__p_spot__tgba_succ_iterator_product[] = {{"_p_spot__tgba_succ_iterator_product", 0, "spot::tgba_succ_iterator_product *", 0},{"_p_spot__tgba_succ_iterator_product"},{0}};
static swig_type_info _swigt__p_spot__tgba_product[] = {{"_p_spot__tgba_product", 0, "spot::tgba_product *", 0},{"_p_spot__tgba_product"},{0}};
static swig_type_info _swigt__p_spot__ltl__atomic_prop[] = {{"_p_spot__ltl__atomic_prop", 0, "spot::ltl::atomic_prop *", 0},{"_p_spot__ltl__atomic_prop"},{0}};
static swig_type_info _swigt__p_spot__tgba_succ_iterator_concrete[] = {{"_p_spot__tgba_succ_iterator_concrete", 0, "spot::tgba_succ_iterator_concrete *", 0},{"_p_spot__tgba_succ_iterator_concrete"},{0}};
static swig_type_info _swigt__p_spot__tgba_bdd_concrete[] = {{"_p_spot__tgba_bdd_concrete", 0, "spot::tgba_bdd_concrete *", 0},{"_p_spot__tgba_bdd_concrete"},{0}};
static swig_type_info _swigt__p_spot__bdd_dict[] = {{"_p_spot__bdd_dict", 0, "spot::bdd_dict *", 0},{"_p_spot__bdd_dict"},{0}};
static swig_type_info _swigt__p_spot__ltl__constant[] = {{"_p_spot__ltl__constant", 0, "spot::ltl::constant *", 0},{"_p_spot__ltl__constant"},{0}};
static swig_type_info _swigt__p_spot__bdd_dict__fv_map[] = {{"_p_spot__bdd_dict__fv_map", 0, "spot::bdd_dict::fv_map *", 0},{"_p_spot__bdd_dict__fv_map"},{0}};
static swig_type_info _swigt__p_bdd[] = {{"_p_bdd", 0, "bdd *", 0},{"_p_bdd"},{0}};
static swig_type_info _swigt__p_tgba_bdd_factory[] = {{"_p_tgba_bdd_factory", 0, "tgba_bdd_factory *", 0},{"_p_tgba_bdd_factory"},{0}};
static swig_type_info _swigt__p_spot__magic_search[] = {{"_p_spot__magic_search", 0, "spot::magic_search *", 0},{"_p_spot__magic_search"},{0}};
static swig_type_info _swigt__p_spot__ltl__parse_error_list[] = {{"_p_spot__ltl__parse_error_list", 0, "spot::ltl::parse_error_list *", 0},{"_p_spot__ltl__parse_error_list"},{0}};
static swig_type_info _swigt__p_spot__ltl__multop__vec[] = {{"_p_spot__ltl__multop__vec", 0, "spot::ltl::multop::vec *", 0},{"_p_spot__ltl__multop__vec"},{0}};
static swig_type_info _swigt__p_spot__state_ptr_hash[] = {{"_p_spot__state_ptr_hash", 0, "spot::state_ptr_hash *", 0},{"_p_spot__state_ptr_hash"},{0}};
static swig_type_info _swigt__p_spot__state_ptr_less_than[] = {{"_p_spot__state_ptr_less_than", 0, "spot::state_ptr_less_than *", 0},{"_p_spot__state_ptr_less_than"},{0}};
static swig_type_info _swigt__p_spot__tgba_explicit__transition[] = {{"_p_spot__tgba_explicit__transition", 0, "spot::tgba_explicit::transition *", 0},{"_p_spot__tgba_explicit__transition"},{0}};
static swig_type_info _swigt__p_spot__tgba_tba_proxy[] = {{"_p_spot__tgba_tba_proxy", 0, "spot::tgba_tba_proxy *", 0},{"_p_spot__tgba_tba_proxy"},{0}};
static swig_type_info _swigt__p_spot__state_bdd[] = {{"_p_spot__state_bdd", 0, "spot::state_bdd *", 0},{"_p_spot__state_bdd"},{0}};
static swig_type_info _swigt__p_spot__tgba_bdd_core_data[] = {{"_p_spot__tgba_bdd_core_data", 0, "spot::tgba_bdd_core_data *", 0},{"_p_spot__tgba_bdd_core_data"},{0}};
static swig_type_info _swigt__p_spot__tgba_explicit[] = {{"_p_spot__tgba_explicit", 0, "spot::tgba_explicit *", 0},{"_p_spot__tgba_explicit"},{0}};
static swig_type_info _swigt__p_spot__state_explicit[] = {{"_p_spot__state_explicit", 0, "spot::state_explicit *", 0},{"_p_spot__state_explicit"},{0}};
static swig_type_info _swigt__p_spot__tgba_succ_iterator[] = {{"_p_spot__tgba_succ_iterator", 0, "spot::tgba_succ_iterator *", 0},{"_p_spot__tgba_succ_iterator"},{"_p_spot__tgba_succ_iterator_concrete", _p_spot__tgba_succ_iterator_concreteTo_p_spot__tgba_succ_iterator},{"_p_spot__tgba_explicit_succ_iterator", _p_spot__tgba_explicit_succ_iteratorTo_p_spot__tgba_succ_iterator},{"_p_spot__tgba_succ_iterator_product", _p_spot__tgba_succ_iterator_productTo_p_spot__tgba_succ_iterator},{0}};
static swig_type_info _swigt__p_spot__tgba_explicit_succ_iterator[] = {{"_p_spot__tgba_explicit_succ_iterator", 0, "spot::tgba_explicit_succ_iterator *", 0},{"_p_spot__tgba_explicit_succ_iterator"},{0}};
static swig_type_info _swigt__p_spot__ltl__unabbreviate_ltl_visitor[] = {{"_p_spot__ltl__unabbreviate_ltl_visitor", 0, "spot::ltl::unabbreviate_ltl_visitor *", 0},{"_p_spot__ltl__unabbreviate_ltl_visitor"},{0}};
static swig_type_info _swigt__p_spot__ltl__const_visitor[] = {{"_p_spot__ltl__const_visitor", 0, "spot::ltl::const_visitor *", 0},{"_p_spot__ltl__const_visitor"},{0}};
static swig_type_info _swigt__p_spot__ltl__visitor[] = {{"_p_spot__ltl__visitor", 0, "spot::ltl::visitor *", 0},{"_p_spot__ltl__visitor"},{"_p_spot__ltl__clone_visitor", _p_spot__ltl__clone_visitorTo_p_spot__ltl__visitor},{"_p_spot__ltl__unabbreviate_logic_visitor", _p_spot__ltl__unabbreviate_logic_visitorTo_p_spot__ltl__visitor},{"_p_spot__ltl__unabbreviate_ltl_visitor", _p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__visitor},{0}};
static swig_type_info _swigt__p_spot__ltl__clone_visitor[] = {{"_p_spot__ltl__clone_visitor", 0, "spot::ltl::clone_visitor *", 0},{"_p_spot__ltl__clone_visitor"},{"_p_spot__ltl__unabbreviate_logic_visitor", _p_spot__ltl__unabbreviate_logic_visitorTo_p_spot__ltl__clone_visitor},{"_p_spot__ltl__unabbreviate_ltl_visitor", _p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__clone_visitor},{0}};
static swig_type_info _swigt__p_spot__ltl__unabbreviate_logic_visitor[] = {{"_p_spot__ltl__unabbreviate_logic_visitor", 0, "spot::ltl::unabbreviate_logic_visitor *", 0},{"_p_spot__ltl__unabbreviate_logic_visitor"},{"_p_spot__ltl__unabbreviate_ltl_visitor", _p_spot__ltl__unabbreviate_ltl_visitorTo_p_spot__ltl__unabbreviate_logic_visitor},{0}};
static swig_type_info _swigt__p_visitor[] = {{"_p_visitor", 0, "visitor *", 0},{"_p_visitor"},{0}};
static swig_type_info _swigt__p_const_visitor[] = {{"_p_const_visitor", 0, "const_visitor *", 0},{"_p_const_visitor"},{0}};
static swig_type_info _swigt__p_spot__bdd_dict__vf_map[] = {{"_p_spot__bdd_dict__vf_map", 0, "spot::bdd_dict::vf_map *", 0},{"_p_spot__bdd_dict__vf_map"},{0}};
static swig_type_info _swigt__p_spot__ltl__binop[] = {{"_p_spot__ltl__binop", 0, "spot::ltl::binop *", 0},{"_p_spot__ltl__binop"},{0}};
static swig_type_info _swigt__p_spot__tgba[] = {{"_p_spot__tgba", 0, "spot::tgba *", 0},{"_p_spot__tgba"},{"_p_spot__tgba_explicit", _p_spot__tgba_explicitTo_p_spot__tgba},{"_p_spot__tgba_bdd_concrete", _p_spot__tgba_bdd_concreteTo_p_spot__tgba},{"_p_spot__tgba_product", _p_spot__tgba_productTo_p_spot__tgba},{"_p_spot__tgba_tba_proxy", _p_spot__tgba_tba_proxyTo_p_spot__tgba},{0}};
static swig_type_info _swigt__p_spot__ltl__unop[] = {{"_p_spot__ltl__unop", 0, "spot::ltl::unop *", 0},{"_p_spot__ltl__unop"},{0}};
static swig_type_info _swigt__p_std__ostream[] = {{"_p_std__ostream", 0, "std::ostream *", 0},{"_p_std__ofstream", _p_std__ofstreamTo_p_std__ostream},{"_p_std__ostream"},{"_p_std__ostringstream", _p_std__ostringstreamTo_p_std__ostream},{0}};
static swig_type_info _swigt__p_std__ostringstream[] = {{"_p_std__ostringstream", 0, "std::ostringstream *", 0},{"_p_std__ostringstream"},{0}};
static swig_type_info _swigt__p_spot__state[] = {{"_p_spot__state", 0, "spot::state *", 0},{"_p_spot__state_explicit", _p_spot__state_explicitTo_p_spot__state},{"_p_spot__state"},{"_p_spot__state_bdd", _p_spot__state_bddTo_p_spot__state},{"_p_spot__state_product", _p_spot__state_productTo_p_spot__state},{0}};
static swig_type_info _swigt__p_spot__tgba_explicit__state[] = {{"_p_spot__tgba_explicit__state", 0, "spot::tgba_explicit::state const *", 0},{"_p_spot__tgba_explicit__state"},{0}};
static swig_type_info _swigt__p_spot__ltl__default_environment[] = {{"_p_spot__ltl__default_environment", 0, "spot::ltl::default_environment *", 0},{"_p_spot__ltl__default_environment"},{0}};
static swig_type_info _swigt__p_spot__ltl__environment[] = {{"_p_spot__ltl__environment", 0, "spot::ltl::environment *", 0},{"_p_spot__ltl__environment"},{"_p_spot__ltl__default_environment", _p_spot__ltl__default_environmentTo_p_spot__ltl__environment},{0}};
static swig_type_info _swigt__p_environment[] = {{"_p_environment", 0, "environment *", 0},{"_p_environment"},{0}};
static swig_type_info _swigt__p_bddPair[] = {{"_p_bddPair", 0, "bddPair *", 0},{"_p_bddPair"},{0}};
static swig_type_info _swigt__p_spot__ltl__multop[] = {{"_p_spot__ltl__multop", 0, "spot::ltl::multop *", 0},{"_p_spot__ltl__multop"},{0}};
static swig_type_info _swigt__p_spot__ltl__formula[] = {{"_p_spot__ltl__formula", 0, "spot::ltl::formula *", 0},{"_p_spot__ltl__formula"},{"_p_spot__ltl__ref_formula", _p_spot__ltl__ref_formulaTo_p_spot__ltl__formula},{"_p_spot__ltl__atomic_prop", _p_spot__ltl__atomic_propTo_p_spot__ltl__formula},{"_p_spot__ltl__constant", _p_spot__ltl__constantTo_p_spot__ltl__formula},{"_p_spot__ltl__binop", _p_spot__ltl__binopTo_p_spot__ltl__formula},{"_p_spot__ltl__multop", _p_spot__ltl__multopTo_p_spot__ltl__formula},{"_p_spot__ltl__unop", _p_spot__ltl__unopTo_p_spot__ltl__formula},{0}};
static swig_type_info _swigt__p_spot__ltl__ref_formula[] = {{"_p_spot__ltl__ref_formula", 0, "spot::ltl::ref_formula *", 0},{"_p_spot__ltl__ref_formula"},{"_p_spot__ltl__atomic_prop", _p_spot__ltl__atomic_propTo_p_spot__ltl__ref_formula},{"_p_spot__ltl__binop", _p_spot__ltl__binopTo_p_spot__ltl__ref_formula},{"_p_spot__ltl__multop", _p_spot__ltl__multopTo_p_spot__ltl__ref_formula},{"_p_spot__ltl__unop", _p_spot__ltl__unopTo_p_spot__ltl__ref_formula},{0}};
static swig_type_info _swigt__p_spot__state_ptr_equal[] = {{"_p_spot__state_ptr_equal", 0, "spot::state_ptr_equal *", 0},{"_p_spot__state_ptr_equal"},{0}};
static swig_type_info _swigt__p_std__ofstream[] = {{"_p_std__ofstream", 0, "std::ofstream *", 0},{"_p_std__ofstream"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_spot__state_product, 
_swigt__p_spot__tgba_succ_iterator_product, 
_swigt__p_spot__tgba_product, 
_swigt__p_spot__ltl__atomic_prop, 
_swigt__p_spot__tgba_succ_iterator_concrete, 
_swigt__p_spot__tgba_bdd_concrete, 
_swigt__p_spot__bdd_dict, 
_swigt__p_spot__ltl__constant, 
_swigt__p_spot__bdd_dict__fv_map, 
_swigt__p_bdd, 
_swigt__p_tgba_bdd_factory, 
_swigt__p_spot__magic_search, 
_swigt__p_spot__ltl__parse_error_list, 
_swigt__p_spot__ltl__multop__vec, 
_swigt__p_spot__state_ptr_hash, 
_swigt__p_spot__state_ptr_less_than, 
_swigt__p_spot__tgba_explicit__transition, 
_swigt__p_spot__tgba_tba_proxy, 
_swigt__p_spot__state_bdd, 
_swigt__p_spot__tgba_bdd_core_data, 
_swigt__p_spot__tgba_explicit, 
_swigt__p_spot__state_explicit, 
_swigt__p_spot__tgba_succ_iterator, 
_swigt__p_spot__tgba_explicit_succ_iterator, 
_swigt__p_spot__ltl__unabbreviate_ltl_visitor, 
_swigt__p_spot__ltl__const_visitor, 
_swigt__p_spot__ltl__visitor, 
_swigt__p_spot__ltl__clone_visitor, 
_swigt__p_spot__ltl__unabbreviate_logic_visitor, 
_swigt__p_visitor, 
_swigt__p_const_visitor, 
_swigt__p_spot__bdd_dict__vf_map, 
_swigt__p_spot__ltl__binop, 
_swigt__p_spot__tgba, 
_swigt__p_spot__ltl__unop, 
_swigt__p_std__ostream, 
_swigt__p_std__ostringstream, 
_swigt__p_spot__state, 
_swigt__p_spot__tgba_explicit__state, 
_swigt__p_spot__ltl__default_environment, 
_swigt__p_spot__ltl__environment, 
_swigt__p_environment, 
_swigt__p_bddPair, 
_swigt__p_spot__ltl__multop, 
_swigt__p_spot__ltl__formula, 
_swigt__p_spot__ltl__ref_formula, 
_swigt__p_spot__state_ptr_equal, 
_swigt__p_std__ofstream, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"binop_Xor", (long) spot::ltl::binop::Xor, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"binop_Implies", (long) spot::ltl::binop::Implies, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"binop_Equiv", (long) spot::ltl::binop::Equiv, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"binop_U", (long) spot::ltl::binop::U, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"binop_R", (long) spot::ltl::binop::R, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"constant_False", (long) spot::ltl::constant::False, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"constant_True", (long) spot::ltl::constant::True, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"multop_Or", (long) spot::ltl::multop::Or, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"multop_And", (long) spot::ltl::multop::And, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"unop_Not", (long) spot::ltl::unop::Not, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"unop_X", (long) spot::ltl::unop::X, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"unop_F", (long) spot::ltl::unop::F, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"unop_G", (long) spot::ltl::unop::G, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
}

