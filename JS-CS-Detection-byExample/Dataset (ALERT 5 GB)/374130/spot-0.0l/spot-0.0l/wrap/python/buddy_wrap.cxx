/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.19
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_NOINCLUDE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; } 
    inline SwigValueWrapper& operator=(const T& t) { tt = new T(t); return *this; }
    inline operator T&() const { return *tt; }
    inline T *operator&() { return tt; }
};                                                    
#endif


#include "Python.h"

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;                 
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;	
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;	
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;  /**/
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
	s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;  /**/
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) 
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) 
{
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
     ty = (*ty->dcast)(ptr);
     if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
	if ((strcmp(tc->name, equiv->name) == 0))
	  SWIG_TypeClientData(tc,clientdata);
	tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

#ifdef SWIG_NOINCLUDE

SWIGEXPORT(PyObject *)        SWIG_newvarlink(void);
SWIGEXPORT(void)              SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(int)               SWIG_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(PyObject *)        SWIG_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_InstallConstants(PyObject *d, swig_const_info constants[]);
#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",                      /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
      PyObject *zero = PyInt_FromLong(0);
      PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
      Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
	PyObject *n = PyInt_FromLong(1);
	PyObject_SetAttrString(inst,(char*)"thisown",n);
	Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

#ifdef __cplusplus
}
#endif








/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_FILE swig_types[0] 
#define  SWIGTYPE_p_bddallsathandler swig_types[1] 
#define  SWIGTYPE_p_bdd swig_types[2] 
#define  SWIGTYPE_p_p_int swig_types[3] 
#define  SWIGTYPE_p_int swig_types[4] 
#define  SWIGTYPE_p_bddPair swig_types[5] 
static swig_type_info *swig_types[7];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _buddy.so
  ------------------------------------------------*/
#define SWIG_init    init_buddy

#define SWIG_name    "_buddy"

#define  SWIG_MemoryError    1
#define  SWIG_IOError        2
#define  SWIG_RuntimeError   3
#define  SWIG_IndexError     4
#define  SWIG_TypeError      5
#define  SWIG_DivisionByZero 6
#define  SWIG_OverflowError  7
#define  SWIG_SyntaxError    8
#define  SWIG_ValueError     9
#define  SWIG_SystemError   10
#define  SWIG_UnknownError  99


static void _SWIG_exception(int code, const char *msg) {
  switch(code) {
  case SWIG_MemoryError:
    PyErr_SetString(PyExc_MemoryError,msg);
    break;
  case SWIG_IOError:
    PyErr_SetString(PyExc_IOError,msg);
    break;
  case SWIG_RuntimeError:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  case SWIG_IndexError:
    PyErr_SetString(PyExc_IndexError,msg);
    break;
  case SWIG_TypeError:
    PyErr_SetString(PyExc_TypeError,msg);
    break;
  case SWIG_DivisionByZero:
    PyErr_SetString(PyExc_ZeroDivisionError,msg);
    break;
  case SWIG_OverflowError:
    PyErr_SetString(PyExc_OverflowError,msg);
    break;
  case SWIG_SyntaxError:
    PyErr_SetString(PyExc_SyntaxError,msg);
    break;
  case SWIG_ValueError:
    PyErr_SetString(PyExc_ValueError,msg);
    break;
  case SWIG_SystemError:
    PyErr_SetString(PyExc_SystemError,msg);
    break;
  default:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  }
}

#define SWIG_exception(a,b) { _SWIG_exception(a,b); SWIG_fail; }


#include <string>


#include <sstream>
#include "bdd.h"

int bdd___cmp__(bdd *self,bdd *b){
    return b->id() - self->id();
  }
std::string bdd___str__(bdd *self){
    std::ostringstream res;
    res << "bdd(id=" << self->id() << ")";
    return res.str();
  }
bdd bdd___and__(bdd *self,bdd &other){ return *self & other; }
bdd bdd___xor__(bdd *self,bdd &other){ return *self ^ other; }
bdd bdd___or__(bdd *self,bdd &other){ return *self | other; }
bdd bdd___rshift__(bdd *self,bdd &other){ return *self >> other; }
bdd bdd___lshift__(bdd *self,bdd &other){ return *self << other; }
bdd bdd___sub__(bdd *self,bdd &other){ return *self - other; }
bdd bdd___neg__(bdd *self){ return !*self; }
extern bdd const bddfalse;
extern bdd const bddtrue;
#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_bdd_id(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_id",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((bdd const *)arg1)->id();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___cmp__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = (bdd *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___cmp__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)bdd___cmp__(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___str__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    std::string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd___str__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = bdd___str__(arg1);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___and__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___and__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd___and__(arg1,*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___xor__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___xor__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd___xor__(arg1,*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___or__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___or__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd___or__(arg1,*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___rshift__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___rshift__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd___rshift__(arg1,*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___lshift__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___lshift__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd___lshift__(arg1,*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd___sub__(arg1,*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd___neg__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd___neg__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = bdd___neg__(arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_bdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_bdd")) goto fail;
    result = (bdd *)new bdd();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_bdd, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_bdd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = (bdd *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_bdd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * bdd_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_bdd, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_bdd_init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:bdd_init",&arg1,&arg2)) goto fail;
    result = (int)bdd_init(arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_done")) goto fail;
    bdd_done();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_setvarnum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_setvarnum",&arg1)) goto fail;
    result = (int)bdd_setvarnum(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_extvarnum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_extvarnum",&arg1)) goto fail;
    result = (int)bdd_extvarnum(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_isrunning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_isrunning")) goto fail;
    result = (int)bdd_isrunning();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_setmaxnodenum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_setmaxnodenum",&arg1)) goto fail;
    result = (int)bdd_setmaxnodenum(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_setmaxincrease(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_setmaxincrease",&arg1)) goto fail;
    result = (int)bdd_setmaxincrease(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_setminfreenodes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_setminfreenodes",&arg1)) goto fail;
    result = (int)bdd_setminfreenodes(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_getnodenum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_getnodenum")) goto fail;
    result = (int)bdd_getnodenum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_getallocnum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_getallocnum")) goto fail;
    result = (int)bdd_getallocnum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_versionstr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *result;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_versionstr")) goto fail;
    result = (char *)bdd_versionstr();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_versionnum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_versionnum")) goto fail;
    result = (int)bdd_versionnum();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fprintstat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    FILE *arg1 = (FILE *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_fprintstat",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_FILE,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    bdd_fprintstat(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_printstat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_printstat")) goto fail;
    bdd_printstat();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_errstring(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    char *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_errstring",&arg1)) goto fail;
    result = (char *)bdd_errstring(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_clear_error(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":bdd_clear_error")) goto fail;
    bdd_clear_error();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_ithvar(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    bdd result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_ithvar",&arg1)) goto fail;
    result = bdd_ithvar(arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_nithvar(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    bdd result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:bdd_nithvar",&arg1)) goto fail;
    result = bdd_nithvar(arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_var(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_var",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_var((bdd const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_low(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_low",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_low((bdd const &)*arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_high(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_high",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_high((bdd const &)*arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_scanset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    int **arg2 = 0 ;
    int *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_scanset",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_scanset((bdd const &)*arg1,*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_makeset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int *arg1 = (int *) 0 ;
    int arg2 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:bdd_makeset",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = bdd_makeset(arg1,arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_setbddpair(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bddPair *arg1 = (bddPair *) 0 ;
    int arg2 ;
    bdd *arg3 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OiO:bdd_setbddpair",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bddPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_setbddpair(arg1,arg2,(bdd const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_replace(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bddPair *arg2 = (bddPair *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_replace",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bddPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = bdd_replace((bdd const &)*arg1,arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_compose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:bdd_compose",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_compose((bdd const &)*arg1,(bdd const &)*arg2,arg3);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_veccompose(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bddPair *arg2 = (bddPair *) 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_veccompose",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bddPair,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = bdd_veccompose((bdd const &)*arg1,arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_restrict(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_restrict",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_restrict((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_constrain(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_constrain",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_constrain((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_simplify(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_simplify",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_simplify((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_ibuildcube(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int *arg3 = (int *) 0 ;
    bdd result;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iiO:bdd_ibuildcube",&arg1,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = bdd_ibuildcube(arg1,arg2,arg3);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_not(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_not",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_not((bdd const &)*arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_apply(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:bdd_apply",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_apply((bdd const &)*arg1,(bdd const &)*arg2,arg3);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_and(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_and",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_and((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_or(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_or",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_or((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_xor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_xor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_xor((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_imp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_imp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_imp((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_biimp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_biimp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_biimp((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_ite(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd *arg3 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_ite",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_ite((bdd const &)*arg1,(bdd const &)*arg2,(bdd const &)*arg3);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_exist(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_exist",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_exist((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_existcomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_existcomp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_existcomp((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_forall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_forall",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_forall((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_forallcomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_forallcomp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_forallcomp((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_unique(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_unique",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_unique((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_uniquecomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_uniquecomp",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_uniquecomp((bdd const &)*arg1,(bdd const &)*arg2);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_appex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd *arg4 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:bdd_appex",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_appex((bdd const &)*arg1,(bdd const &)*arg2,arg3,(bdd const &)*arg4);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_appexcomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd *arg4 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:bdd_appexcomp",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_appexcomp((bdd const &)*arg1,(bdd const &)*arg2,arg3,(bdd const &)*arg4);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_appall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd *arg4 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:bdd_appall",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_appall((bdd const &)*arg1,(bdd const &)*arg2,arg3,(bdd const &)*arg4);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_appallcomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd *arg4 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:bdd_appallcomp",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_appallcomp((bdd const &)*arg1,(bdd const &)*arg2,arg3,(bdd const &)*arg4);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_appuni(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd *arg4 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:bdd_appuni",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_appuni((bdd const &)*arg1,(bdd const &)*arg2,arg3,(bdd const &)*arg4);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_appunicomp(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    int arg3 ;
    bdd *arg4 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiO:bdd_appunicomp",&obj0,&obj1,&arg3,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_appunicomp((bdd const &)*arg1,(bdd const &)*arg2,arg3,(bdd const &)*arg4);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_support(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_support",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_support((bdd const &)*arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_satone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_satone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_satone((bdd const &)*arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_satoneset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    bdd *arg3 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:bdd_satoneset",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_satoneset((bdd const &)*arg1,(bdd const &)*arg2,(bdd const &)*arg3);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fullsatone(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_fullsatone",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = bdd_fullsatone((bdd const &)*arg1);
    
    {
        bdd * resultptr;
        resultptr = new bdd((bdd &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_bdd, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_allsat(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bddallsathandler arg2 ;
    bddallsathandler *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_allsat",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_bddallsathandler,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    bdd_allsat((bdd const &)*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_satcount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_satcount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (double)bdd_satcount((bdd const &)*arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_satcountset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    double result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_satcountset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (double)bdd_satcountset((bdd const &)*arg1,(bdd const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_satcountln(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_satcountln",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (double)bdd_satcountln((bdd const &)*arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_satcountlnset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    bdd *arg2 = 0 ;
    double result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_satcountlnset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (double)bdd_satcountlnset((bdd const &)*arg1,(bdd const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_nodecount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_nodecount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_nodecount((bdd const &)*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_varprofile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    int *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_varprofile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int *)bdd_varprofile((bdd const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_int, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_pathcount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_pathcount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (double)bdd_pathcount((bdd const &)*arg1);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fprinttable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    FILE *arg1 = (FILE *) 0 ;
    bdd *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_fprinttable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_FILE,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    bdd_fprinttable(arg1,(bdd const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_printtable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_printtable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    bdd_printtable((bdd const &)*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fprintset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    FILE *arg1 = (FILE *) 0 ;
    bdd *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_fprintset",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_FILE,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    bdd_fprintset(arg1,(bdd const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_printset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_printset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    bdd_printset((bdd const &)*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_printdot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:bdd_printdot",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    bdd_printdot((bdd const &)*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fprintdot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    FILE *arg1 = (FILE *) 0 ;
    bdd *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_fprintdot",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_FILE,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    bdd_fprintdot(arg1,(bdd const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fnprintdot(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    bdd *arg2 = 0 ;
    int result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:bdd_fnprintdot",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_fnprintdot(arg1,(bdd const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fnsave(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    bdd *arg2 = 0 ;
    int result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:bdd_fnsave",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_fnsave(arg1,(bdd const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_save(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    FILE *arg1 = (FILE *) 0 ;
    bdd *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_save",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_FILE,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_save(arg1,(bdd const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_fnload(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    bdd *arg2 = 0 ;
    int result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:bdd_fnload",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_fnload(arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    FILE *arg1 = (FILE *) 0 ;
    bdd *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bdd_load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_FILE,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_load(arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bdd_addvarblock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bdd *arg1 = 0 ;
    int arg2 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:bdd_addvarblock",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_bdd,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)bdd_addvarblock((bdd const &)*arg1,arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_bddfalse_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable bddfalse is read-only.");
    return 1;
}


static PyObject *_wrap_bddfalse_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &bddfalse, SWIGTYPE_p_bdd, 0);
    return pyobj;
}


static int _wrap_bddtrue_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable bddtrue is read-only.");
    return 1;
}


static PyObject *_wrap_bddtrue_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) &bddtrue, SWIGTYPE_p_bdd, 0);
    return pyobj;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"bdd_id", _wrap_bdd_id, METH_VARARGS },
	 { (char *)"bdd___cmp__", _wrap_bdd___cmp__, METH_VARARGS },
	 { (char *)"bdd___str__", _wrap_bdd___str__, METH_VARARGS },
	 { (char *)"bdd___and__", _wrap_bdd___and__, METH_VARARGS },
	 { (char *)"bdd___xor__", _wrap_bdd___xor__, METH_VARARGS },
	 { (char *)"bdd___or__", _wrap_bdd___or__, METH_VARARGS },
	 { (char *)"bdd___rshift__", _wrap_bdd___rshift__, METH_VARARGS },
	 { (char *)"bdd___lshift__", _wrap_bdd___lshift__, METH_VARARGS },
	 { (char *)"bdd___sub__", _wrap_bdd___sub__, METH_VARARGS },
	 { (char *)"bdd___neg__", _wrap_bdd___neg__, METH_VARARGS },
	 { (char *)"new_bdd", _wrap_new_bdd, METH_VARARGS },
	 { (char *)"delete_bdd", _wrap_delete_bdd, METH_VARARGS },
	 { (char *)"bdd_swigregister", bdd_swigregister, METH_VARARGS },
	 { (char *)"bdd_init", _wrap_bdd_init, METH_VARARGS },
	 { (char *)"bdd_done", _wrap_bdd_done, METH_VARARGS },
	 { (char *)"bdd_setvarnum", _wrap_bdd_setvarnum, METH_VARARGS },
	 { (char *)"bdd_extvarnum", _wrap_bdd_extvarnum, METH_VARARGS },
	 { (char *)"bdd_isrunning", _wrap_bdd_isrunning, METH_VARARGS },
	 { (char *)"bdd_setmaxnodenum", _wrap_bdd_setmaxnodenum, METH_VARARGS },
	 { (char *)"bdd_setmaxincrease", _wrap_bdd_setmaxincrease, METH_VARARGS },
	 { (char *)"bdd_setminfreenodes", _wrap_bdd_setminfreenodes, METH_VARARGS },
	 { (char *)"bdd_getnodenum", _wrap_bdd_getnodenum, METH_VARARGS },
	 { (char *)"bdd_getallocnum", _wrap_bdd_getallocnum, METH_VARARGS },
	 { (char *)"bdd_versionstr", _wrap_bdd_versionstr, METH_VARARGS },
	 { (char *)"bdd_versionnum", _wrap_bdd_versionnum, METH_VARARGS },
	 { (char *)"bdd_fprintstat", _wrap_bdd_fprintstat, METH_VARARGS },
	 { (char *)"bdd_printstat", _wrap_bdd_printstat, METH_VARARGS },
	 { (char *)"bdd_errstring", _wrap_bdd_errstring, METH_VARARGS },
	 { (char *)"bdd_clear_error", _wrap_bdd_clear_error, METH_VARARGS },
	 { (char *)"bdd_ithvar", _wrap_bdd_ithvar, METH_VARARGS },
	 { (char *)"bdd_nithvar", _wrap_bdd_nithvar, METH_VARARGS },
	 { (char *)"bdd_var", _wrap_bdd_var, METH_VARARGS },
	 { (char *)"bdd_low", _wrap_bdd_low, METH_VARARGS },
	 { (char *)"bdd_high", _wrap_bdd_high, METH_VARARGS },
	 { (char *)"bdd_scanset", _wrap_bdd_scanset, METH_VARARGS },
	 { (char *)"bdd_makeset", _wrap_bdd_makeset, METH_VARARGS },
	 { (char *)"bdd_setbddpair", _wrap_bdd_setbddpair, METH_VARARGS },
	 { (char *)"bdd_replace", _wrap_bdd_replace, METH_VARARGS },
	 { (char *)"bdd_compose", _wrap_bdd_compose, METH_VARARGS },
	 { (char *)"bdd_veccompose", _wrap_bdd_veccompose, METH_VARARGS },
	 { (char *)"bdd_restrict", _wrap_bdd_restrict, METH_VARARGS },
	 { (char *)"bdd_constrain", _wrap_bdd_constrain, METH_VARARGS },
	 { (char *)"bdd_simplify", _wrap_bdd_simplify, METH_VARARGS },
	 { (char *)"bdd_ibuildcube", _wrap_bdd_ibuildcube, METH_VARARGS },
	 { (char *)"bdd_not", _wrap_bdd_not, METH_VARARGS },
	 { (char *)"bdd_apply", _wrap_bdd_apply, METH_VARARGS },
	 { (char *)"bdd_and", _wrap_bdd_and, METH_VARARGS },
	 { (char *)"bdd_or", _wrap_bdd_or, METH_VARARGS },
	 { (char *)"bdd_xor", _wrap_bdd_xor, METH_VARARGS },
	 { (char *)"bdd_imp", _wrap_bdd_imp, METH_VARARGS },
	 { (char *)"bdd_biimp", _wrap_bdd_biimp, METH_VARARGS },
	 { (char *)"bdd_ite", _wrap_bdd_ite, METH_VARARGS },
	 { (char *)"bdd_exist", _wrap_bdd_exist, METH_VARARGS },
	 { (char *)"bdd_existcomp", _wrap_bdd_existcomp, METH_VARARGS },
	 { (char *)"bdd_forall", _wrap_bdd_forall, METH_VARARGS },
	 { (char *)"bdd_forallcomp", _wrap_bdd_forallcomp, METH_VARARGS },
	 { (char *)"bdd_unique", _wrap_bdd_unique, METH_VARARGS },
	 { (char *)"bdd_uniquecomp", _wrap_bdd_uniquecomp, METH_VARARGS },
	 { (char *)"bdd_appex", _wrap_bdd_appex, METH_VARARGS },
	 { (char *)"bdd_appexcomp", _wrap_bdd_appexcomp, METH_VARARGS },
	 { (char *)"bdd_appall", _wrap_bdd_appall, METH_VARARGS },
	 { (char *)"bdd_appallcomp", _wrap_bdd_appallcomp, METH_VARARGS },
	 { (char *)"bdd_appuni", _wrap_bdd_appuni, METH_VARARGS },
	 { (char *)"bdd_appunicomp", _wrap_bdd_appunicomp, METH_VARARGS },
	 { (char *)"bdd_support", _wrap_bdd_support, METH_VARARGS },
	 { (char *)"bdd_satone", _wrap_bdd_satone, METH_VARARGS },
	 { (char *)"bdd_satoneset", _wrap_bdd_satoneset, METH_VARARGS },
	 { (char *)"bdd_fullsatone", _wrap_bdd_fullsatone, METH_VARARGS },
	 { (char *)"bdd_allsat", _wrap_bdd_allsat, METH_VARARGS },
	 { (char *)"bdd_satcount", _wrap_bdd_satcount, METH_VARARGS },
	 { (char *)"bdd_satcountset", _wrap_bdd_satcountset, METH_VARARGS },
	 { (char *)"bdd_satcountln", _wrap_bdd_satcountln, METH_VARARGS },
	 { (char *)"bdd_satcountlnset", _wrap_bdd_satcountlnset, METH_VARARGS },
	 { (char *)"bdd_nodecount", _wrap_bdd_nodecount, METH_VARARGS },
	 { (char *)"bdd_varprofile", _wrap_bdd_varprofile, METH_VARARGS },
	 { (char *)"bdd_pathcount", _wrap_bdd_pathcount, METH_VARARGS },
	 { (char *)"bdd_fprinttable", _wrap_bdd_fprinttable, METH_VARARGS },
	 { (char *)"bdd_printtable", _wrap_bdd_printtable, METH_VARARGS },
	 { (char *)"bdd_fprintset", _wrap_bdd_fprintset, METH_VARARGS },
	 { (char *)"bdd_printset", _wrap_bdd_printset, METH_VARARGS },
	 { (char *)"bdd_printdot", _wrap_bdd_printdot, METH_VARARGS },
	 { (char *)"bdd_fprintdot", _wrap_bdd_fprintdot, METH_VARARGS },
	 { (char *)"bdd_fnprintdot", _wrap_bdd_fnprintdot, METH_VARARGS },
	 { (char *)"bdd_fnsave", _wrap_bdd_fnsave, METH_VARARGS },
	 { (char *)"bdd_save", _wrap_bdd_save, METH_VARARGS },
	 { (char *)"bdd_fnload", _wrap_bdd_fnload, METH_VARARGS },
	 { (char *)"bdd_load", _wrap_bdd_load, METH_VARARGS },
	 { (char *)"bdd_addvarblock", _wrap_bdd_addvarblock, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_FILE[] = {{"_p_FILE", 0, "FILE *", 0},{"_p_FILE"},{0}};
static swig_type_info _swigt__p_bddallsathandler[] = {{"_p_bddallsathandler", 0, "bddallsathandler *", 0},{"_p_bddallsathandler"},{0}};
static swig_type_info _swigt__p_bdd[] = {{"_p_bdd", 0, "bdd *", 0},{"_p_bdd"},{0}};
static swig_type_info _swigt__p_p_int[] = {{"_p_p_int", 0, "int **", 0},{"_p_p_int"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_p_int"},{0}};
static swig_type_info _swigt__p_bddPair[] = {{"_p_bddPair", 0, "bddPair *", 0},{"_p_bddPair"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_FILE, 
_swigt__p_bddallsathandler, 
_swigt__p_bdd, 
_swigt__p_p_int, 
_swigt__p_int, 
_swigt__p_bddPair, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"bddop_and", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_xor", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_or", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_nand", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_nor", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_imp", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_biimp", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_diff", (long) 7, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_less", (long) 8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"bddop_invimp", (long) 9, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_NONE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_WIN2", (long) 1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_WIN2ITE", (long) 2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_SIFT", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_SIFTITE", (long) 4, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_WIN3", (long) 5, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_WIN3ITE", (long) 6, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BDD_REORDER_RANDOM", (long) 7, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"bddfalse",_wrap_bddfalse_get, _wrap_bddfalse_set);
    SWIG_addvarlink(SWIG_globals,(char*)"bddtrue",_wrap_bddtrue_get, _wrap_bddtrue_set);
}

