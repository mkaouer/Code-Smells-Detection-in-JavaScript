# Makefile for pwsafe under win32
#------------------------------------------------------------------------

PLATFORM=win32
#MAKEDEBUG=y

### The Microsoft toolset
CC=cl.exe
CXX=cl.exe
LINK=link.exe
AR=link.exe -lib
RC=rc.exe
# note - this is not usually around, but you should be able to find one
RM=rm.exe

CXXFLAGS=$(DEBUG) $(DEFINES) $(OPTIONS) $(TEST) $(INCLUDES)
CFLAGS=$(DEBUG) $(DEFINES) $(OPTIONS) $(TEST) $(INCLUDES)

ifndef TEMP
TEMP=c:\\temp
endif

.SUFFIXES:
.SUFFIXES: .cpp .c .o

%.obj : %.c
	$(CC) /c $(CFLAGS) $< /Fo$@

%.obj : %.cpp
	$(CXX) /c $(CXXFLAGS) $< /Fo$@

THE_APP=pwsafe.exe

TARGETS=$(THE_APP)

SOURCE_FILES=
#SOURCE_FILES+=AddBackupDlg.cpp
SOURCE_FILES+=AddDlg.cpp
#SOURCE_FILES+=BackupDlg.cpp
SOURCE_FILES+=BlowFish.cpp
SOURCE_FILES+=ClearQuestionDlg.cpp
SOURCE_FILES+=ConfirmDeleteDlg.cpp
#SOURCE_FILES+=CryptKeyEntry.cpp
SOURCE_FILES+=EditDlg.cpp
#SOURCE_FILES+=FileDialogExt.cpp
SOURCE_FILES+=ItemData.cpp
SOURCE_FILES+=MyString.cpp
SOURCE_FILES+=OptionsDlg.cpp
SOURCE_FILES+=PasskeyChangeDlg.cpp
SOURCE_FILES+=PasskeyEntry.cpp
SOURCE_FILES+=PasskeySetup.cpp
#SOURCE_FILES+=PasswordSafe.cpp
SOURCE_FILES+=DboxMain.cpp
SOURCE_FILES+=QueryAddName.cpp
SOURCE_FILES+=QuerySetDef.cpp
SOURCE_FILES+=RemindSaveDlg.cpp
SOURCE_FILES+=sha1.cpp
#SOURCE_FILES+=StdAfx.cpp
SOURCE_FILES+=SysColStatic.cpp
SOURCE_FILES+=ThisMfcApp.cpp
SOURCE_FILES+=TryAgainDlg.cpp
SOURCE_FILES+=UsernameEntry.cpp
SOURCE_FILES+=Util.cpp
#SOURCE_FILES+=variables.cpp

OBJECT_FILES = ${SOURCE_FILES:.cpp=.obj}

### Build Parameters
INCLUDES= 

OPTIONS=
# OPTIONS+=/ML # create single-threaded exe, using LIBC.LIB
# OPTIONS+=/MT # create multi-threaded exe, using LIBCMT.LIB
ifeq ($(MAKEDEBUG),y)
OPTIONS+=/MTd # create debug multithreaded exe, using LIBCMT.LIB
OPTIONS+=/ZI # debug info in program database (Edit and Continue)
OPTIONS+=/Od # disable optimization
OPTIONS+=/Gm # enable minimal rebuild
else
OPTIONS+=/MT # multithread
#OPTIONS+=/MD # multithread DLL
OPTIONS+=/O2 # optimize for speed
endif
OPTIONS+=/W3 # warning level
OPTIONS+=/GX # synchronous exception handling
# OPTIONS+=/FD # generate dependencies
# OPTIONS+=/GZ # catch release-build errors in debug build

DEFINES+=/DWIN32
ifeq ($(MAKEDEBUG),y)
DEFINES+=/DDEBUG
DEFINES+=/D_DEBUG
else
DEFINES+=/DNDEBUG
endif
DEFINES+=/DJPRDEBUG
#DEFINES+=/D_CONSOLE
DEFINES+=/D_MBCS
DEFINES+=/D_WINDOWS
#DEFINES+=/D_AFXDLL

#debug
LDSPECS=
LDSPECS += ws2_32.lib
LDSPECS += kernel32.lib
LDSPECS += user32.lib
LDSPECS += gdi32.lib
LDSPECS += winspool.lib
LDSPECS += comdlg32.lib
LDSPECS += advapi32.lib
LDSPECS += shell32.lib
LDSPECS += ole32.lib
LDSPECS += oleaut32.lib
LDSPECS += uuid.lib
LDSPECS += odbc32.lib
LDSPECS += odbccp32.lib
LDSPECS += htmlhelp.lib

#LDOPTIONS+=/subsystem:console 
LDOPTIONS+=/subsystem:windows
LDOPTIONS+=/incremental:yes 
#LDOPTIONS+=/incremental:no
ifeq ($(MAKEDEBUG),y)
LDOPTIONS+=/debug 
endif
LDOPTIONS+=/machine:I386 
LDOPTIONS+=/out:$(THE_APP)

#LDPATHS+=/libpath:"/some/lib/path"

LDFLAGS = $(LDOPTIONS) $(LDPATHS) $(LDSPECS)

RESFILE = PasswordSafe.res

all: $(TARGETS)

$(THE_APP): $(RESFILE) $(OBJECT_FILES)
	$(LINK) /out:$@ $(LDFLAGS) $(OBJECT_FILES) $(RESFILE)

PasswordSafe.res: PasswordSafe.rc
	$(RC) /fo$@ $(DEFINES) $<

install: all

clean:
	-@erase *.obj
	-@erase $(THE_APP)
	-@erase *.res
