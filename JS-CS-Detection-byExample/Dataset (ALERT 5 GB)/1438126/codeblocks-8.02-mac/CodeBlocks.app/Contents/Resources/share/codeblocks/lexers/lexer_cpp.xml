<?xml version="1.0"?>
<!DOCTYPE CodeBlocks_lexer_properties>
<CodeBlocks_lexer_properties>
		<Lexer name="C/C++"
				index="3"
				filemasks="*.c,*.cpp,*.cc,*.cxx,*.h,*.hpp,*.hh,*.hxx,*.inl">
				<Style name="Default"
						index="0"
						fg="0,0,0"
						bg="255,255,255"
						bold="0"
						italics="0"
						underlined="0"/>
				<Style name="Comment (normal)"
						index="1,2"
						fg="160,160,160"/>
				<Style name="Comment (documentation)"
						index="3,15"
						fg="128,128,255"
						bold="1"/>
				<Style name="Comment keyword (documentation)"
						index="17"
						fg="0,128,128"/>
				<Style name="Comment keyword error (documentation)"
						index="18"
						fg="128,0,0"/>
				<Style name="Number"
						index="4"
						fg="240,0,240"/>
				<Style name="Keyword"
						index="5"
						fg="0,0,160"
						bold="1"/>
				<Style name="User keyword"
						index="16"
						fg="0,160,0"
						bold="1"/>
				<Style name="String"
						index="6,12"
						fg="0,0,255"/>
				<Style name="Character"
						index="7"
						fg="224,160,0"/>
				<Style name="UUID"
						index="8"
						fg="0,0,0"/>
				<Style name="Preprocessor"
						index="9"
						fg="0,160,0"/>
				<Style name="Operator"
						index="10"
						fg="255,0,0"/>
				<Style name="Selection"
						index="-99"
						bg="192,192,192"/>
				<Style name="Active line"
						index="-98"
						bg="255,255,160"/>
				<Style name="Breakpoint line"
						index="-2"
						bg="255,160,160"/>
				<Style name="Debugger active line"
						index="-3"
						bg="160,160,255"/>
				<Style name="Compiler error line"
						index="-4"
						bg="255,128,0"/>
				<Style name="Matching brace highlight"
						index="34"
						bg="128,255,255"
						bold="1"/>
				<Style name="No matching brace highlight"
						index="35"
						fg="255,255,255"
						bg="255,0,0"
						bold="1"/>
				<Keywords>
                        <!-- Primary keywords and identifiers -->
                        <Set index="0"
                            value="asm auto bool break case catch char class const
                                   const_cast continue default delete do double
                                   dynamic_cast else enum explicit export extern
                                   false float for friend goto if inline int long
                                   mutable namespace new operator private protected
                                   public register reinterpret_cast restrict return short signed
                                   sizeof static static_cast struct switch template this
                                   throw true try typedef typeid typename union unsigned
                                   using virtual void volatile while

                                   int8_t uint8_t int16_t uint16_t int32_t uint32_t int64_t uint64_t
                                   int_least8_t uint_least8_t int_least16_t uint_least16_t
                                   int_least32_t uint_least32_t int_least64_t uint_least64_t
                                   int_fast8_t uint_fast8_t int_fast16_t uint_fast16_t
                                   int_fast32_t uint_fast32_t int_fast64_t uint_fast64_t
                                   intptr_t uintptr_t intmax_t uintmax_t
                                   wint_t wchar_t wctrans_t wctype_t size_t time_t
                                   and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq
                                   complex imaginary _Complex _Imaginary _Bool _Pragma"/>
                        <!-- Secondary keywords and identifiers -->
                        <Set index="1"
                            value=""/>
                        <!-- Documentation comment keywords -->
						<Set index="2"
                            value="a addindex addtogroup anchor arg attention
                                   author b brief bug c class code date def defgroup deprecated
                                   dontinclude e em endcode endhtmlonly endif endlatexonly endlink
                                   endverbatim enum example exception f$ f[ f] file fn
                                   hideinitializer htmlinclude htmlonly if image include ingroup
                                   internal invariant interface latexonly li line link mainpage name
                                   namespace nosubgrouping note overload p page par param post pre
                                   ref relates remarks return retval sa section see showinitializer
                                   since skip skipline struct subsection test throw todo typedef
                                   union until var verbatim verbinclude version warning weakgroup
                                   $ @ \ & < > # { }"/>
				</Keywords>
				<SampleCode value="lexer_cpp.sample"
						breakpoint_line="20"
						debug_line="22"
						error_line="23"/>
		</Lexer>
</CodeBlocks_lexer_properties>
