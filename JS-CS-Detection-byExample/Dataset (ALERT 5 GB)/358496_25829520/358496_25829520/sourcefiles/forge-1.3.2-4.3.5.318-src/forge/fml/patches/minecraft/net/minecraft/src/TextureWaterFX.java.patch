--- ../src-base/minecraft/net/minecraft/src/TextureWaterFX.java
+++ ../src-work/minecraft/net/minecraft/src/TextureWaterFX.java
@@ -1,10 +1,11 @@
 package net.minecraft.src;
 
+import cpw.mods.fml.client.FMLTextureFX;
 import cpw.mods.fml.common.Side;
 import cpw.mods.fml.common.asm.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class TextureWaterFX extends TextureFX
+public class TextureWaterFX extends FMLTextureFX
 {
     protected float[] field_76855_g = new float[256];
     protected float[] field_76858_h = new float[256];
@@ -15,8 +16,20 @@
     public TextureWaterFX()
     {
         super(Block.field_71942_A.field_72059_bZ);
+        setup();
     }
 
+    @Override
+    public void setup()
+    {
+        super.setup();
+        field_76855_g = new float[tileSizeSquare];
+        field_76858_h = new float[tileSizeSquare];
+        field_76859_i = new float[tileSizeSquare];
+        field_76856_j = new float[tileSizeSquare];
+        field_76857_k = 0;
+    }
+    
     public void func_76846_a()
     {
         ++this.field_76857_k;
@@ -26,39 +39,39 @@
         int var5;
         int var6;
 
-        for (var1 = 0; var1 < 16; ++var1)
+        for (var1 = 0; var1 < tileSizeBase; ++var1)
         {
-            for (var2 = 0; var2 < 16; ++var2)
+            for (var2 = 0; var2 < tileSizeBase; ++var2)
             {
                 var3 = 0.0F;
 
                 for (int var4 = var1 - 1; var4 <= var1 + 1; ++var4)
                 {
-                    var5 = var4 & 15;
-                    var6 = var2 & 15;
-                    var3 += this.field_76855_g[var5 + var6 * 16];
+                    var5 = var4 & tileSizeMask;
+                    var6 = var2 & tileSizeMask;
+                    var3 += this.field_76855_g[var5 + var6 * tileSizeBase];
                 }
 
-                this.field_76858_h[var1 + var2 * 16] = var3 / 3.3F + this.field_76859_i[var1 + var2 * 16] * 0.8F;
+                this.field_76858_h[var1 + var2 * tileSizeBase] = var3 / 3.3F + this.field_76859_i[var1 + var2 * tileSizeBase] * 0.8F;
             }
         }
 
-        for (var1 = 0; var1 < 16; ++var1)
+        for (var1 = 0; var1 < tileSizeBase; ++var1)
         {
-            for (var2 = 0; var2 < 16; ++var2)
+            for (var2 = 0; var2 < tileSizeBase; ++var2)
             {
-                this.field_76859_i[var1 + var2 * 16] += this.field_76856_j[var1 + var2 * 16] * 0.05F;
+                this.field_76859_i[var1 + var2 * tileSizeBase] += this.field_76856_j[var1 + var2 * tileSizeBase] * 0.05F;
 
-                if (this.field_76859_i[var1 + var2 * 16] < 0.0F)
+                if (this.field_76859_i[var1 + var2 * tileSizeBase] < 0.0F)
                 {
-                    this.field_76859_i[var1 + var2 * 16] = 0.0F;
+                    this.field_76859_i[var1 + var2 * tileSizeBase] = 0.0F;
                 }
 
-                this.field_76856_j[var1 + var2 * 16] -= 0.1F;
+                this.field_76856_j[var1 + var2 * tileSizeBase] -= 0.1F;
 
                 if (Math.random() < 0.05D)
                 {
-                    this.field_76856_j[var1 + var2 * 16] = 0.5F;
+                    this.field_76856_j[var1 + var2 * tileSizeBase] = 0.5F;
                 }
             }
         }
@@ -67,7 +80,7 @@
         this.field_76858_h = this.field_76855_g;
         this.field_76855_g = var12;
 
-        for (var2 = 0; var2 < 256; ++var2)
+        for (var2 = 0; var2 < tileSizeSquare; ++var2)
         {
             var3 = this.field_76855_g[var2];
 
