--- ../src_base/minecraft/net/minecraft/src/TileEntityFurnace.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/TileEntityFurnace.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,7 +1,9 @@
 package net.minecraft.src;
 
+import net.minecraft.src.forge.ISidedInventory;
+
 public class TileEntityFurnace extends TileEntity
-    implements IInventory
+    implements IInventory, ISidedInventory
 {
     private ItemStack furnaceItemStacks[];
     public int furnaceBurnTime;
@@ -21,6 +23,20 @@
         return furnaceItemStacks.length;
     }
 
+    @Override
+    public int getStartInventorySide(int side) 
+    {
+	    if (side == 0) return 1;
+	    if (side == 1) return 0;
+	    return 2;
+    }
+
+    @Override
+    public int getSizeInventorySide(int side) 
+    {
+	    return 1;
+    }
+
     public ItemStack getStackInSlot(int i)
     {
         return furnaceItemStacks[i];
@@ -192,7 +208,7 @@
         {
             return false;
         }
-        ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0].getItem().shiftedIndex);
+        ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0]);
         if (itemstack == null)
         {
             return false;
@@ -205,11 +221,8 @@
         {
             return false;
         }
-        if (furnaceItemStacks[2].stackSize < getInventoryStackLimit() && furnaceItemStacks[2].stackSize < furnaceItemStacks[2].getMaxStackSize())
-        {
-            return true;
-        }
-        return furnaceItemStacks[2].stackSize < itemstack.getMaxStackSize();
+        int result = furnaceItemStacks[2].stackSize + itemstack.stackSize;
+        return (result <= getInventoryStackLimit() && result <= itemstack.getMaxStackSize());
     }
 
     public void smeltItem()
@@ -218,14 +231,14 @@
         {
             return;
         }
-        ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0].getItem().shiftedIndex);
+        ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0]);
         if (furnaceItemStacks[2] == null)
         {
             furnaceItemStacks[2] = itemstack.copy();
         }
-        else if (furnaceItemStacks[2].itemID == itemstack.itemID)
+        else if (furnaceItemStacks[2].isItemEqual(itemstack))
         {
-            furnaceItemStacks[2].stackSize++;
+            furnaceItemStacks[2].stackSize += itemstack.stackSize;
         }
         if (furnaceItemStacks[0].getItem().func_46056_k())
         {
@@ -241,7 +254,7 @@
         }
     }
 
-    private int getItemBurnTime(ItemStack itemstack)
+    public static int getItemBurnTime(ItemStack itemstack)
     {
         if (itemstack == null)
         {
