--- ../src_base/minecraft/net/minecraft/src/BlockLeaves.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/BlockLeaves.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,8 +1,11 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Random;
 
-public class BlockLeaves extends BlockLeavesBase
+import net.minecraft.src.forge.IShearable;
+
+public class BlockLeaves extends BlockLeavesBase implements IShearable
 {
     private int baseIndexInPNG;
     int adjacentTreeBlocks[];
@@ -213,15 +216,7 @@
 
     public void harvestBlock(World world, EntityPlayer entityplayer, int i, int j, int k, int l)
     {
-        if (!world.isRemote && entityplayer.getCurrentEquippedItem() != null && entityplayer.getCurrentEquippedItem().itemID == Item.shears.shiftedIndex)
-        {
-            entityplayer.addStat(StatList.mineBlockStatArray[blockID], 1);
-            dropBlockAsItem_do(world, i, j, k, new ItemStack(Block.leaves.blockID, 1, l & 3));
-        }
-        else
-        {
-            super.harvestBlock(world, entityplayer, i, j, k, l);
-        }
+        super.harvestBlock(world, entityplayer, i, j, k, l);
     }
 
     protected int damageDropped(int i)
@@ -256,4 +251,18 @@
     {
         super.onEntityWalking(world, i, j, k, entity);
     }
+
+    @Override
+    public boolean isShearable(ItemStack item, World world, int X, int Y, int Z) 
+    {
+        return true;
+    }
+
+    @Override
+    public ArrayList<ItemStack> onSheared(ItemStack item, World world, int X, int Y, int Z, int fortune) 
+    {
+        ArrayList<ItemStack> ret = new ArrayList<ItemStack>();
+        ret.add(new ItemStack(this, 1, world.getBlockMetadata(X, Y, Z) & 3));
+        return ret;
+    }
 }
