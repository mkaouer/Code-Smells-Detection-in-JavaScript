<?xml version="1.0"?> 

<!-- $Id$ -->

<project name="jPOS" default="targets" basedir="..">
  <property name="source" value="src" />
  <property name="main" value="${source}/main" />
  <property name="ext" value="${source}/ext" />
  <property name="ext.includes" value="" />
  <property name="build" value="build" />
  <property name="buildsrc" value="${build}/src" />
  <property name="classes" value="${build}/classes" />
  <property name="examples"  value="${source}/examples" />
  <property name="ext-examples"  value="${source}/ext-examples" />
  <property name="classes.examples"  value="${build}/examples" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="extlib" value="ext" />
  <property name="doc" value="${source}/doc" />
  <property name="etc" value="${source}/etc" />
  <property name="htdocs" value="${build}" />

  <property file="${etc}/VERSION" />
  <property name="classpath" value="${classpath}:${classes}" />
  <property name="deprecation" value="false" />
  <property name="debug" value="on" />
  <property name="project" value="jpos" />
  <property name="archive" value="${project}-${version}" />


  <target name="targets">
    <echo>

ANT build for jPOS ${version}

Main targets:

 clean         Remove build and dist directories
 main          Compiles classes
 jar           Build jpos.jar
 javadoc       Generate javadoc
 aspects       Precompile aspects
 examples      Build examples
 ext-examples  Build extended examples
 info          Echoes system properties
 test          Self tests

    </echo>
  </target>

  <target name="prepare">
    <mkdir dir="${buildsrc}"/>
    <mkdir dir="${build}/test"/>
    <mkdir dir="${htdocs}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${classes.examples}"/>
    <mkdir dir="${classes.examples}/securekeystore"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="log"/>
    <mkdir dir="deploy/lib"/>
  </target>

  <target name="clean" description="Remove build and dist directories">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <path id="ext.classpath">
      <fileset dir="${lib}">
          <include name="*.jar"/>
      </fileset>
      <fileset dir="${extlib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
      <pathelement path="${classpath}"/>
  </path>

  <path id="test.classpath">
      <fileset dir="${lib}">
          <include name="*.jar" />
          <exclude name="crimson.jar" />
      </fileset>
      <fileset dir="${extlib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
      <pathelement path="${classpath}"/>
  </path>

  <path id="xdoclet.classpath">
    <pathelement location="${lib}/commons-collections-2.0.jar"/>
    <pathelement location="${lib}/commons-logging.jar"/>
    <pathelement location="${lib}/xjavadoc-1.0.2.jar"/>
    <pathelement location="${lib}/xdoclet-1.2.jar"/>
    <pathelement location="${lib}/xdoclet-jmx-module-1.2.jar"/>
    <pathelement location="${lib}/xdoclet-mx4j-module-1.2.jar"/>

    <!-- pathelement location="${lib}/log4j.jar"/ -->
    <pathelement location="${lib}/ant.jar"/>
  </path>

  <fileset dir="${main}" >
    <patternset id="rmic.classes" >
      <include name="org/jpos/space/SpaceProxy.class"/>
    </patternset>
  </fileset>

  <patternset id="ext-sources">
     <include name="**/*.xml" />
     <include name="**/org/jpos/apps/qsp/**/*.java" />
     <exclude name="**/qsp/EJBConnector.java"           unless="ejb.present" />
     <exclude name="**/qsp/Router.java"                 unless="jep.present" />
     <include name="**/OperatorLogListener.java"        if="mail.present"    />
     <include name="**/ReliableSequencer*.java"         if="sun-util.present"/>
     <include name="**/SAFChannel*.java"                if="sun-util.present"/>

     <include name="**/JepUtil.java"                    if="jep.present"     />
     <include name="**/filter/CalculateFilter.java"     if="jep.present"     />
     <include name="**/filter/SQLFilter.java"           if="jep.present"     />
     <include name="**/bsh/*.java"                      if="bsh.present"     />

     <include name="**/VISA1Link.java"                  if="comm.present"    />
     <include name="**/V24.java"                        if="comm.present"    />
     <include name="**/*Modem.java"                     if="comm.present"    />

     <!-- include name="**/SunJSSESocketFactory.java"       if="jsse.present"    / -->
     <include name="**/SunJSSESocketFactory.java"       if="jdk1.4.present"    />
     <include name="**/CryptoPackager.java"             if="jce.present"     />
     <include name="**/security/jceadapter/**"          if="jce.present"     />

     <include name="**/TLVPackager.java"            if="opencard.present"    />
     <include name="**/TLVSubFieldPackager.java"    if="opencard.present"    />
     <include name="**/ISO93BTLVPackager.java"          if="optf.present"    />
     <include name="**/TLVField.java"                   if="optf.present"    />
     <include name="**/IFB_LLLTLVBINARY.java"           if="optf.present"    />
     <include name="**/ui/factory/SwiXMLFactory.java" if="swixml.present"    />
  </patternset>

  <target name="copy-src" depends="prepare, ext.check.mail, ext.check.jsse">

   <copy todir="${buildsrc}">
    <fileset dir="${main}">
     <include name="**/*.java"/>
     <include name="**/*.properties"/>
    </fileset>
    <fileset dir="${ext}">
     <patternset refid="ext-sources" />
    </fileset>
   </copy>
  </target>

  <target name="copy-examples" depends="copy-src">
   <copy todir="${buildsrc}">
    <fileset dir="${examples}">
     <include name="**/*.java"/>
    </fileset>
   </copy>
  </target>

  <target name="copy-ext-examples" depends="copy-src">
   <copy todir="${buildsrc}">
    <fileset dir="${ext-examples}">
     <include name="**/*.java"/>
    </fileset>
   </copy>
  </target>

  <target name="copy-test" depends="copy-src">
   <copy todir="${buildsrc}">
    <fileset dir="${source}/test">
     <include name="**/*.java"/>
    </fileset>
   </copy>
  </target>

  <target name="xdoclet-uptodate" depends="copy-src">
    <uptodate property="xdoclet-generate">
      <srcfiles dir="${buildsrc}" includes="org/jpos/space/TransientSpace.java" />
      <mapper type="glob" from="*.java" to="*MBean.java"/>
    </uptodate>
  </target>

  <target name="generate" depends="xdoclet-uptodate" unless="xdoclet-generate">
    <taskdef name="jmxdoclet" classname="xdoclet.modules.jmx.JMXDocletTask">
      <classpath refid="xdoclet.classpath"/>
    </taskdef>

    <jmxdoclet destdir="${buildsrc}" force="yes" verbose="false">
      <fileset dir="${buildsrc}">
        <include name="org/jpos/space/TransientSpace.java" />
      </fileset>
      <mbeaninterface/>
      <!-- mx4jdescription/ -->
    </jmxdoclet>
  </target>

  <target name="main" depends="copy-src, generate"
    description="Compiles classes">


    <javac srcdir="${buildsrc}" destdir="${classes}"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="ext.classpath" />
    </javac>
    <rmic base="${classes}" stubVersion="1.2">
       <classpath  refid="ext.classpath" />
       <patternset refid="rmic.classes" />
    </rmic>
    <copy file="${source}/etc/jndi.properties" 
        tofile="${classes}/jndi.properties" />
    <copy file="${buildsrc}/org/jpos/ui/UI.properties" 
        tofile="${classes}/org/jpos/ui/UI.properties" />
  </target>

  <target name="ext.check">
    <available property="sun-util.present"
           classpathref="ext.classpath"
              classname="com.sun.jini.reliableLog.ReliableLog" />
    <available property="comm.present"
           classpathref="ext.classpath"
              classname="javax.comm.SerialPort" />
    <available property="jnet.present"
           classpathref="ext.classpath"
          classname="javax.net.ServerSocketFactory" />
    <available property="jce.present"
           classpathref="ext.classpath"
          classname="javax.crypto.SecretKey" />
    <available property="opencard.present"
           classpathref="ext.classpath"
              classname="opencard.opt.util.TLV" />
    <available property="optf.present"
           classpathref="ext.classpath"
              classname="optfx.util.tlv.RawTLV" />
    <available property="jep.present"
           classpathref="ext.classpath"
              classname="org.nfunk.jep.JEP" />
    <available property="activation.present"
           classpathref="ext.classpath"
          classname="javax.activation.DataSource" />
    <available property="ejb.present"
           classpathref="ext.classpath"
          classname="javax.ejb.SessionBean" />
    <available property="jdk1.4.present"
           classpathref="ext.classpath"
          classname="java.util.LinkedHashMap" />
    <available property="bsh.present"
           classpathref="ext.classpath"
              classname="bsh.Interpreter" />
    <available property="swixml.present"
           classpathref="ext.classpath"
              classname="org.swixml.SwingEngine" />
  </target>
  <target name="ext.check.mail" depends="ext.check" if="activation.present">
    <available property="mail.present"
           classpathref="ext.classpath"
          classname="javax.mail.Address" />
  </target>
  <target name="ext.check.jsse" depends="ext.check" if="jnet.present">
    <available property="jsse.present"
           classpathref="ext.classpath"
          classname="javax.net.ssl.SSLSocket" />
  </target>

  <target name="examples" depends="copy-examples, main" 
     description="Build examples" />

  <target name="ext-examples" depends="copy-ext-examples, main" 
     description="Build extended examples" />

  <target name="test" depends="copy-test, main" description="Self tests">
    <java classname="junit.textui.TestRunner" fork="yes">
      <classpath refid="test.classpath" />
      <arg value="AllTests" />
      <jvmarg value="-Dlog4j.config=src/test/cfg/log4j.xml" />
    </java>
  </target>

  <target name="jar" depends="splash, main" description="Build jpos.jar">
    <delete file="${dist}/${archive}.jar" />
    <copy file="${source}/etc/MANIFEST.MF" tofile="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" 
             token="$$VERSION$$" value="${version}"/>
    <copy file="${source}/etc/LICENSE" tofile="${classes}/LICENSE" />
    <copy file="${source}/etc/README"  tofile="${classes}/README" />
    <copy file="ChangeLog" tofile="${classes}/ChangeLog" />

    <jar jarfile="${dist}/${archive}.jar" 
         basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" 
    includes="LICENSE,README,org/**" />
  </target>

  <target name="jpos-util" depends="main" description="Build jpos-util.jar">
    <delete file="${dist}/jpos-util.jar" />
    <copy file="${source}/etc/LICENSE" tofile="${classes}/LICENSE" />
    <copy file="${source}/etc/MANIFEST.MF" tofile="${classes}/MANIFEST.MF" />
    <jar jarfile="${dist}/jpos-util.jar"
         basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" 
         includesfile="${etc}/jpos-util.list" />
  </target>

  <target name="cvs" depends="clean">
    <cvs cvsRoot=":pserver:anonymous@cvs.jpos.sourceforge.net:/cvsroot/jpos"
         dest="." package="${project}" />
  </target>

  <target name="javadoc" depends="main" description="Generate javadoc">
    <mkdir   dir="${htdocs}/doc" />
    <delete  dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc" />
    <mkdir   dir="${htdocs}/doc/javadoc/images" />
    <copy  todir="${htdocs}/doc/images">
        <fileset dir="${doc}/images" />
    </copy>
    <javadoc sourcepath="${buildsrc}"
	destdir="${htdocs}/doc/javadoc"
        windowtitle="jPOS ${version} API Documentation" 
        doctitle="jPOS ${version} API Documentation" 
        header="jPOS ${version} API Documentation" 
	footer="jPOS.org"
	public="true" noindex="true" author="true" 
        classpathref="ext.classpath"
	overview="${doc}/javadoc/Overview.html"
        packagenames="org.jpos.*"
    />
    <delete dir="${htdocs}/doc/tmp" />
  </target>

  <target name="doc" depends="javadoc">
    <mkdir   dir="${build}/doc" />
    <copy  todir="${htdocs}/doc">
        <fileset dir="${doc}">
          <patternset>
            <include name="*.html" />
          </patternset>
        </fileset>
    </copy>
  </target>

  <target name="source" depends="prepare">
    <delete  dir="${build}/src" />
    <mkdir   dir="${build}/src" />
    <copy  todir="${build}/src">
        <fileset dir="${main}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
        <fileset dir="${ext}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
    </copy>
    <fixcrlf srcdir="${build}/src" includes="*" />
  </target>

  <target name="tarball" depends="clean, jar, doc, source">
    <property name="bin" value="${build}/${archive}" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <delete    dir="${bin}" />
    <mkdir     dir="${bin}" />
    <copy     file="${etc}/README"
            tofile="${bin}/README" />
    <copy     file="${etc}/LICENSE"
            tofile="${bin}/LICENSE" />
    <copy     file="ChangeLog"
            tofile="${bin}/ChangeLog" />
    <copy     file="${dist}/${archive}.jar"
            tofile="${bin}/${archive}.jar" />

    <tar includes="${archive}/** src/** doc/**" basedir="${build}"
         tarfile="${dist}/${archive}.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}.tar" zipfile="${dist}/${archive}.tgz"/>
    <delete file="${dist}/${archive}.tar" />

    <zip zipfile="${dist}/${archive}.zip" basedir="${build}"
         includes="${archive}/** src/** doc/**" />
  </target>

  <target name="info" description="Echoes system properties">
    <echo message="java.vm.info=${java.vm.info}" />
    <echo message="java.vm.name=${java.vm.name}" />
    <echo message="java.vm.vendor=${java.vm.vendor}" />
    <echo message="java.vm.version=${java.vm.version}" />
    <echo message="os.arch=${os.arch}" />
    <echo message="os.name=${os.name}" />
    <echo message="os.version=${os.version}" />
    <echo message="java.home=${java.home}" />
    <echo message="java.class.path=${java.class.path}" />
    <echo message="build.compiler=${build.compiler}" />
    <echo message="file.encoding=${file.encoding}" />
    <echo message="user.home=${user.home}" />
    <echo message="user.language=${user.language}" />
  </target>

  <target name="aspects" description="Precompile aspects" 
    depends="copy-src, generate">

    <copy todir="${buildsrc}">
      <fileset dir="${source}/aop">
        <include name="**/*.java"/>
      </fileset>
    </copy>

    <taskdef 
        resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
      <classpath>
        <pathelement location="ext/aspectjtools.jar"/>
      </classpath>
    </taskdef>

    <iajc sourceRoots="${buildsrc}" destdir="${classes}"
       debug="${debug}"
       deprecation="${deprecation}" >
       <classpath refid="ext.classpath" />
    </iajc>

  </target>

  <target name="splash">
   <splash imageurl="file:src/doc/images/jpos_l.jpg" 
           showduration="0"/>
  </target>
</project>

