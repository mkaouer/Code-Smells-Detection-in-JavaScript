<?xml version="1.0"?> 

<!-- $Id$ -->

<project name="Q2" default="release" basedir="..">
  <property name="source" value="src" />
  <property name="main" value="${source}/main" />
  <property name="build" value="build" />
  <property name="buildsrc" value="${build}/src" />
  <property name="classes" value="${build}/classes" />
  <property name="javadoc" value="${build}/javadoc" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="etc" value="${source}/etc" />

  <property file="${etc}/VERSION" />
  <property name="classpath" value="${classpath}:${classes}" />
  <property name="deprecation" value="false" />
  <property name="debug" value="on" />
  <property name="project" value="q2" />
  <property name="archive" value="${project}-${version}" />

  <target name="prepare">
    <mkdir dir="${buildsrc}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="log"/>
    <mkdir dir="deploy/lib"/>
  </target>

  <target name="ext-check">
    <available property="bsh.present"
           classpathref="lib.classpath"
              classname="bsh.Interpreter" />
    <available property="jython.present"
           classpathref="lib.classpath"
              classname="org.python.util.PythonInterpreter" />
  </target>

  <target name="clean" description="Remove build and dist directories">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <path id="lib.classpath">
      <pathelement path="${classpath}"/>
      <fileset dir="${lib}">
          <include name="*.jar"/>
      </fileset>
      <pathelement location="${build}/classes"/>
  </path>

  <path id="xdoclet.classpath">
    <pathelement location="${lib}/commons-collections-2.0.jar"/>
    <pathelement location="${lib}/commons-logging.jar"/>
    <pathelement location="${lib}/xjavadoc-1.0.2.jar"/>
    <pathelement location="${lib}/xdoclet-1.2.jar"/>
    <pathelement location="${lib}/xdoclet-jmx-module-1.2.jar"/>
    <pathelement location="${lib}/xdoclet-mx4j-module-1.2.jar"/>
    <pathelement location="${lib}/log4j.jar"/>
    <pathelement location="${lib}/ant.jar"/>
  </path>

  <target name="copy-src" depends="prepare">
   <copy todir="${buildsrc}">
    <fileset dir="${main}">
     <exclude name="**/qbean/BSH.java" unless="bsh.present" />
     <exclude name="**/qbean/Jython.java" unless="jython.present" />
     <exclude name="**/qbean/SpaceLet.java" unless="bsh.present" /> 
     <include name="**/*.java"/>
    </fileset>
   </copy>
   <replace file="${buildsrc}/org/jpos/q2/Q2.java"
      token="XX_Q2_VERSION_XX" value="${version}" />
  </target>

  <target name="copy-examples" depends="copy-src">
   <copy todir="${buildsrc}">
    <fileset dir="${examples}">
     <include name="**/*.java"/>
    </fileset>
   </copy>
  </target>

  <target name="copy-test" depends="copy-src">
   <copy todir="${buildsrc}">
    <fileset dir="${source}/test">
     <include name="**/*.java"/>
    </fileset>
   </copy>
  </target>

  <target name="xdoclet-uptodate" depends="copy-src">
    <uptodate property="xdoclet-generate">
      <srcfiles dir="${buildsrc}" includes="org/jpos/q2/QClassLoader.java" />
      <srcfiles dir="${buildsrc}" includes="org/jpos/q2/qbean/RMIAdaptor.java" />
      <srcfiles dir="${buildsrc}" includes="org/jpos/q2/qbean/Naming.java" />
      <srcfiles dir="${buildsrc}" includes="org/jpos/q2/qbean/NameRegistrarInspector.java" />
      <srcfiles dir="${buildsrc}" includes="org/jpos/q2/qbean/SpaceProxyAdaptor.java" />
      <srcfiles dir="${buildsrc}" includes="org/jpos/q2/qbean/SpaceAdaptor.java" />
      <mapper type="glob" from="*.java" to="*MBean.java"/>
    </uptodate>
  </target>

  <target name="generate" depends="xdoclet-uptodate" unless="xdoclet-generate">
    <taskdef name="jmxdoclet" classname="xdoclet.modules.jmx.JMXDocletTask">
      <classpath refid="xdoclet.classpath"/>
    </taskdef>

    <jmxdoclet destdir="${buildsrc}" force="yes" verbose="false">
      <fileset dir="${buildsrc}">
        <include name="org/jpos/q2/QClassLoader.java" />
        <include name="org/jpos/q2/qbean/RMIAdaptor.java" />
        <include name="org/jpos/q2/qbean/Naming.java" />
        <include name="org/jpos/q2/qbean/NameRegistrarInspector.java" />
        <include name="org/jpos/q2/qbean/SpaceProxyAdaptor.java" />
        <include name="org/jpos/q2/qbean/SpaceAdaptor.java" />
      </fileset>
      <mbeaninterface/>
      <mx4jdescription/>
    </jmxdoclet>
  </target>

  <target name="get-jars">
   <get src="http://www.beanshell.org/bsh-2.0b4.jar" 
       usetimestamp="true" verbose="true" dest="lib/bsh-2.0b4.jar"/>
  </target>

  <target name="main" depends="get-jars, ext-check, copy-src, generate"
    description="Compiles classes">

    <copy todir="${classes}">
     <fileset dir="${source}/main">
      <include name="**/*.properties" />
     </fileset>
    </copy>

    <javac srcdir="${buildsrc}" destdir="${classes}"
        debug="${debug}"
        deprecation="${deprecation}" >
        <classpath refid="lib.classpath" />
    </javac>
  </target>

  <target name="jar" depends="main" description="Builds q2.jar">
    <delete file="${build}/${project}.jar" />
    <copy file="${source}/etc/MANIFEST.Q2" tofile="${classes}/MANIFEST.Q2" />
    <replace file="${classes}/MANIFEST.Q2" 
             token="$$VERSION$$" value="${version}"/>
    <copy file="${source}/etc/LICENSE" tofile="${classes}/LICENSE" />
    <copy file="${source}/etc/README"  tofile="${classes}/README" />
    <copy file="ChangeLog" tofile="${classes}/ChangeLog" />
    <jar jarfile="${dist}/${project}.jar" 
         basedir="${classes}"
         manifest="${classes}/MANIFEST.Q2" 
	 includes="LICENSE,README,ChangeLog,org/**" />
  </target>

  <target name="cvs" depends="clean">
    <cvs cvsRoot=":pserver:anonymous@cvs.jpos.sourceforge.net:/cvsroot/jpos"
         dest="." package="${project}" />
  </target>

  <!--target name="dist" depends="jar" description="Generates Q2 distro">
    <copy file="${source}/etc/LICENSE"   tofile="${dist}/LICENSE" />
    <copy file="${source}/etc/README"    tofile="${dist}/README" />
    <copy file="${source}/etc/VERSION"   tofile="${dist}/VERSION" />
    <copy file="${build}/${archive}.jar" tofile="${dist}/q2.jar" />
    <mkdir dir="${dist}/lib"/>
    <mkdir dir="${dist}/deploy/lib"/>
    <copy todir="${dist}/lib">
     <fileset dir="${lib}">
      <include name="jdom*.jar"/>
      <include name="mx4j*.jar"/>
      <include name="xerces*.jar"/>
     </fileset>
    </copy>
  </target-->

  <target name="source" depends="prepare">
    <delete  dir="${build}/src" />
    <mkdir   dir="${build}/src" />
    <copy  todir="${build}/src">
        <fileset dir="${main}">
          <patternset>
            <exclude name="CVS/*" />
          </patternset>
        </fileset>
    </copy>
    <fixcrlf srcdir="${build}/src" includes="*" />
  </target>

  <target name="release" depends="clean, jar, javadoc, source" 
           description="Create a tarball composed of R2R Q2">
    <property name="rbin" value="${build}/${archive}" />
    <property name="rlib" value="${rbin}/lib" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <delete    dir="${rbin}" />
    <mkdir     dir="${rbin}" />
    <mkdir     dir="${rbin}/bin" />
    <mkdir     dir="${rbin}/javadoc" />
    <mkdir     dir="${rbin}/log" />
    <mkdir     dir="${rbin}/examples" />
    <copy    todir="${rbin}/examples" >
      <fileset dir="${source}/examples" includes="*.xml" />
    </copy>
    <copy     file="${etc}/README"
            tofile="${rbin}/README" />
    <copy     file="${etc}/LICENSE"
            tofile="${rbin}/LICENSE" />
    <copy     file="ChangeLog"
            tofile="${rbin}/ChangeLog" />
    <mkdir     dir="${rlib}" />
    <copy     file="${dist}/${project}.jar"
            tofile="${rbin}/${project}.jar" />
    <copy    todir="${rbin}/bin" >
      <fileset dir="bin" includes="q2,q2.bat,cp.bat" />
    </copy>
    <copy    todir="${rlib}" >
      <fileset dir="${lib}" includes="mx4j*,jdom*,jpos*,commons-cli*" />
    </copy>
    <copy    todir="${rbin}/javadoc" >
      <fileset dir="${javadoc}" includes="**" />
    </copy>
    <copy    todir="${rbin}/src" >
      <fileset dir="${build}/src" includes="**" />
    </copy>

    <tar compression="gzip"
         destfile="${dist}/${archive}.tar.gz" defaultexcludes="true"> 	  
      <tarfileset dir="${build}" mode="755">
        <include name="${archive}/bin/q2"/>
      </tarfileset>
      <tarfileset dir="${build}">
        <include name="${archive}/**"/>
        <exclude name="${archive}/bin/q2"/>
      </tarfileset>
    </tar>

    <zip zipfile="${dist}/${archive}.zip" basedir="${build}"
         includes="${archive}/**" />

  </target>

  <target name="tarball" depends="clean, jar, javadoc, source">
    <property name="bin" value="${build}/${archive}" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <delete    dir="${bin}" />
    <mkdir     dir="${bin}" />
    <copy     file="${etc}/README"
            tofile="${bin}/README" />
    <copy     file="${etc}/LICENSE"
            tofile="${bin}/LICENSE" />
    <copy     file="ChangeLog"
            tofile="${bin}/ChangeLog" />
    <copy     file="${dist}/${project}.jar"
            tofile="${bin}/${project}.jar" />

    <tar includes="${archive}/** src/** javadoc/**" basedir="${build}"
         tarfile="${dist}/${archive}.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}.tar" zipfile="${dist}/${archive}.tgz"/>
    <delete file="${dist}/${archive}.tar" />

    <zip zipfile="${dist}/${archive}.zip" basedir="${build}"
         includes="${archive}/** src/** javadoc/**" />
  </target>

  <target name="info" description="Echoes system properties">
    <echo message="java.vm.info=${java.vm.info}" />
    <echo message="java.vm.name=${java.vm.name}" />
    <echo message="java.vm.vendor=${java.vm.vendor}" />
    <echo message="java.vm.version=${java.vm.version}" />
    <echo message="os.arch=${os.arch}" />
    <echo message="os.name=${os.name}" />
    <echo message="os.version=${os.version}" />
    <echo message="java.home=${java.home}" />
    <echo message="java.class.path=${java.class.path}" />
    <echo message="build.compiler=${build.compiler}" />
    <echo message="file.encoding=${file.encoding}" />
    <echo message="user.home=${user.home}" />
    <echo message="user.language=${user.language}" />
  </target>

  <target name="javadoc" depends="main" description="Generate javadoc">
    <delete dir="${javadoc}" />
    <mkdir   dir="${javadoc}" />
    <javadoc sourcepath="${buildsrc}"
	destdir="${javadoc}"
        windowtitle="Q2 ${version} API Documentation" 
        doctitle="Q2 ${version} API Documentation" 
        header="Q2 ${version} API Documentation" 
	footer="jPOS.org"
	public="true" noindex="true" author="true" 
        classpathref="lib.classpath"
        packagenames="org.jpos.q2.*"
    />
  </target>
</project>

