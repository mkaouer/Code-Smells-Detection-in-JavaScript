<?xml version="1.0"?>

<document>
  <properties>
    <author email="tom@infoether.com">Tom Copeland</author>
    <title>Finding copied and pasted code</title>
  </properties>

  <body>
   <section name="Finding duplicate code">
       <subsection name="Overview">
     <p>Duplicate code can be hard to find, especially in a large project.  But PMD's Copy/Paste Detector (CPD) can find it for you!
        CPD has been through three major incarnations:</p>
         <ul>
             <li>First we wrote it using a variant of Michael Wise's Greedy String Tiling algorithm (our variant is described
         <a href="http://www.onjava.com/pub/a/onjava/2003/03/12/pmd_cpd.html">here</a>)</li>
             <li>Then it was completely
         rewritten by Brian Ewins using the
         <a href="http://dogma.net/markn/articles/bwt/bwt.htm">Burrows-Wheeler transform</a></li>
             <li>Finally, it was rewritten by Steve Hawkins to use the
         <a href="http://www.nist.gov/dads/HTML/karpRabin.html">Karp-Rabin</a> string matching algorithm.</li>
         </ul>
          <p>Each rewrite made it much faster, and now it can process the JDK 1.4 java.* packages in about 4 seconds (on my workstation, at least).</p>
     <p>Here's a <a href="images/screenshot_cpd.png">screenshot</a> of CPD after running on the JDK java.lang package.</p>
     <p>Note that CPD works with Java, JSP, C, C++, Fortran and PHP code. Your own language is missing ? See how to add it <a href="cpd-parser-howto.html">here</a></p>
     <p>CPD is included with PMD, which you can download <a href="http://sourceforge.net/project/showfiles.php?group_id=56262">here</a>.
 Or, if you have <a href="http://java.sun.com/products/javawebstart/">Java Web Start</a>, you can <a href="cpd.jnlp">run CPD by clicking here</a>.
     </p>
     <p><a href="cpdresults.txt">Here</a> are the duplicates CPD found in the JDK 1.4 source code.</p>
     <p><a href="cpp_cpdresults.txt">Here</a> are the duplicates CPD found in the APACHE_2_0_BRANCH branch of Apache
         (just the <code>httpd-2.0/server/</code> directory).</p>
       </subsection>

       <subsection name="Ant task">
       <p>Andy Glover wrote an Ant task for CPD; here's how to use it:</p>
       <source>
<![CDATA[
<target name="cpd">
    <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" />
    <cpd minimumTokenCount="100" outputFile="/home/tom/cpd.txt">
        <fileset dir="/home/tom/tmp/ant">
            <include name="**/*.java"/>
        </fileset>
    </cpd>
</target>
]]>
       </source>
       <p>There's a <code>ignoreLiterals="true"</code> option which makes CPD ignore literal
 value differences when evaluating a duplicate block.  This means that <code>foo=42;</code> and <code>foo=43;</code>
 will be seen as equivalent.  You may want to run PMD with this option off to start with and
           then switch it on to see what it turns up.   There's also a <code>ignoreIdentifiers="true"</code> option
           that does the same thing with identifiers; i.e., variable names, methods names, and so forth.
           The same guidelines apply.  Finally, there's an optional <code>language="cpp|java|php|ruby"</code> flag
           to select the appropriate language; the default language is "java".
 </p>
       <p>Also, you can get verbose output from this task by running ant with the <code>-v</code> flag; i.e.:</p>
  <source>
 ant -v -f mybuildfile.xml cpd
  </source>
           <p>Also, you can get an HTML report from CPD by using the XSLT script in pmd/etc/xslt/cpdhtml.xslt.  Just run
 the CPD task as usual and right after it invoke the Ant XSLT script like this:</p>
<source>
<![CDATA[
<xslt in="cpd.xml" style="etc/xslt/cpdhtml.xslt" out="cpd.html" />
]]>
</source>
       </subsection>

       <subsection name="Command line usage">
           <p>To run CPD from the command line, just give it the minimum duplicate size and the source directory:</p>
           <source>
$ java net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files /usr/local/java/src/java
           </source>
           <p>You can also specify the language:</p>
           <source>
$ java net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files /path/to/c/source --language cpp
           </source>
           <p>And if you're checking a C source tree with duplicate files in different architecture directories
           you can skip those using --skip-duplicate-files:</p>
           <source>
$ java net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files /path/to/c/source --language cpp --skip-duplicate-files
           </source>
           <p>You can also specify a report format - here we're using the XML report:</p>
           <source>
$ java net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files /usr/local/java/src/java --format net.sourceforge.pmd.cpd.XMLRenderer
           </source>
       <p>The default format is a text report, and there's also a <code>net.sourceforge.pmd.cpd.CSVRenderer</code> report.</p>
 <p>Note that CPD is pretty memory-hungry; you may need to give Java more memory to run it, like this:</p>
       <source>
$ java -Xmx512m net.sourceforge.pmd.cpd.CPD --minimum-tokens 100 --files /usr/local/java/src/java
       </source>

       </subsection>

     <p>Suggestions?  Comments?  Post them <a href="http://sourceforge.net/forum/forum.php?forum_id=188192">here</a>.  Thanks!</p>

   </section>
  </body>
</document>


