<?xml version="1.0" encoding="UTF-8"?>
<test-data>
    <test-code>
        <description><![CDATA[
returning a HashSet, bad
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import java.util.HashSet;
public class Foo {
 HashSet foo() {
  return new HashSet();
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
returning a Map, OK
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import java.util.Map;
import java.util.HashMap;
public class Foo {
 Map getFoo() {
  return new HashMap();
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
no problemo
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 void foo() {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
returning a set
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import java.util.*;
public class Foo {
 Set fooSet = new HashSet(); // OK
 Set foo() {
  return fooSet;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
field declared of type HashSet
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import java.util.HashSet;
public class Foo {
 HashSet fooSet = new HashSet(); // NOT OK
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
field, return type both HashSet
     ]]></description>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
import java.util.HashSet;
public class Foo {
 HashSet fooSet = new HashSet(); // NOT OK
 HashSet foo() { // NOT OK
  return fooSet;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
two fields
     ]]></description>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
import java.util.HashSet;
import java.util.HashMap;
public class Foo {
 HashSet fooSet = new HashSet();
 HashMap fooMap = new HashMap();
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
method param is HashMap
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import java.util.HashMap;
public class Foo {
 void foo(HashMap bar) {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
Vector could be List
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import java.util.Vector;
import java.util.*;
public class Foo {
 public void foo(Vector bar) {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
ArrayList could be List
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
import java.util.ArrayList;
import java.util.*;
public class Foo {
 public void foo(ArrayList bar) {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
java.util.HashMap should be Map
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 java.util.HashSet fooSet = new java.util.HashSet(); // NOT OK
}
     ]]></code>
    </test-code>
</test-data>