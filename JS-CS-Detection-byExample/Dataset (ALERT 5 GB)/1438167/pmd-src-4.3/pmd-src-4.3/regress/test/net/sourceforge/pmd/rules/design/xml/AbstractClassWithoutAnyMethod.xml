<?xml version="1.0" encoding="UTF-8"?>
<test-data>
    <test-code>
        <description><![CDATA[
Empty abstract method should trigger the rule nonetheless
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public abstract class Foo {}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
An abstract method without any method at all (Basic test case)
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public abstract class Foo {
	private String field;
	public int otherField;
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
An abstract method with constructors
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public abstract class Foo extends Error {
	public Foo() {
		super();
	}
	public Foo(String s) {
		super(s);
	}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
An abstract class with method, no violation
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public abstract class Foo {
	private String field;
	public int otherField;

	public abstract void m();
}
     ]]></code>
    </test-code>
</test-data>