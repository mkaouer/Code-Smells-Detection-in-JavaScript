<?xml version="1.0"?>

<ruleset name="Android Rules"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>
These rules deal with the Android SDK, mostly related to best practices.
To get better results, make sure that the auxclasspath is defined for type resolution to work.
  </description>

  <rule name="CallSuperFirst"
      since="4.2.5"
      message="super should be called at the start of the method"
      class="net.sourceforge.pmd.rules.XPathRule"
      externalInfoUrl="http://pmd.sourceforge.net/rules/android.html#CallSuperFirst">
    <description>Super should be called at the start of the method</description>
    <priority>3</priority>
    <properties>
      <property name="xpath">
        <value><![CDATA[
//MethodDeclaration[MethodDeclarator[
  @Image='onCreate' or
  @Image='onConfigurationChanged' or
  @Image='onPostCreate' or
  @Image='onPostResume' or
  @Image='onRestart' or
  @Image='onRestoreInstanceState' or
  @Image='onResume' or
  @Image='onStart'
  ]]
    /Block[not(
      (BlockStatement[1]/Statement/StatementExpression/PrimaryExpression/PrimaryPrefix[@Image= ancestor::MethodDeclaration/MethodDeclarator/@Image]) or
      ((BlockStatement[1]/Statement/IfStatement/Expression[
  PrimaryExpression/PrimaryPrefix/Name[@Image='Config.LOGD' or @Image='Config.LOGV']
  or
  ConditionalAndExpression/PrimaryExpression/PrimaryPrefix/Name[@Image='Config.LOGD' or @Image='Config.LOGV']
         ]) and
      (BlockStatement[2]/Statement/StatementExpression/PrimaryExpression/PrimaryPrefix[@Image= ancestor::MethodDeclaration/MethodDeclarator/@Image])))]
[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[
  typeof(@Image, 'android.app.Activity', 'Activity') or
  typeof(@Image, 'android.app.Application', 'Application') or
  typeof(@Image, 'android.app.Service', 'Service')
]]]
]]>
        </value>
      </property>
    </properties>
    <example><![CDATA[
   public class DummyActivity extends Activity {
    public void onCreate(Bundle bundle) {
     // missing call to super.onCreate(bundle)
     foo();
    }
   }
]]>
    </example>
  </rule>

  <rule name="CallSuperLast"
      since="4.2.5"
      message="super should be called at the end of the method"
      class="net.sourceforge.pmd.rules.XPathRule"
      externalInfoUrl="http://pmd.sourceforge.net/rules/android.html#CallSuperLast">
    <description>Super should be called at the end of the method</description>
    <priority>3</priority>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
//MethodDeclaration[MethodDeclarator[
  @Image='finish' or
  @Image='onDestroy' or
  @Image='onPause' or
  @Image='onSaveInstanceState' or
  @Image='onStop' or
  @Image='onTerminate'
  ]]
   /Block/BlockStatement[last()]
    [not(Statement/StatementExpression/PrimaryExpression/PrimaryPrefix[@Image= ancestor::MethodDeclaration/MethodDeclarator/@Image])]
[ancestor::ClassOrInterfaceDeclaration[//ClassOrInterfaceType[
  typeof(@Image, 'android.app.Activity', 'Activity') or
  typeof(@Image, 'android.app.Application', 'Application') or
  typeof(@Image, 'android.app.Service', 'Service')
]]]
]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
   public class DummyActivity extends Activity {
    public void onPause() {
     foo();
     // missing call to super.onPause()
    }
   }
]]>
    </example>
  </rule>

  <rule name="ProtectLogD" since="4.2.5"
      message="Log.d calls should be protected by checking Config.LOGD first"
      class="net.sourceforge.pmd.rules.XPathRule"
      externalInfoUrl="http://pmd.sourceforge.net/rules/android.html#ProtectLogD">
    <description>Log.d calls should be protected by checking Config.LOGD first</description>
    <priority>3</priority>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
//PrimaryPrefix/Name[@Image='Log.d']
[not(ancestor::IfStatement/Expression[
  PrimaryExpression/PrimaryPrefix/Name[@Image='Config.LOGD']
  or
  ConditionalAndExpression/PrimaryExpression/PrimaryPrefix/Name[@Image='Config.LOGD']
])]
]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
   public class DummyActivity extends Activity {
    public void foo() {
     Log.d("TAG", "msg1"); // Bad

     bar();

     if (Config.LOGD) Log.d("TAG", "msg1"); // Good
    }
   }
]]>
    </example>
  </rule>

  <rule name="ProtectLogV" since="4.2.5"
      message="Log.v calls should be protected by checking Config.LOGV first"
      class="net.sourceforge.pmd.rules.XPathRule"
      externalInfoUrl="http://pmd.sourceforge.net/rules/android.html#ProtectLogV">
    <description>Log.v calls should be protected by checking Config.LOGV first</description>
    <priority>3</priority>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
//PrimaryPrefix/Name[@Image='Log.v']
[not(ancestor::IfStatement/Expression[
  PrimaryExpression/PrimaryPrefix/Name[@Image='Config.LOGV']
  or
  ConditionalAndExpression/PrimaryExpression/PrimaryPrefix/Name[@Image='Config.LOGV']
])]
]]>
        </value>
      </property>
    </properties>
    <example>
      <![CDATA[
   public class DummyActivity extends Activity {
    public void foo() {
     Log.v("TAG", "msg1"); // Bad

     bar();

     if (Config.LOGV) Log.v("TAG", "msg1"); // Good
    }
]]>
    </example>
  </rule>

  <rule name="DoNotHardCodeSDCard" since="4.2.6"
      message="Do not hardcode /sdcard."
      class="net.sourceforge.pmd.rules.XPathRule"
      externalInfoUrl="http://pmd.sourceforge.net/rules/android.html#DoNotHardCodeSDCard">
    <description>Use Environment.getExternalStorageDirectory() instead of "/sdcard"</description>
    <priority>3</priority>
    <properties>
      <property name="xpath">
        <value>//Literal[starts-with(@Image,'"/sdcard')]</value>
      </property>
    </properties>
    <example>
      <![CDATA[
public class MyActivity extends Activity {
  protected void foo() {
    String storageLocation = "/sdcard/mypackage"; // BAD

    storageLocation = Environment.getExternalStorageDirectory() + "/mypackage"; // GOOD
  }
}
]]>
    </example>
  </rule>
</ruleset>

