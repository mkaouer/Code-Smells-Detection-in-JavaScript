<?xml version="1.0"?>

<document>
  <properties>
    <author email="dpeugh@users.sourceforge.net">David Dixon-Peugh</author>
    <author email="tom@infoether.com">Tom Copeland</author>
    <title>Ant Task</title>
  </properties>

  <body>
    <section name="PMD">
      <subsection name="Description">
        <p>Runs a set of static code analysis rules on some Java source code files and generates a list of problems found.</p>
      </subsection>
      <subsection name="Parameters">
<table border="1" cellpadding="2" cellspacing="0">
  <tr>
    <td valign="top"><b>Attribute</b></td>
    <td valign="top"><b>Description</b></td>
    <td align="center" valign="top"><b>Required</b></td>
  </tr>
  <tr>
    <td valign="top">rulesetfiles</td>
    <td valign="top">A comma delimited list of ruleset files ('rulesets/basic.xml,rulesets/design.xml').  If you write
    your own ruleset files, you can put them on the classpath and plug them in here.</td>
    <td valign="top" align="center">Yes, unless the ruleset nested element is used</td>
  </tr>
  <tr>
    <td valign="top">failonerror</td>
    <td valign="top">Whether or not to fail the build if any errors occur while processing the files</td>
    <td valign="top" align="center">No</td>
  </tr>
    <tr>
      <td valign="top">failOnRuleViolation</td>
      <td valign="top">Whether or not to fail the build if PMD finds any problems</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">minimumPriority</td>
      <td valign="top">The rule priority threshold; rules with lower priority than they will not be used</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">shortFilenames</td>
      <td valign="top">Places truncated filenames in the report.  This can reduce your report file size by 15%-20%.</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">targetjdk</td>
      <td valign="top">Target JDK 1.3, 1.4, 1.5, 1.6, or jsp.  "1.5" is the default.</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">failuresPropertyName</td>
      <td valign="top">A property name to plug the number of rule violations into when the task finishes</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">encoding</td>
      <td valign="top">The character set encoding (i.e., UTF-8) to use when reading the source code files</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">excludemarker</td>
      <td valign="top">The series of characters to use to tell PMD to skip lines - the default is NOPMD.</td>
      <td valign="top" align="center">No</td>
    </tr>
    <tr>
      <td valign="top">maxRuleViolations</td>
      <td valign="top">Whether or not to fail the build if PMD finds more than the value of this attribute. Note that setting this attribute does not require to set the failOnRuleViolation to true.</td>
      <td valign="top" align="center">No</td>
    </tr>
</table>

          <p><code>formatter</code> nested element - specifies the format of and the files to which the report is written.</p>
   <table>
       <tr><th>Name</th><th>Values</th></tr>
 <tr>
     <td>format</td>
     <td>xml,html,text,csv,papari,summaryhtml</td>
 </tr>
       <tr>
         <td>showSuppressed</td>
         <td>Whether to show suppressed warnings; "false" is the default.</td>
       </tr>
       <tr>
           <td>filename</td>
           <td>A filename to which to write the report</td>
       </tr>
       <tr>
           <td>linkPrefix</td>
           <td>Used for linking to online HTMLized source (like <a href="http://pmd.sourceforge.net/xref/index.html">this</a>).  See example below.</td>
       </tr>
       <tr>
           <td>linePrefix</td>
           <td>Used for linking to online HTMLized source (like <a href="http://pmd.sourceforge.net/xref/index.html#line102">this</a>).  See example below.</td>
       </tr>
 </table>

     <p><code>classpath</code> nested element - useful for specifying custom rule.  More details on the <code>classpath</code>
     element are in the Ant documentation <a href="http://ant.apache.org/manual/using.html#path">here</a> and there's
     an example below.</p>

     <p><code>auxclasspath</code> nested element - extra classpath used for Type Resolution rules.</p>

     <p><code>ruleset</code> nested element - another way to specify rulesets.  Here's an example:</p>
          <source>
<![CDATA[
<target name="pmd">
 <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
 <pmd shortFilenames="true">
  <ruleset>rulesets/favorites.xml</ruleset>
  <ruleset>basic</ruleset>
  <formatter type="html" toFile="pmd_report.html" linkPrefix="http://pmd.sourceforge.net/xref/"/>
  <fileset dir="/usr/local/j2sdk1.4.1_01/src/">
   <include name="java/lang/*.java"/>
  </fileset>
 </pmd>
</target>
]]>
      </source>


        </subsection>

    <subsection name="Postprocessing the report file with XSLT">
        <p>Several folks (most recently, Wouter Zelle) have written XSLT scripts
        which you can use to transform the XML report into nifty HTML.  To do this,
        make sure you use the XML formatter in the PMD task invocation, i.e.:
        </p>
        <source>
<![CDATA[
<formatter type="xml" toFile="${tempbuild}/$report_pmd.xml"/>
]]>
        </source>
        <p>Then, after the end of the PMD task, do this:</p>
        <source>
<![CDATA[
<xslt in="${tempbuild}/$report_pmd.xml" style="${pmdConfig}/wz-pmd-report.xslt" out="${pmdOutput}/$report_pmd.html" />
]]>
        </source>
    </subsection>

      <subsection name="Examples">

<p>Running one ruleset to produce a HTML report (and printing the report to the console as well)</p>
<source>
<![CDATA[
<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>

<target name="pmd">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
    <pmd rulesetfiles="imports">
        <formatter type="html" toFile="pmd_report.html" toConsole="true"/>
        <fileset dir="C:\j2sdk1.4.1_01\src\java\lang\">
            <include name="**/*.java"/>
        </fileset>
    </pmd>
</target>
]]>
</source>

<p>Running multiple rulesets to produce an XML report</p>
<source>
<![CDATA[
<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>

<target name="pmd">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
    <pmd rulesetfiles="imports.xml,unusedcode">
        <formatter type="xml" toFile="c:\pmd_report.xml"/>
        <fileset dir="C:\j2sdk1.4.1_01\src\java\lang\">
            <include name="**/*.java"/>
        </fileset>
    </pmd>
</target>
]]>
</source>

<p>Using a custom renderer</p>
<source>
<![CDATA[
<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>

<target name="pmd">
    <pmd rulesetfiles="rulesets/favorites.xml">
        <formatter type="com.mycompany.MyRenderer" toFile="foo.html"/>
        <fileset dir="/path/to/java/src">
            <include name="**/*.java"/>
        </fileset>
    </pmd>
</target>
]]>
</source>

<p>Using a classpath reference in the taskdef</p>
<source>
<![CDATA[
<path id="pmd.classpath">
    <pathelement location="${build}"/>
    <fileset dir="/path/to/my/pmd/lib/">
        <include name="*.jar"/>
    </fileset>
</path>

<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath"/>

<target name="pmd">
      <pmd rulesetfiles="rulesets/favorites.xml">
          <formatter type="net.sourceforge.pmd.renderers.HTMLRenderer" toFile="foo.html"/>
          <fileset dir="/path/to/java/src">
              <include name="**/*.java"/>
          </fileset>
      </pmd>
  </target>
]]>
</source>

<p>Getting verbose output</p>
<source>
<![CDATA[
[tom@hal bin]$ ant -v pmd
Apache Ant version 1.6.2 compiled on July 16 2004
Buildfile: build.xml
Detected Java version: 1.4 in: /usr/local/j2sdk1.4.2_03/jre
Detected OS: Linux
parsing buildfile build.xml with URI = file:/home/tom/data/pmd/pmd/bin/build.xml
Project base dir set to: /home/tom/data/pmd/pmd
Build sequence for target `pmd' is [pmd]
Complete build sequence is [pmd, copy, cppjavacc, cpd, delete,
 compile, clean, jar, dist, cpdjnlp, jjtree, javadoc, test, tomserver]

pmd:
      [pmd] Using the normal ClassLoader
      [pmd] Using these rulesets: rulesets/imports.xml
      [pmd] Using rule DontImportJavaLang
      [pmd] Using rule UnusedImports
      [pmd] Using rule ImportFromSamePackage
      [pmd] Using rule DuplicateImports
      [pmd] Processing file /usr/local/java/src/java/lang/ref/Finalizer.java
      [pmd] Processing file /usr/local/java/src/java/lang/ref/FinalReference.java
      [pmd] Processing file /usr/local/java/src/java/lang/ref/PhantomReference.java
      [pmd] Processing file /usr/local/java/src/java/lang/ref/Reference.java
      [pmd] Processing file /usr/local/java/src/java/lang/ref/ReferenceQueue.java
      [pmd] Processing file /usr/local/java/src/java/lang/ref/SoftReference.java
      [pmd] Processing file /usr/local/java/src/java/lang/ref/WeakReference.java
      [pmd] 0 problems found

BUILD SUCCESSFUL
Total time: 2 seconds
[tom@hal bin]$
]]>
</source>

<p>An HTML report with the "linkPrefix" gizmo</p>
<source>
<![CDATA[
<target name="pmd">
 <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
 <pmd rulesetfiles="basic" shortFilenames="true">
  <formatter type="html" toFile="pmd_report.html" linkPrefix="http://pmd.sourceforge.net/xref/"/>
  <fileset dir="/usr/local/j2sdk1.4.1_01/src/">
   <include name="java/lang/*.java"/>
  </fileset>
 </pmd>
</target>
]]>
</source>

<p>An HTML report with the "linePrefix" gizmo</p>
<source>
<![CDATA[
<target name="pmd">
 <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
 <pmd rulesetfiles="basic" shortFilenames="true">
  <formatter type="html" toFile="pmd_report.html" linePrefix=".line"/>
  <fileset dir="/usr/local/j2sdk1.4.1_01/src/">
   <include name="java/lang/*.java"/>
  </fileset>
 </pmd>
</target>
]]>
</source>

      </subsection>
      <subsection name="Memory Usage">
      <p>On quite large project ( generally more than 500 classes ), the Ant task may fail with a OutOfMemoryError. There is a very easy
      to fix this :
      On Windows:
      <source>
      	<![CDATA[
      		  set ANT_OPTS=-Xmx1024m -Xms512m
      	]]>
      </source>
      On Linux
      <source>
      	<![CDATA[
      		export ANT_OPTS="-Xmx1024m -Xms512m"
      	]]>
      </source>
      Of course, you should adjust the size according to your available memory.
      </p>
      </subsection>
   </section>
 </body>
</document>
