<?xml version="1.0" encoding="UTF-8"?>
<test-data>
    <test-code>
        <description><![CDATA[
ok, implements Cloneable
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo implements Cloneable {
 void clone() {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
bad, doesn't implement Cloneable
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 void clone() {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
ok, not Object.clone since method has a param
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 void clone(int x) {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
ok, doesn't implement Cloneable but only throw CloneNotSupportedException
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 final Object clone() { throw new CloneNotSupportedException(); }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
ok, inner class implements Cloneable
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Bar {
 class Foo implements Cloneable {
  void clone() {}
 }
}
     ]]></code>
    </test-code>
    <test-code reinitializeRule="true">
        <description><![CDATA[
ok, implements interface in same package which extends Cloneable
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package test.net.sourceforge.pmd.rules.typeresolution.xml;
public class FooX extends MyInterface {
 void clone() {}
}
     ]]></code>
    </test-code>
    <test-code reinitializeRule="true">
        <description><![CDATA[
ok, implements interface imported implicitly which extends Cloneable
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import test.net.sourceforge.pmd.rules.typeresolution.xml.*;
public class FooX extends MyInterface {
 void clone() {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
ok, implements interface which extends Cloneable
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class FooX extends test.net.sourceforge.pmd.rules.typeresolution.xml.MyInterface {
 void clone() {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
ok, extends superclass AND implements cloneable
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo extends Bar implements Cloneable{
 void clone() {}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
Bug 1698550, nr 1
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
public final Object clone() throws CloneNotSupportedException {
throw new CloneNotSupportedException();
}
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
Bug 1698550, nr 2
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public final class Foo {
public Object clone() throws CloneNotSupportedException {
throw new CloneNotSupportedException();
}
}
     ]]></code>
    </test-code>
    <!--test-code>
        <description><![CDATA[
Bug 1732593, extending a class which implements Clonable.
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class MyAbstractClass implements Cloneable{
}
public class MyClonableClass extends MyAbstractClass{
    protected Object clone() throws CloneNotSupportedException {
        return super.clone();
    }
}
     ]]></code>
    </test-code-->
    <test-code>
        <description><![CDATA[
Bug 1765613, NullPointerException on enum
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public enum Foo {
    BAR("bar");

    private String bar;

    public String getBar() {
        return bar;
    }
}
     ]]></code>
    </test-code>
</test-data>