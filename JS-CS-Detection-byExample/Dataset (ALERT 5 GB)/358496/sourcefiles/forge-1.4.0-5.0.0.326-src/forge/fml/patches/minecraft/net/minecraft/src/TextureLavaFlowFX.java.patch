--- ../src-base/minecraft/net/minecraft/src/TextureLavaFlowFX.java
+++ ../src-work/minecraft/net/minecraft/src/TextureLavaFlowFX.java
@@ -1,10 +1,11 @@
 package net.minecraft.src;
 
+import cpw.mods.fml.client.FMLTextureFX;
 import cpw.mods.fml.common.Side;
 import cpw.mods.fml.common.asm.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class TextureLavaFlowFX extends TextureFX
+public class TextureLavaFlowFX extends FMLTextureFX
 {
     protected float[] field_76871_g = new float[256];
     protected float[] field_76874_h = new float[256];
@@ -16,6 +17,18 @@
     {
         super(Block.field_71944_C.field_72059_bZ + 1);
         this.field_76849_e = 2;
+        setup();
+    }
+
+    @Override    
+    public void setup()
+    {
+        super.setup();
+        field_76871_g = new float[tileSizeSquare];
+        field_76874_h = new float[tileSizeSquare];
+        field_76875_i = new float[tileSizeSquare];
+        field_76872_j = new float[tileSizeSquare];
+        field_76873_k = 0;
     }
 
     public void func_76846_a()
@@ -29,9 +42,9 @@
         int var8;
         int var9;
 
-        for (int var1 = 0; var1 < 16; ++var1)
+        for (int var1 = 0; var1 < tileSizeBase; ++var1)
         {
-            for (var2 = 0; var2 < 16; ++var2)
+            for (var2 = 0; var2 < tileSizeBase; ++var2)
             {
                 var3 = 0.0F;
                 int var4 = (int)(MathHelper.func_76126_a((float)var2 * (float)Math.PI * 2.0F / 16.0F) * 1.2F);
@@ -41,25 +54,25 @@
                 {
                     for (var7 = var2 - 1; var7 <= var2 + 1; ++var7)
                     {
-                        var8 = var6 + var4 & 15;
-                        var9 = var7 + var5 & 15;
-                        var3 += this.field_76871_g[var8 + var9 * 16];
+                        var8 = var6 + var4 & tileSizeMask;
+                        var9 = var7 + var5 & tileSizeMask;
+                        var3 += this.field_76871_g[var8 + var9 * tileSizeBase];
                     }
                 }
 
-                this.field_76874_h[var1 + var2 * 16] = var3 / 10.0F + (this.field_76875_i[(var1 + 0 & 15) + (var2 + 0 & 15) * 16] + this.field_76875_i[(var1 + 1 & 15) + (var2 + 0 & 15) * 16] + this.field_76875_i[(var1 + 1 & 15) + (var2 + 1 & 15) * 16] + this.field_76875_i[(var1 + 0 & 15) + (var2 + 1 & 15) * 16]) / 4.0F * 0.8F;
-                this.field_76875_i[var1 + var2 * 16] += this.field_76872_j[var1 + var2 * 16] * 0.01F;
+                this.field_76874_h[var1 + var2 * tileSizeBase] = var3 / 10.0F + (this.field_76875_i[(var1 + 0 & tileSizeMask) + (var2 + 0 & tileSizeMask) * tileSizeBase] + this.field_76875_i[(var1 + 1 & tileSizeMask) + (var2 + 0 & tileSizeMask) * tileSizeBase] + this.field_76875_i[(var1 + 1 & tileSizeMask) + (var2 + 1 & tileSizeMask) * tileSizeBase] + this.field_76875_i[(var1 + 0 & tileSizeMask) + (var2 + 1 & tileSizeMask) * tileSizeBase]) / 4.0F * 0.8F;
+                this.field_76875_i[var1 + var2 * tileSizeBase] += this.field_76872_j[var1 + var2 * tileSizeBase] * 0.01F;
 
-                if (this.field_76875_i[var1 + var2 * 16] < 0.0F)
+                if (this.field_76875_i[var1 + var2 * tileSizeBase] < 0.0F)
                 {
-                    this.field_76875_i[var1 + var2 * 16] = 0.0F;
+                    this.field_76875_i[var1 + var2 * tileSizeBase] = 0.0F;
                 }
 
-                this.field_76872_j[var1 + var2 * 16] -= 0.06F;
+                this.field_76872_j[var1 + var2 * tileSizeBase] -= 0.06F;
 
                 if (Math.random() < 0.005D)
                 {
-                    this.field_76872_j[var1 + var2 * 16] = 1.5F;
+                    this.field_76872_j[var1 + var2 * tileSizeBase] = 1.5F;
                 }
             }
         }
@@ -68,9 +81,9 @@
         this.field_76874_h = this.field_76871_g;
         this.field_76871_g = var11;
 
-        for (var2 = 0; var2 < 256; ++var2)
+        for (var2 = 0; var2 < tileSizeSquare; ++var2)
         {
-            var3 = this.field_76871_g[var2 - this.field_76873_k / 3 * 16 & 255] * 2.0F;
+            var3 = this.field_76871_g[(var2 - this.field_76873_k / 3 * tileSizeBase) & tileSizeSquareMask] * 2.0F;
 
             if (var3 > 1.0F)
             {
