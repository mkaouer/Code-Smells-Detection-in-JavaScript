--- ../src-base/minecraft/net/minecraft/src/TextureFlamesFX.java
+++ ../src-work/minecraft/net/minecraft/src/TextureFlamesFX.java
@@ -1,17 +1,31 @@
 package net.minecraft.src;
 
+import cpw.mods.fml.client.FMLTextureFX;
 import cpw.mods.fml.common.Side;
 import cpw.mods.fml.common.asm.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class TextureFlamesFX extends TextureFX
+public class TextureFlamesFX extends FMLTextureFX
 {
     protected float[] field_76869_g = new float[320];
     protected float[] field_76870_h = new float[320];
+    private int fireTileSize = 20;
+    private int fireGridSize = 320;
 
     public TextureFlamesFX(int p_i3215_1_)
     {
         super(Block.field_72067_ar.field_72059_bZ + p_i3215_1_ * 16);
+        setup();
+    }
+
+    @Override
+    public void setup()
+    {
+        super.setup();
+        fireTileSize = tileSizeBase + (tileSizeBase >> 2);
+        fireGridSize = fireTileSize * tileSizeBase;
+        field_76869_g = new float[fireGridSize];
+        field_76870_h = new float[fireGridSize];
     }
 
     public void func_76846_a()
@@ -20,31 +34,36 @@
         float var4;
         int var6;
 
-        for (int var1 = 0; var1 < 16; ++var1)
+        float fireFactor1 = 3.0F + (float)(tileSizeBase >> 4);
+        
+        float fireFactor2 = 1.01F + (0.8F / tileSizeBase);
+
+        for (int var1 = 0; var1 < tileSizeBase; ++var1)
         {
-            for (int var2 = 0; var2 < 20; ++var2)
+            for (int var2 = 0; var2 < fireTileSize; ++var2)
             {
-                var3 = 18;
-                var4 = this.field_76869_g[var1 + (var2 + 1) % 20 * 16] * (float)var3;
+                var3 = fireTileSize - (tileSizeBase >> 3);
+
+                var4 = this.field_76869_g[var1 + (var2 + 1) % fireTileSize * tileSizeBase] * (float)var3;
 
                 for (int var5 = var1 - 1; var5 <= var1 + 1; ++var5)
                 {
                     for (var6 = var2; var6 <= var2 + 1; ++var6)
                     {
-                        if (var5 >= 0 && var6 >= 0 && var5 < 16 && var6 < 20)
+                        if (var5 >= 0 && var6 >= 0 && var5 < tileSizeBase && var6 < fireTileSize)
                         {
-                            var4 += this.field_76869_g[var5 + var6 * 16];
+                            var4 += this.field_76869_g[var5 + var6 * tileSizeBase];
                         }
 
                         ++var3;
                     }
                 }
 
-                this.field_76870_h[var1 + var2 * 16] = var4 / ((float)var3 * 1.0600001F);
+                this.field_76870_h[var1 + var2 * tileSizeBase] = var4 / ((float)var3 * fireFactor2);
 
-                if (var2 >= 19)
+                if (var2 >= fireTileSize - (tileSizeBase >> 4))
                 {
-                    this.field_76870_h[var1 + var2 * 16] = (float)(Math.random() * Math.random() * Math.random() * 4.0D + Math.random() * 0.10000000149011612D + 0.20000000298023224D);
+                    this.field_76870_h[var1 + var2 * tileSizeBase] = (float)(Math.random() * Math.random() * Math.random() * fireFactor1 + Math.random() * 0.1F + 0.2F);
                 }
             }
         }
@@ -53,7 +72,7 @@
         this.field_76870_h = this.field_76869_g;
         this.field_76869_g = var13;
 
-        for (var3 = 0; var3 < 256; ++var3)
+        for (var3 = 0; var3 < tileSizeSquare; ++var3)
         {
             var4 = this.field_76869_g[var3] * 1.8F;
 
