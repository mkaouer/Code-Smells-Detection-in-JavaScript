--- ../src_base/minecraft_server/net/minecraft/src/ConsoleCommandHandler.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/ConsoleCommandHandler.java	0000-00-00 00:00:00.000000000 -0000
@@ -3,6 +3,7 @@
 import java.util.*;
 import java.util.logging.Logger;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.src.forge.DimensionManager;
 
 public class ConsoleCommandHandler
 {
@@ -40,10 +41,9 @@
             {
                 serverconfigurationmanager.savePlayerStates();
             }
-            for (int i = 0; i < minecraftServer.worldMngr.length; i++)
+            for (World world : DimensionManager.getWorlds())
             {
-                WorldServer worldserver = minecraftServer.worldMngr[i];
-                worldserver.saveWorld(true, null);
+                world.saveWorld(true, null);
             }
 
             sendNoticeToOps(s1, "Save complete.");
@@ -51,19 +51,17 @@
         else if (s.toLowerCase().startsWith("save-off"))
         {
             sendNoticeToOps(s1, "Disabling level saving..");
-            for (int j = 0; j < minecraftServer.worldMngr.length; j++)
+            for (World world : DimensionManager.getWorlds())
             {
-                WorldServer worldserver1 = minecraftServer.worldMngr[j];
-                worldserver1.levelSaving = true;
+                ((WorldServer)world).levelSaving = true;
             }
         }
         else if (s.toLowerCase().startsWith("save-on"))
         {
             sendNoticeToOps(s1, "Enabling level saving..");
-            for (int k = 0; k < minecraftServer.worldMngr.length; k++)
+            for (World world : DimensionManager.getWorlds())
             {
-                WorldServer worldserver2 = minecraftServer.worldMngr[k];
-                worldserver2.levelSaving = false;
+                ((WorldServer)world).levelSaving = false;
             }
         }
         else if (s.toLowerCase().startsWith("op "))
@@ -291,20 +289,18 @@
                 int i1 = Integer.parseInt(as4[2]);
                 if ("add".equalsIgnoreCase(s12))
                 {
-                    for (int i2 = 0; i2 < minecraftServer.worldMngr.length; i2++)
+                    for (World world : DimensionManager.getWorlds())
                     {
-                        WorldServer worldserver3 = minecraftServer.worldMngr[i2];
-                        worldserver3.advanceTime(worldserver3.getWorldTime() + (long)i1);
+                        world.advanceTime(world.getWorldTime() + (long)i1);
                     }
 
                     sendNoticeToOps(s1, (new StringBuilder()).append("Added ").append(i1).append(" to time").toString());
                 }
                 else if ("set".equalsIgnoreCase(s12))
                 {
-                    for (int j2 = 0; j2 < minecraftServer.worldMngr.length; j2++)
+                    for (World world : DimensionManager.getWorlds())
                     {
-                        WorldServer worldserver4 = minecraftServer.worldMngr[j2];
-                        worldserver4.advanceTime(i1);
+                        world.advanceTime(i1);
                     }
 
                     sendNoticeToOps(s1, (new StringBuilder()).append("Set time to ").append(i1).toString());
@@ -347,7 +343,7 @@
         }
         else if (s.toLowerCase().startsWith("toggledownfall"))
         {
-            minecraftServer.worldMngr[0].commandToggleDownfall();
+            ((WorldServer)DimensionManager.getWorld(0)).commandToggleDownfall();
             icommandlistener.log("Toggling rain and snow, hold on...");
         }
         else if (s.toLowerCase().startsWith("banlist"))
