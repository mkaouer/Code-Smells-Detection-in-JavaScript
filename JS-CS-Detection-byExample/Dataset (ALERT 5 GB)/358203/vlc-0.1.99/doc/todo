-------------------------------------------------------------------------------
* marque les points prioritaires
+ les points à ne pas oublier avant la fin de l'année
- les trucs qu'il faudra faire, mais qui ne sont pas urgents
? les idées à discuter
-------------------------------------------------------------------------------

Input
=====
    ? utilisation de la NAT pour convoyer des infos sur les vlans
    * gestion du décodeur générique/par défaut
    - passage en b_run    
    + trouver des flux de test bien tordus pour tester l'update des
      PSI, les discontinuites, la gestion des PCR, etc...

Input: vlan method
==================
    + faire une libvlan rapide (benny est dessus)
    - reconcevoir l'API et les dialogues du vlan serveur, faire une
      libvlan avancée, l'encapsuler proprement dans input_vlan, refaire
      le vlan server

Main
====
    - lire un fichier de config en plus de la ligne de commande

Audio output
============
    - détection automatique du materiel ;
    - 8/16 Bits, Signed/Unsigned, Mono/Stereo (sauf 16 Bits Signed Stereo) ;

Audio decoder
=============
    + implémenter une synkronisation absolue et non relative ;
    - MPEG2 Layer I, II, III (sauf Layer II Stereo) ;

AC3 decoder
===========
    * éviter le SIGSEGV lorsque le décodeur mange du garbage en entrée ;
    + implémenter une synkronisation absolue et non relative ;

Video output
============
    + nettoyer la boucle principale
        + tenir compte du fait que lorsque b_die est mis, normalement tous
          les flux et images doivent déjà être detruits -> afficher une
          erreur plutôt que de les supprimer
        + gestion de b_active
        + arbre de décisions avec goto pour les passes
    * convertion et affichage des images
    * gestion des couleurs X11
    ? interpolation pour des display ratios < 1
    ? utiliser XDGA pour accelerer 

Video graphics
==============
    + tout reste à implementer
    + rajouter les convertions rgb->pixel

Video decoder
=============
    * tout tout tout
    + sur p_vout->b_active == 0, trasher tout sauf I
    * parser/trasher de PES

Generic decoder
===============
    * identification des paquets
    * sauvegarde d'un flux multiplexé
    * sauvegarde de flux demultiplexés
    
Interface
=========
    - incrustation d'infos sur les buffers
    + réagir aux signaux

Interface: commandes
====================
    - Plein de commandes à implémenter

Interface: console
==================
    - Utiliser un widget quelconque (portable de préférence) et renommer
      en intf_console si la portabilité est atteinte (sinon, x11console).
    - Utilisation des pixmaps pour egayer un peu en début de ligne
    - Gestion des fontes et couleurs
    - Choix d'une couleur de bg en l'absende de pixmap
    - Ascenceur pour la zone de texte
    - Unicité des enregistrements de l'history - sauvegarde de l'history
    - Gestion de la souris (copier/coller)

General: sources
================
    + déclarer en extern inline les fonctions de mtime et netlist...
    - Eliminer les headers superflus des sources, bien indiquer les dépendances
    - conserver la cohérence des sources: input_psi plutot que psi par exemple.
    + vérifier que des messages sont bien émis partout (faire une recherche sur
      les 'returns'... En particulier dans video_output).

General: processus
==================
    * définir l'ordre de fermeture et les accès
    - identifier les threads (pour ps)
    ? penser au mode mono-thread
    + utiliser les messages b_die, b_error, b_active et b_run

General: X11
============
    - detection de fermeture des fenêtres
    - déclaration des icones pour les window managers
    - implémentation de X{En|Dis}ableScreenSaver dans xutils

Documentation
=============
    - documentation des interfaces de programmation dès qu'elles sont
      au point. En LaTeX ? (pour latex2html).
