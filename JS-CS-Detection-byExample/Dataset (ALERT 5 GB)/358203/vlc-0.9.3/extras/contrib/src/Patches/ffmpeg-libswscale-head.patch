Index: swscale_template.c
===================================================================
--- swscale_template.c	(revision 27579)
+++ swscale_template.c	(working copy)
@@ -1904,7 +1904,7 @@
 BGR2UV(uint16_t, rgb15ToUV, 0, 0, 0, 0x7C00, 0x03E0, 0x001F, RU    , GU<<5, BU<<10, RV    , GV<<5, BV<<10, RGB2YUV_SHIFT+7)
 
 #ifdef HAVE_MMX
-static inline void bgr24ToY_mmx(uint8_t *dst, uint8_t *src, long width, int srcFormat)
+static inline void RENAME(bgr24ToY_mmx)(uint8_t *dst, uint8_t *src, long width, int srcFormat)
 {
 
     if(srcFormat == PIX_FMT_BGR24){
@@ -1957,7 +1957,7 @@
     );
 }
 
-static inline void bgr24ToUV_mmx(uint8_t *dstU, uint8_t *dstV, uint8_t *src, long width, int srcFormat)
+static inline void RENAME(bgr24ToUV_mmx)(uint8_t *dstU, uint8_t *dstV, uint8_t *src, long width, int srcFormat)
 {
     asm volatile(
         "movq                    24+%4, %%mm6       \n\t"
@@ -2019,7 +2019,7 @@
 static inline void RENAME(bgr24ToY)(uint8_t *dst, uint8_t *src, long width)
 {
 #ifdef HAVE_MMX
-    bgr24ToY_mmx(dst, src, width, PIX_FMT_BGR24);
+    RENAME(bgr24ToY_mmx)(dst, src, width, PIX_FMT_BGR24);
 #else
     int i;
     for (i=0; i<width; i++)
@@ -2036,7 +2036,7 @@
 static inline void RENAME(bgr24ToUV)(uint8_t *dstU, uint8_t *dstV, uint8_t *src1, uint8_t *src2, long width)
 {
 #ifdef HAVE_MMX
-    bgr24ToUV_mmx(dstU, dstV, src1, width, PIX_FMT_BGR24);
+    RENAME(bgr24ToUV_mmx)(dstU, dstV, src1, width, PIX_FMT_BGR24);
 #else
     int i;
     for (i=0; i<width; i++)
@@ -2070,7 +2070,7 @@
 static inline void RENAME(rgb24ToY)(uint8_t *dst, uint8_t *src, long width)
 {
 #ifdef HAVE_MMX
-    bgr24ToY_mmx(dst, src, width, PIX_FMT_RGB24);
+    RENAME(bgr24ToY_mmx)(dst, src, width, PIX_FMT_RGB24);
 #else
     int i;
     for (i=0; i<width; i++)
@@ -2089,7 +2089,7 @@
     int i;
     assert(src1==src2);
 #ifdef HAVE_MMX
-    bgr24ToUV_mmx(dstU, dstV, src1, width, PIX_FMT_RGB24);
+    RENAME(bgr24ToUV_mmx)(dstU, dstV, src1, width, PIX_FMT_RGB24);
 #else
     for (i=0; i<width; i++)
     {
