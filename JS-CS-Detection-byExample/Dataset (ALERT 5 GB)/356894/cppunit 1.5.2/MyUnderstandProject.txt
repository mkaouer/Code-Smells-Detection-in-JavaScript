                                                                     Page 1
                         Data Dictionary Summary Report
===============================================================================

__BOARDGAME_H__   (Macro)
   [BoardGame.h, 2]

__BOARDGAMETEST_H__   (Macro)
   [BoardGameTest.h, 2]

__CHESS_H__   (Macro)
   [Chess.h, 2]

__CHESSTEST_H__   (Macro)
   [ChessTest.h, 2]

actual   (Parameter)
   [TestCase.cpp, 31]

actual   (Parameter)
   [TestCase.cpp, 42]

actual   (Parameter)
   [TestCase.cpp, 104]

actual   (Parameter)
   [TestCase.cpp, 111]

argc   (Parameter)
   [main.cpp, 26]

argv   (Parameter)
   [main.cpp, 26]

assert   (Macro)
   [TestCase.h, 152]

assertDoublesEqual   (Macro)
   [TestCase.h, 167]

assertLongsEqual   (Macro)
   [TestCase.h, 172]

begin   (Unknown Member Function)

bgt   (Function)
   [main.cpp, 16]

BoardGame   (Class)
   [BoardGame.h, 11]

BoardGame::reset   (Public Virtual Function)
   [BoardGame.cpp, 4]

BoardGame::~BoardGame   (Public Virtual Function)
   [BoardGame.cpp, 10]

BoardGameTest   (Class Template)
   [BoardGameTest.h, 15]
                                                                     Page 2
                         Data Dictionary Summary Report
===============================================================================

BoardGameTest::BoardGameTest   (Public Function)
   [BoardGameTest.h, 20]

BoardGameTest::BoardGameTest   (Public Function)
   [BoardGameTest.h, 23]

BoardGameTest::countTestCases   (Public Virtual Const Function)
   [BoardGameTest.h, 28]

BoardGameTest::GAMECLASS   (Template Parameter)
   [BoardGameTest.h, 14]

BoardGameTest::m_game   (Protected Object)
   [BoardGameTest.h, 17]

BoardGameTest::setUp   (Public Virtual Function)
   [BoardGameTest.h, 31]

BoardGameTest::tearDown   (Public Virtual Function)
   [BoardGameTest.h, 34]

BoardGameTest::testReset   (Public Function)
   [BoardGameTest.h, 37]

buffer   (Local Object)
   [estring.h, 19]

buffer   (Local Object)
   [estring.h, 23]

buffer   (Local Object)
   [estring.h, 27]

c_str   (Unknown Member Function)

cerr   (Unknown Object)

Chess   (Class)
   [Chess.h, 6]

Chess::getNumberOfPieces   (Public Virtual Const Function)
   [Chess.cpp, 4]

ChessTest   (Class Template)
   [ChessTest.h, 7]

ChessTest::ChessTest   (Public Function)
   [ChessTest.h, 9]

ChessTest::ChessTest   (Public Function)
   [ChessTest.h, 13]

ChessTest::GAMECLASS   (Template Parameter)
   [ChessTest.h, 6]
                                                                     Page 3
                         Data Dictionary Summary Report
===============================================================================

ChessTest::testNumberOfPieces   (Public Function)
   [ChessTest.h, 19]

condition   (Parameter)
   [TestCase.cpp, 19]

conditionExpression   (Parameter)
   [TestCase.cpp, 20]

copy   (Local Object)
   [TestCase.cpp, 65]

count   (Local Object)
   [TestSuite.cpp, 36]

countTestCases   (Unknown Member Function)

cout   (Unknown Object)

CppUnit::estring   (Function)
   [estring.h, 10]

CppUnit::estring   (Function)
   [estring.h, 14]

CppUnit::estring   (Function)
   [estring.h, 18]

CppUnit::estring   (Function)
   [estring.h, 22]

CppUnit::estring   (Function)
   [estring.h, 26]

CppUnit::Exception   (Class)
   [Exception.h, 15]

CppUnit::Exception::Exception   (Public Function)
   [Exception.cpp, 19]

CppUnit::Exception::Exception   (Public Function)
   [Exception.cpp, 11]

CppUnit::Exception::fileName   (Public Function)
   [Exception.cpp, 58]

CppUnit::Exception::lineNumber   (Public Function)
   [Exception.cpp, 52]

CppUnit::Exception::m_fileName   (Private Object)
   [Exception.h, 38]

CppUnit::Exception::m_lineNumber   (Private Object)
   [Exception.h, 37]
                                                                     Page 4
                         Data Dictionary Summary Report
===============================================================================

CppUnit::Exception::m_message   (Private Object)
   [Exception.h, 36]

CppUnit::Exception::operator=   (Public Function)
   [Exception.cpp, 31]

CppUnit::Exception::UNKNOWNFILENAME   (Public Static Object)
   [Exception.cpp, 6]

CppUnit::Exception::UNKNOWNLINENUMBER   (Public Static Object)
   [Exception.cpp, 8]

CppUnit::Exception::what   (Public Const Function)
   [Exception.cpp, 47]

CppUnit::Exception::~Exception   (Public Virtual Function)
   [Exception.cpp, 25]

CppUnit::operator<<   (Function)
   [TextTestResult.cpp, 11]

CppUnit::Test   (Abstract Class)
   [Test.h, 15]

CppUnit::Test::countTestCases   (Public Pure Virtual Const Function)
   [Test.h, 21]

CppUnit::Test::getName   (Public Pure Virtual Const Function)
   [Test.h, 23]

CppUnit::Test::run   (Public Pure Virtual Function)
   [Test.h, 20]

CppUnit::Test::toString   (Public Pure Virtual Const Function)
   [Test.h, 22]

CppUnit::Test::~Test   (Public Virtual Function)
   [Test.h, 18]

CppUnit::TestCaller   (Class Template)
   [TestCaller.h, 45]

CppUnit::TestCaller::Fixture   (Template Parameter)
   [TestCaller.h, 44]

CppUnit::TestCaller::m_fixture   (Private Object)
   [TestCaller.h, 82]

CppUnit::TestCaller::m_test   (Private Object)
   [TestCaller.h, 83]

CppUnit::TestCaller::operator=   (Private Function)
   [TestCaller.h, 79]
                                                                     Page 5
                         Data Dictionary Summary Report
===============================================================================

CppUnit::TestCaller::runTest   (Protected Virtual Function)
   [TestCaller.h, 57]

CppUnit::TestCaller::setUp   (Protected Virtual Function)
   [TestCaller.h, 62]

CppUnit::TestCaller::tearDown   (Protected Virtual Function)
   [TestCaller.h, 67]

CppUnit::TestCaller::TestCaller   (Public Function)
   [TestCaller.h, 50]

CppUnit::TestCaller::TestCaller   (Private Function)
   [TestCaller.h, 78]

CppUnit::TestCaller::TestMethod   (Private Typedef)
   [TestCaller.h, 47]

CppUnit::TestCaller::toString   (Protected Virtual Const Function)
   [TestCaller.h, 72]

CppUnit::TestCase   (Class)
   [TestCase.h, 91]

CppUnit::TestCase::assertEquals   (Protected Function)
   [TestCase.cpp, 30]

CppUnit::TestCase::assertEquals   (Protected Function)
   [TestCase.cpp, 41]

CppUnit::TestCase::assertImplementation   (Protected Function)
   [TestCase.cpp, 19]

CppUnit::TestCase::countTestCases   (Public Virtual Function)
   [TestCase.cpp, 136]

CppUnit::TestCase::defaultResult   (Protected Function)
   [TestCase.cpp, 14]

CppUnit::TestCase::getName   (Public Virtual Const Function)
   [TestCase.cpp, 142]

CppUnit::TestCase::m_name   (Private Object)
   [TestCase.h, 138]

CppUnit::TestCase::notEqualsMessage   (Protected Function)
   [TestCase.cpp, 104]

CppUnit::TestCase::notEqualsMessage   (Protected Function)
   [TestCase.cpp, 111]

CppUnit::TestCase::operator=   (Private Function)
   [TestCase.h, 135]
                                                                     Page 6
                         Data Dictionary Summary Report
===============================================================================

CppUnit::TestCase::run   (Public Virtual Function)
   [TestCase.cpp, 54]

CppUnit::TestCase::run   (Public Virtual Function)
   [TestCase.cpp, 87]

CppUnit::TestCase::runTest   (Protected Virtual Function)
   [TestCase.cpp, 98]

CppUnit::TestCase::setUp   (Public Virtual Function)
   [TestCase.cpp, 149]

CppUnit::TestCase::tearDown   (Public Virtual Function)
   [TestCase.cpp, 154]

CppUnit::TestCase::TestCase   (Public Function)
   [TestCase.cpp, 119]

CppUnit::TestCase::TestCase   (Private Function)
   [TestCase.h, 134]

CppUnit::TestCase::toString   (Public Virtual Const Function)
   [TestCase.cpp, 160]

CppUnit::TestCase::~TestCase   (Public Virtual Function)
   [TestCase.cpp, 131]

CppUnit::TestFailure   (Class)
   [TestFailure.h, 25]

CppUnit::TestFailure::failedTest   (Public Function)
   [TestFailure.h, 47]

CppUnit::TestFailure::m_failedTest   (Protected Object)
   [TestFailure.h, 38]

CppUnit::TestFailure::m_thrownException   (Protected Object)
   [TestFailure.h, 39]

CppUnit::TestFailure::operator=   (Private Function)
   [TestFailure.h, 43]

CppUnit::TestFailure::TestFailure   (Public Function)
   [TestFailure.cpp, 15]

CppUnit::TestFailure::TestFailure   (Private Function)
   [TestFailure.h, 42]

CppUnit::TestFailure::thrownException   (Public Function)
   [TestFailure.h, 52]

CppUnit::TestFailure::toString   (Public Const Function)
   [TestFailure.cpp, 9]
                                                                     Page 7
                         Data Dictionary Summary Report
===============================================================================

CppUnit::TestFailure::~TestFailure   (Public Function)
   [TestFailure.cpp, 21]

CppUnit::TestRegistry   (Class)
   [TestRegistry.h, 19]

CppUnit::TestRegistry::addTest   (Public Function)
   [TestRegistry.h, 28]

CppUnit::TestRegistry::addTest   (Public Function)
   [TestRegistry.cpp, 22]

CppUnit::TestRegistry::getAllTestNames   (Public Const Function)
   [TestRegistry.cpp, 29]

CppUnit::TestRegistry::getAllTests   (Public Const Function)
   [TestRegistry.cpp, 35]

CppUnit::TestRegistry::getRegistry   (Public Static Function)
   [TestRegistry.cpp, 14]

CppUnit::TestRegistry::getTest   (Public Const Function)
   [TestRegistry.h, 27]

CppUnit::TestRegistry::getTest   (Public Const Function)
   [TestRegistry.cpp, 41]

CppUnit::TestRegistry::TestRegistry   (Private Function)
   [TestRegistry.cpp, 66]

CppUnit::TestRegistry::~TestRegistry   (Public Function)
   [TestRegistry.cpp, 58]

CppUnit::TestResult   (Class)
   [TestResult.h, 36]

CppUnit::TestResult::addError   (Public Virtual Function)
   [TestResult.cpp, 31]

CppUnit::TestResult::addFailure   (Public Virtual Function)
   [TestResult.cpp, 39]

CppUnit::TestResult::endTest   (Public Virtual Function)
   [TestResult.cpp, 51]

CppUnit::TestResult::errors   (Public Virtual Function)
   [TestResult.cpp, 81]

CppUnit::TestResult::ExclusiveZone   (Public Class)
   [TestResult.h, 68]

CppUnit::TestResult::ExclusiveZone::ExclusiveZone   (Public Function)
   [TestResult.h, 73]
                                                                     Page 8
                         Data Dictionary Summary Report
===============================================================================

CppUnit::TestResult::ExclusiveZone::m_syncObject   (Private Object)
   [TestResult.h, 70]

CppUnit::TestResult::ExclusiveZone::~ExclusiveZone   (Public Function)
   [TestResult.h, 77]

CppUnit::TestResult::failures   (Public Virtual Function)
   [TestResult.cpp, 87]

CppUnit::TestResult::m_errors   (Protected Object)
   [TestResult.h, 84]

CppUnit::TestResult::m_failures   (Protected Object)
   [TestResult.h, 85]

CppUnit::TestResult::m_runTests   (Protected Object)
   [TestResult.h, 86]

CppUnit::TestResult::m_stop   (Protected Object)
   [TestResult.h, 87]

CppUnit::TestResult::m_syncObject   (Protected Object)
   [TestResult.h, 88]

CppUnit::TestResult::operator=   (Private Function)
   [TestResult.h, 91]

CppUnit::TestResult::runTests   (Public Virtual Function)
   [TestResult.cpp, 57]

CppUnit::TestResult::setSynchronizationObject   (Protected Virtual Function)
   [TestResult.cpp, 107]

CppUnit::TestResult::shouldStop   (Public Virtual Function)
   [TestResult.cpp, 93]

CppUnit::TestResult::startTest   (Public Virtual Function)
   [TestResult.cpp, 45]

CppUnit::TestResult::stop   (Public Virtual Function)
   [TestResult.cpp, 99]

CppUnit::TestResult::SynchronizationObject   (Public Class)
   [TestResult.h, 58]

CppUnit::TestResult::SynchronizationObject::lock   (Public Virtual Function)
   [TestResult.h, 64]

CppUnit::TestResult::SynchronizationObject::SynchronizationObject   (Public Function)
   [TestResult.h, 61]

CppUnit::TestResult::SynchronizationObject::unlock   (Public Virtual Function)
   [TestResult.h, 65]
                                                                     Page 9
                         Data Dictionary Summary Report
===============================================================================

CppUnit::TestResult::SynchronizationObject::~SynchronizationObject   (Public Virtual Function)
   [TestResult.h, 62]

CppUnit::TestResult::testErrors   (Public Virtual Function)
   [TestResult.cpp, 63]

CppUnit::TestResult::testFailures   (Public Virtual Function)
   [TestResult.cpp, 69]

CppUnit::TestResult::TestResult   (Public Function)
   [TestResult.cpp, 21]

CppUnit::TestResult::TestResult   (Private Function)
   [TestResult.h, 90]

CppUnit::TestResult::wasSuccessful   (Public Virtual Function)
   [TestResult.cpp, 75]

CppUnit::TestResult::~TestResult   (Public Virtual Function)
   [TestResult.cpp, 6]

CppUnit::TestSuite   (Class)
   [TestSuite.h, 33]

CppUnit::TestSuite::addTest   (Public Function)
   [TestSuite.cpp, 65]

CppUnit::TestSuite::countTestCases   (Public Function)
   [TestSuite.cpp, 34]

CppUnit::TestSuite::deleteContents   (Public Virtual Function)
   [TestSuite.cpp, 7]

CppUnit::TestSuite::getName   (Public Virtual Const Function)
   [TestSuite.cpp, 80]

CppUnit::TestSuite::m_name   (Private Object)
   [TestSuite.h, 53]

CppUnit::TestSuite::m_tests   (Private Object)
   [TestSuite.h, 52]

CppUnit::TestSuite::operator=   (Private Function)
   [TestSuite.h, 49]

CppUnit::TestSuite::run   (Public Virtual Function)
   [TestSuite.cpp, 18]

CppUnit::TestSuite::TestSuite   (Public Function)
   [TestSuite.cpp, 50]

CppUnit::TestSuite::TestSuite   (Private Function)
   [TestSuite.h, 48]
                                                                     Page 10
                         Data Dictionary Summary Report
===============================================================================

CppUnit::TestSuite::toString   (Public Virtual Const Function)
   [TestSuite.cpp, 73]

CppUnit::TestSuite::~TestSuite   (Public Virtual Function)
   [TestSuite.cpp, 57]

CppUnit::TextTestResult   (Class)
   [TextTestResult.h, 12]

CppUnit::TextTestResult::addError   (Public Virtual Function)
   [TextTestResult.cpp, 17]

CppUnit::TextTestResult::addFailure   (Public Virtual Function)
   [TextTestResult.cpp, 25]

CppUnit::TextTestResult::print   (Public Virtual Function)
   [TextTestResult.h, 18]

CppUnit::TextTestResult::print   (Public Function)
   [TextTestResult.cpp, 98]

CppUnit::TextTestResult::printErrors   (Public Function)
   [TextTestResult.cpp, 42]

CppUnit::TextTestResult::printErrors   (Public Virtual Function)
   [TextTestResult.h, 19]

CppUnit::TextTestResult::printFailures   (Public Function)
   [TextTestResult.cpp, 70]

CppUnit::TextTestResult::printFailures   (Public Virtual Function)
   [TextTestResult.h, 20]

CppUnit::TextTestResult::printHeader   (Public Virtual Function)
   [TextTestResult.h, 21]

CppUnit::TextTestResult::printHeader   (Public Function)
   [TextTestResult.cpp, 108]

CppUnit::TextTestResult::startTest   (Public Virtual Function)
   [TextTestResult.cpp, 33]

CPPUNIT_ESTRING_H   (Macro)
   [estring.h, 2]

CPPUNIT_EXCEPTION_H   (Unknown Macro)

CPPUNIT_EXCEPTION_H   (Macro)
   [Exception.h, 2]

CPPUNIT_SOURCEANNOTATION   (Macro)
   [TestCase.h, 147]

CPPUNIT_TEST_H   (Unknown Macro)
                                                                     Page 11
                         Data Dictionary Summary Report
===============================================================================

CPPUNIT_TEST_H   (Unknown Macro)

CPPUNIT_TEST_H   (Macro)
   [Test.h, 2]

CPPUNIT_TESTCALLER_H   (Macro)
   [TestCaller.h, 2]

CPPUNIT_TESTCASE_H   (Unknown Macro)

CPPUNIT_TESTCASE_H   (Macro)
   [TestCase.h, 2]

CPPUNIT_TESTFAILURE_H   (Unknown Macro)

CPPUNIT_TESTFAILURE_H   (Macro)
   [TestFailure.h, 2]

CPPUNIT_TESTREGISTRY_H   (Macro)
   [TestRegistry.h, 2]

CPPUNIT_TESTRESULT_H   (Macro)
   [TestResult.h, 2]

CPPUNIT_TESTSUITE_H   (Macro)
   [TestSuite.h, 2]

CPPUNIT_TESTSUITE_H   (Unknown Macro)

CPPUNIT_TEXTTESTRESULT_H   (Macro)
   [TextTestResult.h, 2]

cstring   (Parameter)
   [estring.h, 10]

ct   (Function)
   [main.cpp, 17]

delta   (Parameter)
   [TestCase.cpp, 43]

e   (Local Object)
   [TestCase.cpp, 64]

e   (Local Object)
   [TestCase.cpp, 69]

e   (Local Object)
   [TestCase.cpp, 74]

e   (Parameter)
   [TextTestResult.cpp, 17]

e   (Parameter)
   [TextTestResult.cpp, 25]
                                                                     Page 12
                         Data Dictionary Summary Report
===============================================================================

e   (Local Object)
   [TextTestResult.cpp, 55]

e   (Local Object)
   [TextTestResult.cpp, 82]

e   (Parameter)
   [TestResult.cpp, 31]

e   (Parameter)
   [TestResult.cpp, 39]

end   (Unknown Member Function)

endl   (Unknown Object)

exception   (Unknown Class)

exception::operator=   (Unknown Member Function)
   [Exception.cpp, 0]

exception::what   (Unknown Member Function)
   [TestCase.cpp, 0]

expandedString   (Parameter)
   [estring.h, 14]

expected   (Parameter)
   [TestCase.cpp, 30]

expected   (Parameter)
   [TestCase.cpp, 41]

expected   (Parameter)
   [TestCase.cpp, 104]

expected   (Parameter)
   [TestCase.cpp, 111]

fabs   (Unknown Function)

failedTest   (Parameter)
   [TestFailure.cpp, 15]

failure   (Local Object)
   [TextTestResult.cpp, 54]

failure   (Local Object)
   [TextTestResult.cpp, 81]

fileName   (Parameter)
   [TestCase.cpp, 22]

fileName   (Parameter)
   [TestCase.cpp, 33]
                                                                     Page 13
                         Data Dictionary Summary Report
===============================================================================

fileName   (Parameter)
   [TestCase.cpp, 45]

fileName   (Parameter)
   [Exception.cpp, 19]

get   (Unknown Member Function)

i   (Local Object)
   [TextTestResult.cpp, 51]

i   (Local Object)
   [TextTestResult.cpp, 78]

instanciated   (Static Global Object)
   [TestRegistry.cpp, 11]

it   (Unknown Object)

it   (Local Object)
   [TestSuite.cpp, 9]

it   (Local Object)
   [TestSuite.cpp, 20]

it   (Local Object)
   [TestSuite.cpp, 38]

it   (Local Object)
   [TestRegistry.cpp, 60]

it   (Local Object)
   [TestResult.cpp, 8]

iterator   (Unknown Object)

lineNumber   (Parameter)
   [TestCase.cpp, 21]

lineNumber   (Parameter)
   [TestCase.cpp, 32]

lineNumber   (Parameter)
   [TestCase.cpp, 44]

lineNumber   (Parameter)
   [Exception.cpp, 19]

main   (Function)
   [main.cpp, 26]

message   (Parameter)
   [Exception.cpp, 19]
                                                                     Page 14
                         Data Dictionary Summary Report
===============================================================================

name   (Parameter)
   [TestCaller.h, 50]

name   (Parameter)
   [TestSuite.cpp, 50]

name   (Parameter)
   [TestRegistry.cpp, 22]

name   (Parameter)
   [TestCase.cpp, 119]

name   (Unknown Member Function)

name   (Parameter)
   [BoardGameTest.h, 20]

name   (Parameter)
   [ChessTest.h, 9]

name_it   (Local Object)
   [TestRegistry.cpp, 45]

number   (Parameter)
   [estring.h, 18]

number   (Parameter)
   [estring.h, 22]

number   (Parameter)
   [estring.h, 26]

numberOfPieces   (Unknown Member Function)

ostream   (Unknown Type)

other   (Parameter)
   [Exception.cpp, 11]

other   (Parameter)
   [Exception.cpp, 31]

push_back   (Unknown Member Function)

res   (Local Object)
   [main.cpp, 28]

res   (Local Object)
   [TestRegistry.cpp, 43]

reset   (Unknown Member Function)

result   (Parameter)
   [TestSuite.cpp, 18]
                                                                     Page 15
                         Data Dictionary Summary Report
===============================================================================

result   (Parameter)
   [TestCase.cpp, 54]

result   (Local Object)
   [TestCase.cpp, 89]

result   (Parameter)
   [TextTestResult.cpp, 11]

run   (Unknown Member Function)

s_registry   (Static Global Object)
   [TestRegistry.cpp, 10]

s_registry_names   (Global Object)
   [TestRegistry.cpp, 7]

s_registry_tests   (Global Object)
   [TestRegistry.cpp, 8]

setUp   (Unknown Member Function)

sprintf   (Unknown Function)

std   (Unknown Class)

std::auto_ptr   (Unknown Member Type)
   [TestCaller.h, 0]

std::ostream   (Unknown Member Type)
   [TextTestResult.h, 0]

std::string   (Unknown Member Type)
   [Test.h, 0]

std::vector   (Unknown Member Type)
   [TestResult.h, 0]

std::vector   (Public Class)
   [TestRegistry.cpp, 0]

std::vector::begin   (Unknown Member Function)
   [TestSuite.cpp, 0]

std::vector::end   (Unknown Member Function)
   [TestSuite.cpp, 0]

std::vector::iterator   (Unknown Member Type)
   [TestSuite.cpp, 0]

std::vector::push_back   (Unknown Member Function)
   [TestSuite.cpp, 0]

std::vector::size   (Unknown Member Function)
   [TestResult.cpp, 0]
                                                                     Page 16
                         Data Dictionary Summary Report
===============================================================================

stream   (Parameter)
   [TextTestResult.cpp, 11]

stream   (Parameter)
   [TextTestResult.cpp, 42]

stream   (Parameter)
   [TextTestResult.cpp, 70]

stream   (Parameter)
   [TextTestResult.cpp, 98]

stream   (Parameter)
   [TextTestResult.cpp, 108]

string   (Unknown Type)

suite   (Parameter)
   [BoardGameTest.h, 23]

suite   (Parameter)
   [ChessTest.h, 13]

syncObject   (Parameter)
   [TestResult.h, 73]

syncObject   (Parameter)
   [TestResult.cpp, 107]

tearDown   (Unknown Member Function)

test   (Parameter)
   [TestCaller.h, 50]

test   (Local Object)
   [TestSuite.cpp, 26]

test   (Parameter)
   [TestSuite.cpp, 65]

test   (Parameter)
   [TestRegistry.cpp, 22]

test   (Parameter)
   [TextTestResult.cpp, 17]

test   (Parameter)
   [TextTestResult.cpp, 25]

test   (Parameter)
   [TextTestResult.cpp, 33]

test   (Parameter)
   [TestResult.cpp, 31]
                                                                     Page 17
                         Data Dictionary Summary Report
===============================================================================

test   (Parameter)
   [TestResult.cpp, 39]

test   (Parameter)
   [TestResult.cpp, 45]

test   (Parameter)
   [TestResult.cpp, 51]

test_it   (Local Object)
   [TestRegistry.cpp, 44]

testCase   (Parameter)
   [TestRegistry.cpp, 41]

tests   (Unknown Object)

thisClass   (Local Object)
   [TestCase.cpp, 162]

thrownException   (Parameter)
   [TestFailure.cpp, 15]

toString   (Unknown Member Function)

type_info   (Unknown Type)

vector   (Unknown Object)

zone   (Local Object)
   [TestResult.cpp, 32]

zone   (Local Object)
   [TestResult.cpp, 40]

zone   (Local Object)
   [TestResult.cpp, 46]

zone   (Local Object)
   [TestResult.cpp, 52]

zone   (Local Object)
   [TestResult.cpp, 58]

zone   (Local Object)
   [TestResult.cpp, 64]

zone   (Local Object)
   [TestResult.cpp, 70]

zone   (Local Object)
   [TestResult.cpp, 76]

zone   (Local Object)
   [TestResult.cpp, 82]
                                                                     Page 18
                         Data Dictionary Summary Report
===============================================================================

zone   (Local Object)
   [TestResult.cpp, 88]

zone   (Local Object)
   [TestResult.cpp, 94]

zone   (Local Object)
   [TestResult.cpp, 100]
                                                                     Page 19
                              File Contents Report
===============================================================================

BoardGame.cpp
  Methods
    BoardGame::reset
    BoardGame::~BoardGame

BoardGame.h
  Classes
    BoardGame
  Functions
    BoardGame::reset
    BoardGame::~BoardGame

BoardGameTest.h
  Classes
    BoardGameTest
  Functions
    BoardGameTest::BoardGameTest
    BoardGameTest::BoardGameTest
    BoardGameTest::countTestCases
    BoardGameTest::setUp
    BoardGameTest::tearDown
    BoardGameTest::testReset

Chess.cpp
  Methods
    Chess::getNumberOfPieces

Chess.h
  Classes
    Chess
  Functions
    Chess::getNumberOfPieces

ChessTest.h
  Classes
    ChessTest
  Functions
    ChessTest::ChessTest
    ChessTest::ChessTest
    ChessTest::testNumberOfPieces

estring.h
  Functions
    CppUnit::estring
    CppUnit::estring
    CppUnit::estring
    CppUnit::estring
    CppUnit::estring

Exception.cpp
  Methods
    CppUnit::Exception::Exception
    CppUnit::Exception::Exception
    CppUnit::Exception::fileName
    CppUnit::Exception::lineNumber
    CppUnit::Exception::operator=
    CppUnit::Exception::what
    CppUnit::Exception::~Exception
  Static Member Variables
    CppUnit::Exception::UNKNOWNFILENAME
    CppUnit::Exception::UNKNOWNLINENUMBER

Exception.h
  Functions
    CppUnit::Exception::Exception
    CppUnit::Exception::Exception
    CppUnit::Exception::fileName
    CppUnit::Exception::lineNumber
    CppUnit::Exception::operator=
    CppUnit::Exception::what
    CppUnit::Exception::~Exception

main.cpp
  Global Functions
    main

Test.h
  Functions
    CppUnit::Test::countTestCases
    CppUnit::Test::getName
    CppUnit::Test::run
    CppUnit::Test::toString
    CppUnit::Test::~Test

TestCaller.h
  Functions
    CppUnit::TestCaller::operator=
    CppUnit::TestCaller::runTest
    CppUnit::TestCaller::setUp
    CppUnit::TestCaller::tearDown
    CppUnit::TestCaller::TestCaller
    CppUnit::TestCaller::TestCaller
    CppUnit::TestCaller::toString

TestCase.cpp
  Methods
    CppUnit::TestCase::assertEquals
    CppUnit::TestCase::assertEquals
    CppUnit::TestCase::assertImplementation
    CppUnit::TestCase::countTestCases
    CppUnit::TestCase::defaultResult
    CppUnit::TestCase::getName
    CppUnit::TestCase::notEqualsMessage
    CppUnit::TestCase::notEqualsMessage
    CppUnit::TestCase::run
    CppUnit::TestCase::run
    CppUnit::TestCase::runTest
    CppUnit::TestCase::setUp
    CppUnit::TestCase::tearDown
    CppUnit::TestCase::TestCase
    CppUnit::TestCase::toString
    CppUnit::TestCase::~TestCase

TestCase.h
  Functions
    CppUnit::TestCase::assertEquals
    CppUnit::TestCase::assertEquals
    CppUnit::TestCase::assertImplementation
    CppUnit::TestCase::countTestCases
    CppUnit::TestCase::defaultResult
    CppUnit::TestCase::getName
    CppUnit::TestCase::notEqualsMessage
    CppUnit::TestCase::notEqualsMessage
    CppUnit::TestCase::operator=
    CppUnit::TestCase::run
    CppUnit::TestCase::run
    CppUnit::TestCase::runTest
    CppUnit::TestCase::setUp
    CppUnit::TestCase::tearDown
    CppUnit::TestCase::TestCase
    CppUnit::TestCase::TestCase
    CppUnit::TestCase::toString
    CppUnit::TestCase::~TestCase

TestFailure.cpp
  Methods
    CppUnit::TestFailure::TestFailure
    CppUnit::TestFailure::toString
    CppUnit::TestFailure::~TestFailure

TestFailure.h
  Functions
    CppUnit::TestFailure::failedTest
    CppUnit::TestFailure::operator=
    CppUnit::TestFailure::TestFailure
    CppUnit::TestFailure::TestFailure
    CppUnit::TestFailure::thrownException
    CppUnit::TestFailure::toString
    CppUnit::TestFailure::~TestFailure

TestRegistry.cpp
  Local Variables
    instanciated
    s_registry
  Global Variables
    s_registry_names
    s_registry_tests
  Methods
    CppUnit::TestRegistry::addTest
    CppUnit::TestRegistry::getAllTestNames
    CppUnit::TestRegistry::getAllTests
    CppUnit::TestRegistry::getRegistry
    CppUnit::TestRegistry::getTest
    CppUnit::TestRegistry::TestRegistry
    CppUnit::TestRegistry::~TestRegistry

TestRegistry.h
  Functions
    CppUnit::TestRegistry::addTest
    CppUnit::TestRegistry::getAllTestNames
    CppUnit::TestRegistry::getAllTests
    CppUnit::TestRegistry::getTest
    CppUnit::TestRegistry::TestRegistry
    CppUnit::TestRegistry::~TestRegistry

TestResult.cpp
  Methods
    CppUnit::TestResult::addError
    CppUnit::TestResult::addFailure
    CppUnit::TestResult::endTest
    CppUnit::TestResult::errors
    CppUnit::TestResult::failures
    CppUnit::TestResult::runTests
    CppUnit::TestResult::setSynchronizationObject
    CppUnit::TestResult::shouldStop
    CppUnit::TestResult::startTest
    CppUnit::TestResult::stop
    CppUnit::TestResult::testErrors
    CppUnit::TestResult::testFailures
    CppUnit::TestResult::TestResult
    CppUnit::TestResult::wasSuccessful
    CppUnit::TestResult::~TestResult

TestResult.h
  Functions
    CppUnit::TestResult::addError
    CppUnit::TestResult::addFailure
    CppUnit::TestResult::endTest
    CppUnit::TestResult::errors
    CppUnit::TestResult::ExclusiveZone::ExclusiveZone
    CppUnit::TestResult::ExclusiveZone::~ExclusiveZone
    CppUnit::TestResult::failures
    CppUnit::TestResult::operator=
    CppUnit::TestResult::runTests
    CppUnit::TestResult::setSynchronizationObject
    CppUnit::TestResult::shouldStop
    CppUnit::TestResult::startTest
    CppUnit::TestResult::stop
    CppUnit::TestResult::SynchronizationObject::lock
    CppUnit::TestResult::SynchronizationObject::SynchronizationObject
    CppUnit::TestResult::SynchronizationObject::unlock
    CppUnit::TestResult::SynchronizationObject::~SynchronizationObject
    CppUnit::TestResult::testErrors
    CppUnit::TestResult::testFailures
    CppUnit::TestResult::TestResult
    CppUnit::TestResult::TestResult
    CppUnit::TestResult::wasSuccessful
    CppUnit::TestResult::~TestResult

TestSuite.cpp
  Methods
    CppUnit::TestSuite::addTest
    CppUnit::TestSuite::countTestCases
    CppUnit::TestSuite::deleteContents
    CppUnit::TestSuite::getName
    CppUnit::TestSuite::run
    CppUnit::TestSuite::TestSuite
    CppUnit::TestSuite::toString
    CppUnit::TestSuite::~TestSuite

TestSuite.h
  Functions
    CppUnit::TestSuite::addTest
    CppUnit::TestSuite::countTestCases
    CppUnit::TestSuite::deleteContents
    CppUnit::TestSuite::getName
    CppUnit::TestSuite::operator=
    CppUnit::TestSuite::run
    CppUnit::TestSuite::TestSuite
    CppUnit::TestSuite::TestSuite
    CppUnit::TestSuite::toString
    CppUnit::TestSuite::~TestSuite

TextTestResult.cpp
  Global Functions
    CppUnit::operator<<
  Methods
    CppUnit::TextTestResult::addError
    CppUnit::TextTestResult::addFailure
    CppUnit::TextTestResult::print
    CppUnit::TextTestResult::printErrors
    CppUnit::TextTestResult::printFailures
    CppUnit::TextTestResult::printHeader
    CppUnit::TextTestResult::startTest

TextTestResult.h
  Functions
    CppUnit::operator<<
    CppUnit::TextTestResult::addError
    CppUnit::TextTestResult::addFailure
    CppUnit::TextTestResult::print
    CppUnit::TextTestResult::printErrors
    CppUnit::TextTestResult::printFailures
    CppUnit::TextTestResult::printHeader
    CppUnit::TextTestResult::startTest
                                                                     Page 20
                      Program Unit Cross Reference Report
===============================================================================

begin   (Unknown Member Function)
    Call [main.cpp, 32]              main

bgt   (Function)
  Declared as: BoardGameTest
    Declare [main.cpp, 16]           main.cpp

BoardGame::reset   (Public Virtual Function)
  Declared as: bool
    Define [BoardGame.cpp, 4]        BoardGame
    Declare [BoardGame.h, 14]        BoardGame

BoardGame::~BoardGame   (Public Virtual Function)
    Define [BoardGame.cpp, 10]       BoardGame
    Declare [BoardGame.h, 15]        BoardGame

BoardGameTest::BoardGameTest   (Public Function)
    Define [BoardGameTest.h, 20]     BoardGameTest
    Call [ChessTest.h, 9]            ChessTest::ChessTest
    Call [ChessTest.h, 13]           ChessTest::ChessTest

BoardGameTest::BoardGameTest   (Public Function)
    Define [BoardGameTest.h, 23]     BoardGameTest

BoardGameTest::countTestCases   (Public Virtual Const Function)
  Declared as: int
    Define [BoardGameTest.h, 28]     BoardGameTest

BoardGameTest::setUp   (Public Virtual Function)
  Declared as: void
    Define [BoardGameTest.h, 31]     BoardGameTest
    Virtual Call [TestCase.cpp, 58]   CppUnit::TestCase::run

BoardGameTest::tearDown   (Public Virtual Function)
  Declared as: void
    Define [BoardGameTest.h, 34]     BoardGameTest
    Virtual Call [TestCase.cpp, 79]   CppUnit::TestCase::run

BoardGameTest::testReset   (Public Function)
  Declared as: void
    Define [BoardGameTest.h, 37]     BoardGameTest
    Pointer [BoardGameTest.h, 25]    BoardGameTest::BoardGameTest

c_str   (Unknown Member Function)
    Call [Exception.cpp, 48]         CppUnit::Exception::what

Chess::getNumberOfPieces   (Public Virtual Const Function)
  Declared as: int
    Define [Chess.cpp, 4]            Chess
    Declare [Chess.h, 8]             Chess

ChessTest::ChessTest   (Public Function)
    Define [ChessTest.h, 9]          ChessTest
                                                                     Page 21
                      Program Unit Cross Reference Report
===============================================================================

ChessTest::ChessTest   (Public Function)
    Define [ChessTest.h, 13]         ChessTest

ChessTest::testNumberOfPieces   (Public Function)
  Declared as: void
    Define [ChessTest.h, 19]         ChessTest
    Pointer [ChessTest.h, 16]        ChessTest::ChessTest

countTestCases   (Unknown Member Function)
    Call [TestSuite.cpp, 41]         CppUnit::TestSuite::countTestCases

CppUnit::estring   (Function)
  Declared as: std::string
    Define [estring.h, 10]           CppUnit
    Call [TestCase.cpp, 106]         CppUnit::TestCase::notEqualsMessage
    Call [TestCase.cpp, 106]         CppUnit::TestCase::notEqualsMessage
    Call [TestCase.cpp, 113]         CppUnit::TestCase::notEqualsMessage
    Call [TestCase.cpp, 113]         CppUnit::TestCase::notEqualsMessage
    Call [TextTestResult.cpp, 59]    CppUnit::TextTestResult::printErrors
    Call [TextTestResult.cpp, 86]    CppUnit::TextTestResult::printFailures

CppUnit::estring   (Function)
  Declared as: std::string
    Define [estring.h, 14]           CppUnit

CppUnit::estring   (Function)
  Declared as: std::string
    Define [estring.h, 18]           CppUnit

CppUnit::estring   (Function)
  Declared as: std::string
    Define [estring.h, 22]           CppUnit

CppUnit::estring   (Function)
  Declared as: std::string
    Define [estring.h, 26]           CppUnit

CppUnit::Exception::Exception   (Public Function)
    Define [Exception.cpp, 19]       CppUnit::Exception
    Call [TestCase.cpp, 25]          CppUnit::TestCase::assertImplementation
    Call [TestCase.cpp, 65]          CppUnit::TestCase::run
    Call [TestCase.cpp, 70]          CppUnit::TestCase::run
    Call [TestCase.cpp, 74]          CppUnit::TestCase::run
    Declare [Exception.h, 18]        CppUnit::Exception

CppUnit::Exception::Exception   (Public Function)
    Define [Exception.cpp, 11]       CppUnit::Exception
    Declare [Exception.h, 21]        CppUnit::Exception

CppUnit::Exception::fileName   (Public Function)
  Declared as: std::string
    Define [Exception.cpp, 58]       CppUnit::Exception
    Call [TextTestResult.cpp, 60]    CppUnit::TextTestResult::printErrors
    Call [TextTestResult.cpp, 87]    CppUnit::TextTestResult::printFailures
    Declare [Exception.h, 30]        CppUnit::Exception
                                                                     Page 22
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::Exception::lineNumber   (Public Function)
  Declared as: long
    Define [Exception.cpp, 52]       CppUnit::Exception
    Call [TextTestResult.cpp, 59]    CppUnit::TextTestResult::printErrors
    Call [TextTestResult.cpp, 86]    CppUnit::TextTestResult::printFailures
    Declare [Exception.h, 29]        CppUnit::Exception

CppUnit::Exception::operator=   (Public Function)
  Declared as: Exception &
    Define [Exception.cpp, 31]       CppUnit::Exception
    Declare [Exception.h, 25]        CppUnit::Exception

CppUnit::Exception::what   (Public Const Function)
  Declared as: const char *
    Define [Exception.cpp, 47]       CppUnit::Exception
    Call [TestFailure.cpp, 11]       CppUnit::TestFailure::toString
    Call [TextTestResult.cpp, 61]    CppUnit::TextTestResult::printErrors
    Call [TextTestResult.cpp, 88]    CppUnit::TextTestResult::printFailures
    Declare [Exception.h, 27]        CppUnit::Exception

CppUnit::Exception::~Exception   (Public Virtual Function)
    Define [Exception.cpp, 25]       CppUnit::Exception
    Virtual Call [TestFailure.cpp, 23]   CppUnit::TestFailure::~TestFailure
    Call [TestCase.cpp, 26]          CppUnit::TestCase::assertImplementation
    Declare [Exception.h, 23]        CppUnit::Exception

CppUnit::operator<<   (Function)
  Declared as: std::ostream &
    Define [TextTestResult.cpp, 11]   CppUnit
    Declare [TextTestResult.h, 26]   CppUnit

CppUnit::Test::countTestCases   (Public Pure Virtual Const Function)
  Declared as: int
    Declare [Test.h, 21]             CppUnit::Test

CppUnit::Test::getName   (Public Pure Virtual Const Function)
  Declared as: std::string
    Declare [Test.h, 23]             CppUnit::Test

CppUnit::Test::run   (Public Pure Virtual Function)
  Declared as: void
    Virtual Call [TestSuite.cpp, 27]   CppUnit::TestSuite::run
    Declare [Test.h, 20]             CppUnit::Test

CppUnit::Test::toString   (Public Pure Virtual Const Function)
  Declared as: std::string
    Virtual Call [TestFailure.cpp, 11]   CppUnit::TestFailure::toString
    Declare [Test.h, 22]             CppUnit::Test

CppUnit::Test::~Test   (Public Virtual Function)
    Define [Test.h, 18]              CppUnit::Test
    Call [TestSuite.cpp, 60]         CppUnit::TestSuite::~TestSuite
    Call [TestCase.cpp, 132]         CppUnit::TestCase::~TestCase
                                                                     Page 23
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TestCaller::operator=   (Private Function)
  Declared as: TestCaller &
    Declare [TestCaller.h, 79]       CppUnit::TestCaller

CppUnit::TestCaller::runTest   (Protected Virtual Function)
  Declared as: void
    Define [TestCaller.h, 57]        CppUnit::TestCaller
    Virtual Call [TestCase.cpp, 61]   CppUnit::TestCase::run

CppUnit::TestCaller::setUp   (Protected Virtual Function)
  Declared as: void
    Define [TestCaller.h, 62]        CppUnit::TestCaller
    Virtual Call [TestCase.cpp, 58]   CppUnit::TestCase::run

CppUnit::TestCaller::tearDown   (Protected Virtual Function)
  Declared as: void
    Define [TestCaller.h, 67]        CppUnit::TestCaller
    Virtual Call [TestCase.cpp, 79]   CppUnit::TestCase::run

CppUnit::TestCaller::TestCaller   (Public Function)
    Define [TestCaller.h, 50]        CppUnit::TestCaller
    Call [BoardGameTest.h, 25]       BoardGameTest::BoardGameTest
    Call [ChessTest.h, 16]           ChessTest::ChessTest

CppUnit::TestCaller::TestCaller   (Private Function)
    Declare [TestCaller.h, 78]       CppUnit::TestCaller

CppUnit::TestCaller::toString   (Protected Virtual Const Function)
  Declared as: std::string
    Define [TestCaller.h, 72]        CppUnit::TestCaller
    Virtual Call [TestFailure.cpp, 11]   CppUnit::TestFailure::toString

CppUnit::TestCase::assertEquals   (Protected Function)
  Declared as: void
    Define [TestCase.cpp, 30]        CppUnit::TestCase
    Declare [TestCase.h, 116]        CppUnit::TestCase

CppUnit::TestCase::assertEquals   (Protected Function)
  Declared as: void
    Define [TestCase.cpp, 41]        CppUnit::TestCase
    Declare [TestCase.h, 121]        CppUnit::TestCase

CppUnit::TestCase::assertImplementation   (Protected Function)
  Declared as: void
    Define [TestCase.cpp, 19]        CppUnit::TestCase
    Declare [TestCase.h, 110]        CppUnit::TestCase
    Call [TestCase.cpp, 36]          CppUnit::TestCase::assertEquals
    Call [TestCase.cpp, 48]          CppUnit::TestCase::assertEquals
    Call [BoardGameTest.h, 38]       BoardGameTest::testReset
    Call [ChessTest.h, 21]           ChessTest::testNumberOfPieces

CppUnit::TestCase::countTestCases   (Public Virtual Function)
  Declared as: int
    Define [TestCase.cpp, 136]       CppUnit::TestCase
    Declare [TestCase.h, 99]         CppUnit::TestCase
                                                                     Page 24
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TestCase::defaultResult   (Protected Function)
  Declared as: CppUnit::TestResult *
    Define [TestCase.cpp, 14]        CppUnit::TestCase
    Declare [TestCase.h, 109]        CppUnit::TestCase
    Call [TestCase.cpp, 89]          CppUnit::TestCase::run

CppUnit::TestCase::getName   (Public Virtual Const Function)
  Declared as: std::string
    Define [TestCase.cpp, 142]       CppUnit::TestCase
    Virtual Call [TestCaller.h, 74]   CppUnit::TestCaller::toString
    Declare [TestCase.h, 100]        CppUnit::TestCase
    Virtual Call [TestCase.cpp, 163]   CppUnit::TestCase::toString

CppUnit::TestCase::notEqualsMessage   (Protected Function)
  Declared as: std::string
    Define [TestCase.cpp, 104]       CppUnit::TestCase
    Declare [TestCase.h, 127]        CppUnit::TestCase
    Call [TestCase.cpp, 36]          CppUnit::TestCase::assertEquals
    Call [TestCase.cpp, 48]          CppUnit::TestCase::assertEquals

CppUnit::TestCase::notEqualsMessage   (Protected Function)
  Declared as: std::string
    Define [TestCase.cpp, 111]       CppUnit::TestCase
    Declare [TestCase.h, 130]        CppUnit::TestCase

CppUnit::TestCase::operator=   (Private Function)
  Declared as: TestCase &
    Declare [TestCase.h, 135]        CppUnit::TestCase

CppUnit::TestCase::run   (Public Virtual Function)
  Declared as: void
    Define [TestCase.cpp, 54]        CppUnit::TestCase
    Declare [TestCase.h, 97]         CppUnit::TestCase
    Virtual Call [TestCase.cpp, 91]   CppUnit::TestCase::run
    Virtual Call [TestSuite.cpp, 27]   CppUnit::TestSuite::run

CppUnit::TestCase::run   (Public Virtual Function)
  Declared as: TestResult *
    Define [TestCase.cpp, 87]        CppUnit::TestCase
    Declare [TestCase.h, 98]         CppUnit::TestCase

CppUnit::TestCase::runTest   (Protected Virtual Function)
  Declared as: void
    Define [TestCase.cpp, 98]        CppUnit::TestCase
    Declare [TestCase.h, 107]        CppUnit::TestCase
    Virtual Call [TestCase.cpp, 61]   CppUnit::TestCase::run

CppUnit::TestCase::setUp   (Public Virtual Function)
  Declared as: void
    Define [TestCase.cpp, 149]       CppUnit::TestCase
    Declare [TestCase.h, 103]        CppUnit::TestCase
    Virtual Call [TestCase.cpp, 58]   CppUnit::TestCase::run

CppUnit::TestCase::tearDown   (Public Virtual Function)
  Declared as: void
                                                                     Page 25
                      Program Unit Cross Reference Report
===============================================================================
    Define [TestCase.cpp, 154]       CppUnit::TestCase
    Declare [TestCase.h, 104]        CppUnit::TestCase
    Virtual Call [TestCase.cpp, 79]   CppUnit::TestCase::run

CppUnit::TestCase::TestCase   (Public Function)
    Define [TestCase.cpp, 119]       CppUnit::TestCase
    Call [TestCaller.h, 51]          CppUnit::TestCaller::TestCaller
    Declare [TestCase.h, 94]         CppUnit::TestCase
    Call [BoardGameTest.h, 20]       BoardGameTest::BoardGameTest
    Call [BoardGameTest.h, 23]       BoardGameTest::BoardGameTest

CppUnit::TestCase::TestCase   (Private Function)
    Declare [TestCase.h, 134]        CppUnit::TestCase

CppUnit::TestCase::toString   (Public Virtual Const Function)
  Declared as: std::string
    Define [TestCase.cpp, 160]       CppUnit::TestCase
    Declare [TestCase.h, 101]        CppUnit::TestCase
    Virtual Call [TestFailure.cpp, 11]   CppUnit::TestFailure::toString

CppUnit::TestCase::~TestCase   (Public Virtual Function)
    Define [TestCase.cpp, 131]       CppUnit::TestCase
    Declare [TestCase.h, 95]         CppUnit::TestCase

CppUnit::TestFailure::failedTest   (Public Function)
  Declared as: Test *
    Declare [TestFailure.h, 31]      CppUnit::TestFailure
    Define [TestFailure.h, 47]       CppUnit::TestFailure

CppUnit::TestFailure::operator=   (Private Function)
  Declared as: TestFailure &
    Declare [TestFailure.h, 43]      CppUnit::TestFailure

CppUnit::TestFailure::TestFailure   (Public Function)
    Define [TestFailure.cpp, 15]     CppUnit::TestFailure
    Declare [TestFailure.h, 28]      CppUnit::TestFailure
    Call [TestResult.cpp, 32]        CppUnit::TestResult::addError
    Call [TestResult.cpp, 40]        CppUnit::TestResult::addFailure

CppUnit::TestFailure::TestFailure   (Private Function)
    Declare [TestFailure.h, 42]      CppUnit::TestFailure

CppUnit::TestFailure::thrownException   (Public Function)
  Declared as: Exception *
    Declare [TestFailure.h, 33]      CppUnit::TestFailure
    Define [TestFailure.h, 52]       CppUnit::TestFailure
    Call [TextTestResult.cpp, 55]    CppUnit::TextTestResult::printErrors
    Call [TextTestResult.cpp, 61]    CppUnit::TextTestResult::printErrors
    Call [TextTestResult.cpp, 82]    CppUnit::TextTestResult::printFailures
    Call [TextTestResult.cpp, 88]    CppUnit::TextTestResult::printFailures

CppUnit::TestFailure::toString   (Public Const Function)
  Declared as: std::string
    Define [TestFailure.cpp, 9]      CppUnit::TestFailure
    Declare [TestFailure.h, 35]      CppUnit::TestFailure
                                                                     Page 26
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TestFailure::~TestFailure   (Public Function)
    Define [TestFailure.cpp, 21]     CppUnit::TestFailure
    Declare [TestFailure.h, 29]      CppUnit::TestFailure

CppUnit::TestRegistry::addTest   (Public Function)
  Declared as: void
    Declare [TestRegistry.h, 28]     CppUnit::TestRegistry
    Call [TestCase.cpp, 125]         CppUnit::TestCase::TestCase

CppUnit::TestRegistry::addTest   (Public Function)
  Declared as: void
    Define [TestRegistry.cpp, 22]    CppUnit::TestRegistry

CppUnit::TestRegistry::getAllTestNames   (Public Const Function)
  Declared as: const vector &
    Define [TestRegistry.cpp, 29]    CppUnit::TestRegistry
    Declare [TestRegistry.h, 25]     CppUnit::TestRegistry

CppUnit::TestRegistry::getAllTests   (Public Const Function)
  Declared as: const vector &
    Define [TestRegistry.cpp, 35]    CppUnit::TestRegistry
    Declare [TestRegistry.h, 26]     CppUnit::TestRegistry
    Call [main.cpp, 30]              main

CppUnit::TestRegistry::getRegistry   (Public Static Function)
  Declared as: TestRegistry &
    Define [TestRegistry.cpp, 14]    CppUnit::TestRegistry
    Declare [TestRegistry.h, 21]     CppUnit::TestRegistry
    Call [main.cpp, 30]              main
    Call [TestCase.cpp, 125]         CppUnit::TestCase::TestCase

CppUnit::TestRegistry::getTest   (Public Const Function)
  Declared as: std::vector
    Declare [TestRegistry.h, 27]     CppUnit::TestRegistry

CppUnit::TestRegistry::getTest   (Public Const Function)
  Declared as: vector
    Define [TestRegistry.cpp, 41]    CppUnit::TestRegistry

CppUnit::TestRegistry::TestRegistry   (Private Function)
    Define [TestRegistry.cpp, 66]    CppUnit::TestRegistry
    Declare [TestRegistry.h, 31]     CppUnit::TestRegistry
    Call [TestRegistry.cpp, 17]      CppUnit::TestRegistry::getRegistry

CppUnit::TestRegistry::~TestRegistry   (Public Function)
    Define [TestRegistry.cpp, 58]    CppUnit::TestRegistry
    Declare [TestRegistry.h, 23]     CppUnit::TestRegistry

CppUnit::TestResult::addError   (Public Virtual Function)
  Declared as: void
    Define [TestResult.cpp, 31]      CppUnit::TestResult
    Declare [TestResult.h, 43]       CppUnit::TestResult
    Virtual Call [TestCase.cpp, 70]   CppUnit::TestCase::run
    Virtual Call [TestCase.cpp, 75]   CppUnit::TestCase::run
    Call [TextTestResult.cpp, 19]    CppUnit::TextTestResult::addError
                                                                     Page 27
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TestResult::addFailure   (Public Virtual Function)
  Declared as: void
    Define [TestResult.cpp, 39]      CppUnit::TestResult
    Declare [TestResult.h, 44]       CppUnit::TestResult
    Virtual Call [TestCase.cpp, 66]   CppUnit::TestCase::run
    Call [TextTestResult.cpp, 27]    CppUnit::TextTestResult::addFailure

CppUnit::TestResult::endTest   (Public Virtual Function)
  Declared as: void
    Define [TestResult.cpp, 51]      CppUnit::TestResult
    Declare [TestResult.h, 46]       CppUnit::TestResult
    Virtual Call [TestCase.cpp, 81]   CppUnit::TestCase::run

CppUnit::TestResult::errors   (Public Virtual Function)
  Declared as: std::vector &
    Define [TestResult.cpp, 81]      CppUnit::TestResult
    Declare [TestResult.h, 54]       CppUnit::TestResult
    Virtual Call [TextTestResult.cpp, 53]   CppUnit::TextTestResult::printErrors
    Virtual Call [TextTestResult.cpp, 53]   CppUnit::TextTestResult::printErrors

CppUnit::TestResult::ExclusiveZone::ExclusiveZone   (Public Function)
    Define [TestResult.h, 73]        CppUnit::TestResult::ExclusiveZone
    Call [TestResult.cpp, 32]        CppUnit::TestResult::addError
    Call [TestResult.cpp, 40]        CppUnit::TestResult::addFailure
    Call [TestResult.cpp, 46]        CppUnit::TestResult::startTest
    Call [TestResult.cpp, 52]        CppUnit::TestResult::endTest
    Call [TestResult.cpp, 58]        CppUnit::TestResult::runTests
    Call [TestResult.cpp, 64]        CppUnit::TestResult::testErrors
    Call [TestResult.cpp, 70]        CppUnit::TestResult::testFailures
    Call [TestResult.cpp, 76]        CppUnit::TestResult::wasSuccessful
    Call [TestResult.cpp, 82]        CppUnit::TestResult::errors
    Call [TestResult.cpp, 88]        CppUnit::TestResult::failures
    Call [TestResult.cpp, 94]        CppUnit::TestResult::shouldStop
    Call [TestResult.cpp, 100]       CppUnit::TestResult::stop

CppUnit::TestResult::ExclusiveZone::~ExclusiveZone   (Public Function)
    Define [TestResult.h, 77]        CppUnit::TestResult::ExclusiveZone
    Call [TestResult.cpp, 32]        CppUnit::TestResult::addError
    Call [TestResult.cpp, 40]        CppUnit::TestResult::addFailure
    Call [TestResult.cpp, 46]        CppUnit::TestResult::startTest
    Call [TestResult.cpp, 52]        CppUnit::TestResult::endTest
    Call [TestResult.cpp, 58]        CppUnit::TestResult::runTests
    Call [TestResult.cpp, 64]        CppUnit::TestResult::testErrors
    Call [TestResult.cpp, 70]        CppUnit::TestResult::testFailures
    Call [TestResult.cpp, 76]        CppUnit::TestResult::wasSuccessful
    Call [TestResult.cpp, 82]        CppUnit::TestResult::errors
    Call [TestResult.cpp, 88]        CppUnit::TestResult::failures
    Call [TestResult.cpp, 94]        CppUnit::TestResult::shouldStop
    Call [TestResult.cpp, 100]       CppUnit::TestResult::stop

CppUnit::TestResult::failures   (Public Virtual Function)
  Declared as: std::vector &
    Define [TestResult.cpp, 87]      CppUnit::TestResult
    Declare [TestResult.h, 55]       CppUnit::TestResult
    Virtual Call [TextTestResult.cpp, 80]   CppUnit::TextTestResult::printFailures
                                                                     Page 28
                      Program Unit Cross Reference Report
===============================================================================
    Virtual Call [TextTestResult.cpp, 80]   CppUnit::TextTestResult::printFailures

CppUnit::TestResult::operator=   (Private Function)
  Declared as: TestResult &
    Declare [TestResult.h, 91]       CppUnit::TestResult

CppUnit::TestResult::runTests   (Public Virtual Function)
  Declared as: int
    Define [TestResult.cpp, 57]      CppUnit::TestResult
    Declare [TestResult.h, 47]       CppUnit::TestResult
    Virtual Call [TextTestResult.cpp, 111]   CppUnit::TextTestResult::printHeader
    Virtual Call [TextTestResult.cpp, 117]   CppUnit::TextTestResult::printHeader

CppUnit::TestResult::setSynchronizationObject   (Protected Virtual Function)
  Declared as: void
    Define [TestResult.cpp, 107]     CppUnit::TestResult
    Declare [TestResult.h, 82]       CppUnit::TestResult

CppUnit::TestResult::shouldStop   (Public Virtual Function)
  Declared as: bool
    Define [TestResult.cpp, 93]      CppUnit::TestResult
    Virtual Call [TestSuite.cpp, 23]   CppUnit::TestSuite::run
    Declare [TestResult.h, 51]       CppUnit::TestResult

CppUnit::TestResult::startTest   (Public Virtual Function)
  Declared as: void
    Define [TestResult.cpp, 45]      CppUnit::TestResult
    Declare [TestResult.h, 45]       CppUnit::TestResult
    Virtual Call [TestCase.cpp, 56]   CppUnit::TestCase::run
    Call [TextTestResult.cpp, 35]    CppUnit::TextTestResult::startTest

CppUnit::TestResult::stop   (Public Virtual Function)
  Declared as: void
    Define [TestResult.cpp, 99]      CppUnit::TestResult
    Declare [TestResult.h, 52]       CppUnit::TestResult

CppUnit::TestResult::SynchronizationObject::lock   (Public Virtual Function)
  Declared as: void
    Define [TestResult.h, 64]        CppUnit::TestResult::SynchronizationObject
    Virtual Call [TestResult.h, 75]   CppUnit::TestResult::ExclusiveZone::ExclusiveZone

CppUnit::TestResult::SynchronizationObject::SynchronizationObject   (Public Function)
    Define [TestResult.h, 61]        CppUnit::TestResult::SynchronizationObject
    Call [TestResult.cpp, 22]        CppUnit::TestResult::TestResult

CppUnit::TestResult::SynchronizationObject::unlock   (Public Virtual Function)
  Declared as: void
    Define [TestResult.h, 65]        CppUnit::TestResult::SynchronizationObject
    Virtual Call [TestResult.h, 78]   CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::SynchronizationObject::~SynchronizationObject   (Public Virtual Function)
    Define [TestResult.h, 62]        CppUnit::TestResult::SynchronizationObject
    Virtual Call [TestResult.cpp, 16]   CppUnit::TestResult::~TestResult
    Virtual Call [TestResult.cpp, 108]   CppUnit::TestResult::setSynchronizationObject
                                                                     Page 29
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TestResult::testErrors   (Public Virtual Function)
  Declared as: int
    Define [TestResult.cpp, 63]      CppUnit::TestResult
    Declare [TestResult.h, 48]       CppUnit::TestResult
    Virtual Call [TextTestResult.cpp, 44]   CppUnit::TextTestResult::printErrors
    Virtual Call [TextTestResult.cpp, 46]   CppUnit::TextTestResult::printErrors
    Virtual Call [TextTestResult.cpp, 47]   CppUnit::TextTestResult::printErrors
    Virtual Call [TextTestResult.cpp, 49]   CppUnit::TextTestResult::printErrors
    Virtual Call [TextTestResult.cpp, 121]   CppUnit::TextTestResult::printHeader

CppUnit::TestResult::testFailures   (Public Virtual Function)
  Declared as: int
    Define [TestResult.cpp, 69]      CppUnit::TestResult
    Declare [TestResult.h, 49]       CppUnit::TestResult
    Virtual Call [TextTestResult.cpp, 72]   CppUnit::TextTestResult::printFailures
    Virtual Call [TextTestResult.cpp, 73]   CppUnit::TextTestResult::printFailures
    Virtual Call [TextTestResult.cpp, 74]   CppUnit::TextTestResult::printFailures
    Virtual Call [TextTestResult.cpp, 76]   CppUnit::TextTestResult::printFailures
    Virtual Call [TextTestResult.cpp, 119]   CppUnit::TextTestResult::printHeader

CppUnit::TestResult::TestResult   (Public Function)
    Define [TestResult.cpp, 21]      CppUnit::TestResult
    Declare [TestResult.h, 40]       CppUnit::TestResult
    Call [TestCase.cpp, 15]          CppUnit::TestCase::defaultResult

CppUnit::TestResult::TestResult   (Private Function)
    Declare [TestResult.h, 90]       CppUnit::TestResult

CppUnit::TestResult::wasSuccessful   (Public Virtual Function)
  Declared as: bool
    Define [TestResult.cpp, 75]      CppUnit::TestResult
    Declare [TestResult.h, 50]       CppUnit::TestResult
    Virtual Call [TextTestResult.cpp, 110]   CppUnit::TextTestResult::printHeader

CppUnit::TestResult::~TestResult   (Public Virtual Function)
    Define [TestResult.cpp, 6]       CppUnit::TestResult
    Declare [TestResult.h, 41]       CppUnit::TestResult

CppUnit::TestSuite::addTest   (Public Function)
  Declared as: void
    Define [TestSuite.cpp, 65]       CppUnit::TestSuite
    Declare [TestSuite.h, 41]        CppUnit::TestSuite
    Call [BoardGameTest.h, 25]       BoardGameTest::BoardGameTest
    Call [ChessTest.h, 15]           ChessTest::ChessTest

CppUnit::TestSuite::countTestCases   (Public Function)
  Declared as: int
    Define [TestSuite.cpp, 34]       CppUnit::TestSuite
    Declare [TestSuite.h, 40]        CppUnit::TestSuite

CppUnit::TestSuite::deleteContents   (Public Virtual Function)
  Declared as: void
    Define [TestSuite.cpp, 7]        CppUnit::TestSuite
    Virtual Call [TestSuite.cpp, 59]   CppUnit::TestSuite::~TestSuite
    Declare [TestSuite.h, 45]        CppUnit::TestSuite
                                                                     Page 30
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TestSuite::getName   (Public Virtual Const Function)
  Declared as: std::string
    Define [TestSuite.cpp, 80]       CppUnit::TestSuite
    Virtual Call [TestSuite.cpp, 75]   CppUnit::TestSuite::toString
    Declare [TestSuite.h, 42]        CppUnit::TestSuite

CppUnit::TestSuite::operator=   (Private Function)
  Declared as: TestSuite &
    Declare [TestSuite.h, 49]        CppUnit::TestSuite

CppUnit::TestSuite::run   (Public Virtual Function)
  Declared as: void
    Define [TestSuite.cpp, 18]       CppUnit::TestSuite
    Declare [TestSuite.h, 39]        CppUnit::TestSuite
    Virtual Call [TestSuite.cpp, 27]   CppUnit::TestSuite::run

CppUnit::TestSuite::TestSuite   (Public Function)
    Define [TestSuite.cpp, 50]       CppUnit::TestSuite
    Declare [TestSuite.h, 36]        CppUnit::TestSuite

CppUnit::TestSuite::TestSuite   (Private Function)
    Declare [TestSuite.h, 48]        CppUnit::TestSuite

CppUnit::TestSuite::toString   (Public Virtual Const Function)
  Declared as: std::string
    Define [TestSuite.cpp, 73]       CppUnit::TestSuite
    Declare [TestSuite.h, 43]        CppUnit::TestSuite
    Virtual Call [TestFailure.cpp, 11]   CppUnit::TestFailure::toString

CppUnit::TestSuite::~TestSuite   (Public Virtual Function)
    Define [TestSuite.cpp, 57]       CppUnit::TestSuite
    Declare [TestSuite.h, 37]        CppUnit::TestSuite

CppUnit::TextTestResult::addError   (Public Virtual Function)
  Declared as: void
    Define [TextTestResult.cpp, 17]   CppUnit::TextTestResult
    Declare [TextTestResult.h, 15]   CppUnit::TextTestResult
    Virtual Call [TestCase.cpp, 70]   CppUnit::TestCase::run
    Virtual Call [TestCase.cpp, 75]   CppUnit::TestCase::run

CppUnit::TextTestResult::addFailure   (Public Virtual Function)
  Declared as: void
    Define [TextTestResult.cpp, 25]   CppUnit::TextTestResult
    Declare [TextTestResult.h, 16]   CppUnit::TextTestResult
    Virtual Call [TestCase.cpp, 66]   CppUnit::TestCase::run

CppUnit::TextTestResult::print   (Public Virtual Function)
  Declared as: void
    Virtual Call [TextTestResult.cpp, 13]   CppUnit::operator<<
    Declare [TextTestResult.h, 18]   CppUnit::TextTestResult

CppUnit::TextTestResult::print   (Public Function)
  Declared as: void
    Define [TextTestResult.cpp, 98]   CppUnit::TextTestResult
                                                                     Page 31
                      Program Unit Cross Reference Report
===============================================================================

CppUnit::TextTestResult::printErrors   (Public Function)
  Declared as: void
    Define [TextTestResult.cpp, 42]   CppUnit::TextTestResult

CppUnit::TextTestResult::printErrors   (Public Virtual Function)
  Declared as: void
    Virtual Call [TextTestResult.cpp, 101]   CppUnit::TextTestResult::print
    Declare [TextTestResult.h, 19]   CppUnit::TextTestResult

CppUnit::TextTestResult::printFailures   (Public Function)
  Declared as: void
    Define [TextTestResult.cpp, 70]   CppUnit::TextTestResult

CppUnit::TextTestResult::printFailures   (Public Virtual Function)
  Declared as: void
    Virtual Call [TextTestResult.cpp, 102]   CppUnit::TextTestResult::print
    Declare [TextTestResult.h, 20]   CppUnit::TextTestResult

CppUnit::TextTestResult::printHeader   (Public Virtual Function)
  Declared as: void
    Virtual Call [TextTestResult.cpp, 100]   CppUnit::TextTestResult::print
    Declare [TextTestResult.h, 21]   CppUnit::TextTestResult

CppUnit::TextTestResult::printHeader   (Public Function)
  Declared as: void
    Define [TextTestResult.cpp, 108]   CppUnit::TextTestResult

CppUnit::TextTestResult::startTest   (Public Virtual Function)
  Declared as: void
    Define [TextTestResult.cpp, 33]   CppUnit::TextTestResult
    Declare [TextTestResult.h, 17]   CppUnit::TextTestResult
    Virtual Call [TestCase.cpp, 56]   CppUnit::TestCase::run

ct   (Function)
  Declared as: ChessTest
    Declare [main.cpp, 17]           main.cpp

end   (Unknown Member Function)
    Call [main.cpp, 33]              main

exception::operator=   (Unknown Member Function)
    Declare [Exception.cpp, 0]       exception
    Call [Exception.cpp, 33]         CppUnit::Exception::operator=

exception::what   (Unknown Member Function)
    Declare [TestCase.cpp, 0]        exception
    Call [TestCase.cpp, 70]          CppUnit::TestCase::run

fabs   (Unknown Function)
    Call [TestCase.cpp, 47]          CppUnit::TestCase::assertEquals

get   (Unknown Member Function)
    Call [TestCaller.h, 59]          CppUnit::TestCaller::runTest
    Call [TestCaller.h, 64]          CppUnit::TestCaller::setUp
    Call [TestCaller.h, 69]          CppUnit::TestCaller::tearDown
                                                                     Page 32
                      Program Unit Cross Reference Report
===============================================================================

main   (Function)
  Declared as: int
    Define [main.cpp, 26]            main.cpp

name   (Unknown Member Function)
    Call [TestCase.cpp, 163]         CppUnit::TestCase::toString

numberOfPieces   (Unknown Member Function)
    Call [ChessTest.h, 21]           ChessTest::testNumberOfPieces

push_back   (Unknown Member Function)
    Call [TestRegistry.cpp, 24]      CppUnit::TestRegistry::addTest
    Call [TestRegistry.cpp, 25]      CppUnit::TestRegistry::addTest

reset   (Unknown Member Function)
    Call [BoardGameTest.h, 38]       BoardGameTest::testReset

run   (Unknown Member Function)
    Call [main.cpp, 37]              main

setUp   (Unknown Member Function)
    Call [TestCaller.h, 64]          CppUnit::TestCaller::setUp

sprintf   (Unknown Function)
    Call [estring.h, 19]             CppUnit::estring
    Call [estring.h, 23]             CppUnit::estring
    Call [estring.h, 27]             CppUnit::estring

std::vector::begin   (Unknown Member Function)
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 9]          CppUnit::TestSuite::deleteContents
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 20]         CppUnit::TestSuite::run
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 38]         CppUnit::TestSuite::countTestCases
    Declare [TestRegistry.cpp, 0]    std::vector
    Call [TestRegistry.cpp, 46]      CppUnit::TestRegistry::getTest
    Call [TestRegistry.cpp, 47]      CppUnit::TestRegistry::getTest
    Call [TestRegistry.cpp, 60]      CppUnit::TestRegistry::~TestRegistry
    Declare [TextTestResult.cpp, 0]   std::vector
    Call [TextTestResult.cpp, 53]    CppUnit::TextTestResult::printErrors
    Declare [TextTestResult.cpp, 0]   std::vector
    Call [TextTestResult.cpp, 80]    CppUnit::TextTestResult::printFailures
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 10]        CppUnit::TestResult::~TestResult
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 13]        CppUnit::TestResult::~TestResult

std::vector::end   (Unknown Member Function)
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 10]         CppUnit::TestSuite::deleteContents
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 21]         CppUnit::TestSuite::run
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 39]         CppUnit::TestSuite::countTestCases
                                                                     Page 33
                      Program Unit Cross Reference Report
===============================================================================
    Declare [TestRegistry.cpp, 0]    std::vector
    Call [TestRegistry.cpp, 48]      CppUnit::TestRegistry::getTest
    Call [TestRegistry.cpp, 61]      CppUnit::TestRegistry::~TestRegistry
    Declare [TextTestResult.cpp, 0]   std::vector
    Call [TextTestResult.cpp, 53]    CppUnit::TextTestResult::printErrors
    Declare [TextTestResult.cpp, 0]   std::vector
    Call [TextTestResult.cpp, 80]    CppUnit::TextTestResult::printFailures
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 10]        CppUnit::TestResult::~TestResult
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 13]        CppUnit::TestResult::~TestResult

std::vector::push_back   (Unknown Member Function)
    Declare [TestSuite.cpp, 0]       std::vector
    Call [TestSuite.cpp, 67]         CppUnit::TestSuite::addTest
    Declare [TestRegistry.cpp, 0]    std::vector
    Call [TestRegistry.cpp, 51]      CppUnit::TestRegistry::getTest
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 32]        CppUnit::TestResult::addError
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 40]        CppUnit::TestResult::addFailure

std::vector::size   (Unknown Member Function)
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 64]        CppUnit::TestResult::testErrors
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 70]        CppUnit::TestResult::testFailures
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 76]        CppUnit::TestResult::wasSuccessful
    Declare [TestResult.cpp, 0]      std::vector
    Call [TestResult.cpp, 76]        CppUnit::TestResult::wasSuccessful

tearDown   (Unknown Member Function)
    Call [TestCaller.h, 69]          CppUnit::TestCaller::tearDown

toString   (Unknown Member Function)
    Call [main.cpp, 35]              main
                                                                     Page 34
                         Object Cross Reference Report
===============================================================================

actual   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 31]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 35]           CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 36]           CppUnit::TestCase::assertEquals

actual   (Parameter)
  Declared as: double
    Define [TestCase.cpp, 42]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 47]           CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 48]           CppUnit::TestCase::assertEquals

actual   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 104]       CppUnit::TestCase::notEqualsMessage
    Use [TestCase.cpp, 106]          CppUnit::TestCase::notEqualsMessage

actual   (Parameter)
  Declared as: double
    Define [TestCase.cpp, 111]       CppUnit::TestCase::notEqualsMessage
    Use [TestCase.cpp, 113]          CppUnit::TestCase::notEqualsMessage

argc   (Parameter)
  Declared as: int
    Define [main.cpp, 26]            main

argv   (Parameter)
  Declared as: char **
    Define [main.cpp, 26]            main

BoardGameTest::m_game   (Protected Object)
  Declared as: GAMECLASS *
    Define [BoardGameTest.h, 17]     BoardGameTest
    Set [BoardGameTest.h, 32]        BoardGameTest::setUp
    Use [BoardGameTest.h, 35]        BoardGameTest::tearDown
    Deref Use [BoardGameTest.h, 38]   BoardGameTest::testReset
    Deref Use [ChessTest.h, 21]      ChessTest::testNumberOfPieces

buffer   (Local Object)
  Declared as: char [50]
    Define [estring.h, 19]           CppUnit::estring
    Use [estring.h, 19]              CppUnit::estring
    Use [estring.h, 19]              CppUnit::estring

buffer   (Local Object)
  Declared as: char [50]
    Define [estring.h, 23]           CppUnit::estring
    Use [estring.h, 23]              CppUnit::estring
    Use [estring.h, 23]              CppUnit::estring

buffer   (Local Object)
  Declared as: char [50]
    Define [estring.h, 27]           CppUnit::estring
    Use [estring.h, 27]              CppUnit::estring
    Use [estring.h, 27]              CppUnit::estring
                                                                     Page 35
                         Object Cross Reference Report
===============================================================================

cerr   (Unknown Object)
    Use [TextTestResult.cpp, 20]     CppUnit::TextTestResult::addError
    Use [TextTestResult.cpp, 28]     CppUnit::TextTestResult::addFailure
    Use [TextTestResult.cpp, 36]     CppUnit::TextTestResult::startTest

condition   (Parameter)
  Declared as: bool
    Define [TestCase.cpp, 19]        CppUnit::TestCase::assertImplementation
    Use [TestCase.cpp, 24]           CppUnit::TestCase::assertImplementation

conditionExpression   (Parameter)
  Declared as: std::string
    Define [TestCase.cpp, 20]        CppUnit::TestCase::assertImplementation
    Use [TestCase.cpp, 25]           CppUnit::TestCase::assertImplementation

copy   (Local Object)
  Declared as: Exception *=new Exception(e)
    Define [TestCase.cpp, 65]        CppUnit::TestCase::run
    Init [TestCase.cpp, 65]          CppUnit::TestCase::run
    Use [TestCase.cpp, 66]           CppUnit::TestCase::run

count   (Local Object)
  Declared as: int=0
    Define [TestSuite.cpp, 36]       CppUnit::TestSuite::countTestCases
    Init [TestSuite.cpp, 36]         CppUnit::TestSuite::countTestCases
    Modify [TestSuite.cpp, 41]       CppUnit::TestSuite::countTestCases
    Return [TestSuite.cpp, 43]       CppUnit::TestSuite::countTestCases

cout   (Unknown Object)
    Use [main.cpp, 35]               main
    Use [main.cpp, 40]               main
    Use [TextTestResult.cpp, 111]    CppUnit::TextTestResult::printHeader
    Use [TextTestResult.cpp, 113]    CppUnit::TextTestResult::printHeader

CppUnit::Exception::m_fileName   (Private Object)
  Declared as: std::string
    Define [Exception.h, 38]         CppUnit::Exception
    Use [Exception.cpp, 16]          CppUnit::Exception::Exception
    Set [Exception.cpp, 16]          CppUnit::Exception::Exception
    Init [Exception.cpp, 20]         CppUnit::Exception::Exception
    Use [Exception.cpp, 38]          CppUnit::Exception::operator=
    Set [Exception.cpp, 38]          CppUnit::Exception::operator=
    Return [Exception.cpp, 59]       CppUnit::Exception::fileName

CppUnit::Exception::m_lineNumber   (Private Object)
  Declared as: long
    Define [Exception.h, 37]         CppUnit::Exception
    Use [Exception.cpp, 15]          CppUnit::Exception::Exception
    Set [Exception.cpp, 15]          CppUnit::Exception::Exception
    Init [Exception.cpp, 20]         CppUnit::Exception::Exception
    Use [Exception.cpp, 37]          CppUnit::Exception::operator=
    Set [Exception.cpp, 37]          CppUnit::Exception::operator=
    Return [Exception.cpp, 53]       CppUnit::Exception::lineNumber
                                                                     Page 36
                         Object Cross Reference Report
===============================================================================

CppUnit::Exception::m_message   (Private Object)
  Declared as: std::string
    Define [Exception.h, 36]         CppUnit::Exception
    Use [Exception.cpp, 14]          CppUnit::Exception::Exception
    Set [Exception.cpp, 14]          CppUnit::Exception::Exception
    Init [Exception.cpp, 20]         CppUnit::Exception::Exception
    Use [Exception.cpp, 36]          CppUnit::Exception::operator=
    Set [Exception.cpp, 36]          CppUnit::Exception::operator=
    Return [Exception.cpp, 48]       CppUnit::Exception::what

CppUnit::Exception::UNKNOWNFILENAME   (Public Static Object)
  Declared as: const std::string="<unknown>"
    Define [Exception.cpp, 6]        CppUnit::Exception
    Init [Exception.cpp, 6]          Exception.cpp
    Declare [Exception.h, 32]        CppUnit::Exception

CppUnit::Exception::UNKNOWNLINENUMBER   (Public Static Object)
  Declared as: const int=-1
    Define [Exception.cpp, 8]        CppUnit::Exception
    Init [Exception.cpp, 8]          Exception.cpp
    Declare [Exception.h, 33]        CppUnit::Exception

CppUnit::TestCaller::m_fixture   (Private Object)
  Declared as: std::auto_ptr
    Define [TestCaller.h, 82]        CppUnit::TestCaller
    Init [TestCaller.h, 52]          CppUnit::TestCaller::TestCaller
    Use [TestCaller.h, 59]           CppUnit::TestCaller::runTest
    Use [TestCaller.h, 64]           CppUnit::TestCaller::setUp
    Use [TestCaller.h, 69]           CppUnit::TestCaller::tearDown

CppUnit::TestCaller::m_test   (Private Object)
  Declared as: TestMethod
    Define [TestCaller.h, 83]        CppUnit::TestCaller
    Init [TestCaller.h, 53]          CppUnit::TestCaller::TestCaller
    Use [TestCaller.h, 59]           CppUnit::TestCaller::runTest

CppUnit::TestCase::m_name   (Private Object)
  Declared as: const std::string
    Define [TestCase.h, 138]         CppUnit::TestCase
    Init [TestCase.cpp, 120]         CppUnit::TestCase::TestCase
    Use [TestCase.cpp, 122]          CppUnit::TestCase::TestCase
    Use [TestCase.cpp, 125]          CppUnit::TestCase::TestCase
    Return [TestCase.cpp, 144]       CppUnit::TestCase::getName

CppUnit::TestFailure::m_failedTest   (Protected Object)
  Declared as: Test *
    Define [TestFailure.h, 38]       CppUnit::TestFailure
    Return [TestFailure.h, 48]       CppUnit::TestFailure::failedTest
    Return [TestFailure.cpp, 11]     CppUnit::TestFailure::toString
    Init [TestFailure.cpp, 16]       CppUnit::TestFailure::TestFailure

CppUnit::TestFailure::m_thrownException   (Protected Object)
  Declared as: Exception *
    Define [TestFailure.h, 39]       CppUnit::TestFailure
    Return [TestFailure.h, 53]       CppUnit::TestFailure::thrownException
                                                                     Page 37
                         Object Cross Reference Report
===============================================================================
    Return [TestFailure.cpp, 11]     CppUnit::TestFailure::toString
    Init [TestFailure.cpp, 16]       CppUnit::TestFailure::TestFailure
    Use [TestFailure.cpp, 23]        CppUnit::TestFailure::~TestFailure

CppUnit::TestResult::ExclusiveZone::m_syncObject   (Private Object)
  Declared as: SynchronizationObject *
    Define [TestResult.h, 70]        CppUnit::TestResult::ExclusiveZone
    Init [TestResult.h, 74]          CppUnit::TestResult::ExclusiveZone::ExclusiveZone
    Deref Use [TestResult.h, 75]     CppUnit::TestResult::ExclusiveZone::ExclusiveZone
    Deref Use [TestResult.h, 78]     CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::m_errors   (Protected Object)
  Declared as: std::vector
    Define [TestResult.h, 84]        CppUnit::TestResult
    Use [TestResult.cpp, 10]         CppUnit::TestResult::~TestResult
    Use [TestResult.cpp, 10]         CppUnit::TestResult::~TestResult
    Init [TestResult.cpp, 21]        CppUnit::TestResult::TestResult
    Use [TestResult.cpp, 32]         CppUnit::TestResult::addError
    Return [TestResult.cpp, 64]      CppUnit::TestResult::testErrors
    Return [TestResult.cpp, 76]      CppUnit::TestResult::wasSuccessful
    Return [TestResult.cpp, 82]      CppUnit::TestResult::errors

CppUnit::TestResult::m_failures   (Protected Object)
  Declared as: std::vector
    Define [TestResult.h, 85]        CppUnit::TestResult
    Use [TestResult.cpp, 13]         CppUnit::TestResult::~TestResult
    Use [TestResult.cpp, 13]         CppUnit::TestResult::~TestResult
    Init [TestResult.cpp, 21]        CppUnit::TestResult::TestResult
    Use [TestResult.cpp, 40]         CppUnit::TestResult::addFailure
    Return [TestResult.cpp, 70]      CppUnit::TestResult::testFailures
    Return [TestResult.cpp, 76]      CppUnit::TestResult::wasSuccessful
    Return [TestResult.cpp, 88]      CppUnit::TestResult::failures

CppUnit::TestResult::m_runTests   (Protected Object)
  Declared as: int
    Define [TestResult.h, 86]        CppUnit::TestResult
    Set [TestResult.cpp, 23]         CppUnit::TestResult::TestResult
    Modify [TestResult.cpp, 46]      CppUnit::TestResult::startTest
    Return [TestResult.cpp, 58]      CppUnit::TestResult::runTests

CppUnit::TestResult::m_stop   (Protected Object)
  Declared as: bool
    Define [TestResult.h, 87]        CppUnit::TestResult
    Set [TestResult.cpp, 23]         CppUnit::TestResult::TestResult
    Return [TestResult.cpp, 94]      CppUnit::TestResult::shouldStop
    Set [TestResult.cpp, 100]        CppUnit::TestResult::stop

CppUnit::TestResult::m_syncObject   (Protected Object)
  Declared as: SynchronizationObject *
    Define [TestResult.h, 88]        CppUnit::TestResult
    Use [TestResult.cpp, 16]         CppUnit::TestResult::~TestResult
    Init [TestResult.cpp, 22]        CppUnit::TestResult::TestResult
    Use [TestResult.cpp, 32]         CppUnit::TestResult::addError
    Use [TestResult.cpp, 40]         CppUnit::TestResult::addFailure
    Use [TestResult.cpp, 46]         CppUnit::TestResult::startTest
    Use [TestResult.cpp, 52]         CppUnit::TestResult::endTest
                                                                     Page 38
                         Object Cross Reference Report
===============================================================================
    Use [TestResult.cpp, 58]         CppUnit::TestResult::runTests
    Use [TestResult.cpp, 64]         CppUnit::TestResult::testErrors
    Use [TestResult.cpp, 70]         CppUnit::TestResult::testFailures
    Use [TestResult.cpp, 76]         CppUnit::TestResult::wasSuccessful
    Use [TestResult.cpp, 82]         CppUnit::TestResult::errors
    Use [TestResult.cpp, 88]         CppUnit::TestResult::failures
    Use [TestResult.cpp, 94]         CppUnit::TestResult::shouldStop
    Use [TestResult.cpp, 100]        CppUnit::TestResult::stop
    Use [TestResult.cpp, 108]        CppUnit::TestResult::setSynchronizationObject
    Set [TestResult.cpp, 108]        CppUnit::TestResult::setSynchronizationObject

CppUnit::TestSuite::m_name   (Private Object)
  Declared as: const std::string
    Define [TestSuite.h, 53]         CppUnit::TestSuite
    Init [TestSuite.cpp, 51]         CppUnit::TestSuite::TestSuite
    Return [TestSuite.cpp, 82]       CppUnit::TestSuite::getName

CppUnit::TestSuite::m_tests   (Private Object)
  Declared as: std::vector
    Define [TestSuite.h, 52]         CppUnit::TestSuite
    Use [TestSuite.cpp, 9]           CppUnit::TestSuite::deleteContents
    Use [TestSuite.cpp, 10]          CppUnit::TestSuite::deleteContents
    Use [TestSuite.cpp, 20]          CppUnit::TestSuite::run
    Use [TestSuite.cpp, 21]          CppUnit::TestSuite::run
    Use [TestSuite.cpp, 38]          CppUnit::TestSuite::countTestCases
    Use [TestSuite.cpp, 39]          CppUnit::TestSuite::countTestCases
    Init [TestSuite.cpp, 50]         CppUnit::TestSuite::TestSuite
    Use [TestSuite.cpp, 67]          CppUnit::TestSuite::addTest

cstring   (Parameter)
  Declared as: const char *
    Define [estring.h, 10]           CppUnit::estring
    Use [estring.h, 11]              CppUnit::estring

delta   (Parameter)
  Declared as: double
    Define [TestCase.cpp, 43]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 47]           CppUnit::TestCase::assertEquals

e   (Local Object)
  Declared as: Exception
    Define [TestCase.cpp, 64]        CppUnit::TestCase::run
    Use [TestCase.cpp, 65]           CppUnit::TestCase::run

e   (Local Object)
  Declared as: exception
    Define [TestCase.cpp, 69]        CppUnit::TestCase::run
    Use [TestCase.cpp, 70]           CppUnit::TestCase::run

e   (Local Object)
  Declared as: Exception *=new Exception("unknown exception")
    Define [TestCase.cpp, 74]        CppUnit::TestCase::run
    Init [TestCase.cpp, 74]          CppUnit::TestCase::run
    Use [TestCase.cpp, 75]           CppUnit::TestCase::run
                                                                     Page 39
                         Object Cross Reference Report
===============================================================================

e   (Parameter)
  Declared as: Exception *
    Define [TextTestResult.cpp, 17]   CppUnit::TextTestResult::addError
    Use [TextTestResult.cpp, 19]     CppUnit::TextTestResult::addError

e   (Parameter)
  Declared as: Exception *
    Define [TextTestResult.cpp, 25]   CppUnit::TextTestResult::addFailure
    Use [TextTestResult.cpp, 27]     CppUnit::TextTestResult::addFailure

e   (Local Object)
  Declared as: Exception *=failure->thrownException()
    Define [TextTestResult.cpp, 55]   CppUnit::TextTestResult::printErrors
    Init [TextTestResult.cpp, 55]    CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 59]     CppUnit::TextTestResult::printErrors
    Deref Use [TextTestResult.cpp, 59]   CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 60]     CppUnit::TextTestResult::printErrors
    Deref Use [TextTestResult.cpp, 60]   CppUnit::TextTestResult::printErrors

e   (Local Object)
  Declared as: Exception *=failure->thrownException()
    Define [TextTestResult.cpp, 82]   CppUnit::TextTestResult::printFailures
    Init [TextTestResult.cpp, 82]    CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 86]     CppUnit::TextTestResult::printFailures
    Deref Use [TextTestResult.cpp, 86]   CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 87]     CppUnit::TextTestResult::printFailures
    Deref Use [TextTestResult.cpp, 87]   CppUnit::TextTestResult::printFailures

e   (Parameter)
  Declared as: Exception *
    Define [TestResult.cpp, 31]      CppUnit::TestResult::addError
    Use [TestResult.cpp, 32]         CppUnit::TestResult::addError

e   (Parameter)
  Declared as: Exception *
    Define [TestResult.cpp, 39]      CppUnit::TestResult::addFailure
    Use [TestResult.cpp, 40]         CppUnit::TestResult::addFailure

endl   (Unknown Object)
    Use [main.cpp, 35]               main
    Use [main.cpp, 40]               main
    Use [TextTestResult.cpp, 47]     CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 49]     CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 62]     CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 74]     CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 76]     CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 89]     CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 111]    CppUnit::TextTestResult::printHeader
    Use [TextTestResult.cpp, 111]    CppUnit::TextTestResult::printHeader
    Use [TextTestResult.cpp, 113]    CppUnit::TextTestResult::printHeader
    Use [TextTestResult.cpp, 114]    CppUnit::TextTestResult::printHeader
    Use [TextTestResult.cpp, 115]    CppUnit::TextTestResult::printHeader
    Use [TextTestResult.cpp, 122]    CppUnit::TextTestResult::printHeader
                                                                     Page 40
                         Object Cross Reference Report
===============================================================================

expandedString   (Parameter)
  Declared as: std::string &
    Define [estring.h, 14]           CppUnit::estring
    Return [estring.h, 15]           CppUnit::estring

expected   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 30]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 35]           CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 36]           CppUnit::TestCase::assertEquals

expected   (Parameter)
  Declared as: double
    Define [TestCase.cpp, 41]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 47]           CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 48]           CppUnit::TestCase::assertEquals

expected   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 104]       CppUnit::TestCase::notEqualsMessage
    Use [TestCase.cpp, 106]          CppUnit::TestCase::notEqualsMessage

expected   (Parameter)
  Declared as: double
    Define [TestCase.cpp, 111]       CppUnit::TestCase::notEqualsMessage
    Use [TestCase.cpp, 113]          CppUnit::TestCase::notEqualsMessage

failedTest   (Parameter)
  Declared as: Test *
    Define [TestFailure.cpp, 15]     CppUnit::TestFailure::TestFailure
    Use [TestFailure.cpp, 16]        CppUnit::TestFailure::TestFailure

failure   (Local Object)
  Declared as: TestFailure *=*it
    Define [TextTestResult.cpp, 54]   CppUnit::TextTestResult::printErrors
    Init [TextTestResult.cpp, 54]    CppUnit::TextTestResult::printErrors
    Deref Use [TextTestResult.cpp, 55]   CppUnit::TextTestResult::printErrors
    Deref Use [TextTestResult.cpp, 61]   CppUnit::TextTestResult::printErrors

failure   (Local Object)
  Declared as: TestFailure *=*it
    Define [TextTestResult.cpp, 81]   CppUnit::TextTestResult::printFailures
    Init [TextTestResult.cpp, 81]    CppUnit::TextTestResult::printFailures
    Deref Use [TextTestResult.cpp, 82]   CppUnit::TextTestResult::printFailures
    Deref Use [TextTestResult.cpp, 88]   CppUnit::TextTestResult::printFailures

fileName   (Parameter)
  Declared as: std::string
    Define [TestCase.cpp, 22]        CppUnit::TestCase::assertImplementation
    Use [TestCase.cpp, 25]           CppUnit::TestCase::assertImplementation

fileName   (Parameter)
  Declared as: std::string
    Define [TestCase.cpp, 33]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 36]           CppUnit::TestCase::assertEquals
                                                                     Page 41
                         Object Cross Reference Report
===============================================================================

fileName   (Parameter)
  Declared as: std::string
    Define [TestCase.cpp, 45]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 48]           CppUnit::TestCase::assertEquals

fileName   (Parameter)
  Declared as: std::string
    Define [Exception.cpp, 19]       CppUnit::Exception::Exception
    Use [Exception.cpp, 20]          CppUnit::Exception::Exception

i   (Local Object)
  Declared as: int=1
    Define [TextTestResult.cpp, 51]   CppUnit::TextTestResult::printErrors
    Init [TextTestResult.cpp, 51]    CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 57]     CppUnit::TextTestResult::printErrors
    Modify [TextTestResult.cpp, 63]   CppUnit::TextTestResult::printErrors

i   (Local Object)
  Declared as: int=1
    Define [TextTestResult.cpp, 78]   CppUnit::TextTestResult::printFailures
    Init [TextTestResult.cpp, 78]    CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 84]     CppUnit::TextTestResult::printFailures
    Modify [TextTestResult.cpp, 90]   CppUnit::TextTestResult::printFailures

instanciated   (Static Global Object)
  Declared as: bool
    Define [TestRegistry.cpp, 11]    TestRegistry.cpp
    Init [TestRegistry.cpp, 11]      TestRegistry.cpp
    Use [TestRegistry.cpp, 16]       CppUnit::TestRegistry::getRegistry

it   (Unknown Object)
    Set [main.cpp, 32]               main
    Use [main.cpp, 33]               main
    Modify [main.cpp, 33]            main
    Use [main.cpp, 35]               main
    Use [main.cpp, 37]               main
    Set [TextTestResult.cpp, 53]     CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 53]     CppUnit::TextTestResult::printErrors
    Modify [TextTestResult.cpp, 53]   CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 54]     CppUnit::TextTestResult::printErrors
    Set [TextTestResult.cpp, 80]     CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 80]     CppUnit::TextTestResult::printFailures
    Modify [TextTestResult.cpp, 80]   CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 81]     CppUnit::TextTestResult::printFailures

it   (Local Object)
  Declared as: std::vector::iterator=m_tests.begin()
    Define [TestSuite.cpp, 9]        CppUnit::TestSuite::deleteContents
    Init [TestSuite.cpp, 9]          CppUnit::TestSuite::deleteContents
    Use [TestSuite.cpp, 10]          CppUnit::TestSuite::deleteContents
    Modify [TestSuite.cpp, 11]       CppUnit::TestSuite::deleteContents
    Use [TestSuite.cpp, 12]          CppUnit::TestSuite::deleteContents

it   (Local Object)
  Declared as: std::vector::iterator=m_tests.begin()
                                                                     Page 42
                         Object Cross Reference Report
===============================================================================
    Define [TestSuite.cpp, 20]       CppUnit::TestSuite::run
    Init [TestSuite.cpp, 20]         CppUnit::TestSuite::run
    Use [TestSuite.cpp, 21]          CppUnit::TestSuite::run
    Modify [TestSuite.cpp, 22]       CppUnit::TestSuite::run
    Use [TestSuite.cpp, 26]          CppUnit::TestSuite::run

it   (Local Object)
  Declared as: std::vector::iterator=m_tests.begin()
    Define [TestSuite.cpp, 38]       CppUnit::TestSuite::countTestCases
    Init [TestSuite.cpp, 38]         CppUnit::TestSuite::countTestCases
    Use [TestSuite.cpp, 39]          CppUnit::TestSuite::countTestCases
    Modify [TestSuite.cpp, 40]       CppUnit::TestSuite::countTestCases
    Use [TestSuite.cpp, 41]          CppUnit::TestSuite::countTestCases

it   (Local Object)
  Declared as: vector::iterator=s_registry_tests.begin()
    Define [TestRegistry.cpp, 60]    CppUnit::TestRegistry::~TestRegistry
    Init [TestRegistry.cpp, 60]      CppUnit::TestRegistry::~TestRegistry
    Use [TestRegistry.cpp, 61]       CppUnit::TestRegistry::~TestRegistry
    Modify [TestRegistry.cpp, 62]    CppUnit::TestRegistry::~TestRegistry
    Use [TestRegistry.cpp, 63]       CppUnit::TestRegistry::~TestRegistry

it   (Local Object)
  Declared as: std::vector::iterator
    Define [TestResult.cpp, 8]       CppUnit::TestResult::~TestResult
    Set [TestResult.cpp, 10]         CppUnit::TestResult::~TestResult
    Use [TestResult.cpp, 10]         CppUnit::TestResult::~TestResult
    Modify [TestResult.cpp, 10]      CppUnit::TestResult::~TestResult
    Use [TestResult.cpp, 11]         CppUnit::TestResult::~TestResult
    Set [TestResult.cpp, 13]         CppUnit::TestResult::~TestResult
    Use [TestResult.cpp, 13]         CppUnit::TestResult::~TestResult
    Modify [TestResult.cpp, 13]      CppUnit::TestResult::~TestResult
    Use [TestResult.cpp, 14]         CppUnit::TestResult::~TestResult

iterator   (Unknown Object)
    Set [main.cpp, 32]               main
    Set [TextTestResult.cpp, 53]     CppUnit::TextTestResult::printErrors
    Set [TextTestResult.cpp, 80]     CppUnit::TextTestResult::printFailures

lineNumber   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 21]        CppUnit::TestCase::assertImplementation
    Use [TestCase.cpp, 25]           CppUnit::TestCase::assertImplementation

lineNumber   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 32]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 36]           CppUnit::TestCase::assertEquals

lineNumber   (Parameter)
  Declared as: long
    Define [TestCase.cpp, 44]        CppUnit::TestCase::assertEquals
    Use [TestCase.cpp, 48]           CppUnit::TestCase::assertEquals

lineNumber   (Parameter)
  Declared as: long
                                                                     Page 43
                         Object Cross Reference Report
===============================================================================
    Define [Exception.cpp, 19]       CppUnit::Exception::Exception
    Use [Exception.cpp, 20]          CppUnit::Exception::Exception

message   (Parameter)
  Declared as: std::string
    Define [Exception.cpp, 19]       CppUnit::Exception::Exception
    Use [Exception.cpp, 20]          CppUnit::Exception::Exception

name   (Parameter)
  Declared as: std::string
    Define [TestCaller.h, 50]        CppUnit::TestCaller::TestCaller
    Use [TestCaller.h, 51]           CppUnit::TestCaller::TestCaller
    Use [TestCaller.h, 52]           CppUnit::TestCaller::TestCaller

name   (Parameter)
  Declared as: std::string
    Define [TestSuite.cpp, 50]       CppUnit::TestSuite::TestSuite
    Use [TestSuite.cpp, 51]          CppUnit::TestSuite::TestSuite

name   (Parameter)
  Declared as: string
    Define [TestRegistry.cpp, 22]    CppUnit::TestRegistry::addTest
    Use [TestRegistry.cpp, 24]       CppUnit::TestRegistry::addTest

name   (Parameter)
  Declared as: std::string
    Define [TestCase.cpp, 119]       CppUnit::TestCase::TestCase
    Use [TestCase.cpp, 120]          CppUnit::TestCase::TestCase

name   (Parameter)
  Declared as: string
    Define [BoardGameTest.h, 20]     BoardGameTest::BoardGameTest
    Use [BoardGameTest.h, 20]        BoardGameTest::BoardGameTest

name   (Parameter)
  Declared as: string
    Define [ChessTest.h, 9]          ChessTest::ChessTest
    Use [ChessTest.h, 9]             ChessTest::ChessTest

name_it   (Local Object)
  Declared as: vector::iterator
    Define [TestRegistry.cpp, 45]    CppUnit::TestRegistry::getTest
    Set [TestRegistry.cpp, 47]       CppUnit::TestRegistry::getTest
    Modify [TestRegistry.cpp, 49]    CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 50]       CppUnit::TestRegistry::getTest

number   (Parameter)
  Declared as: int
    Define [estring.h, 18]           CppUnit::estring
    Use [estring.h, 19]              CppUnit::estring

number   (Parameter)
  Declared as: long
    Define [estring.h, 22]           CppUnit::estring
    Use [estring.h, 23]              CppUnit::estring
                                                                     Page 44
                         Object Cross Reference Report
===============================================================================

number   (Parameter)
  Declared as: double
    Define [estring.h, 26]           CppUnit::estring
    Use [estring.h, 27]              CppUnit::estring

other   (Parameter)
  Declared as: const Exception &
    Define [Exception.cpp, 11]       CppUnit::Exception::Exception
    Use [Exception.cpp, 12]          CppUnit::Exception::Exception
    Use [Exception.cpp, 14]          CppUnit::Exception::Exception
    Use [Exception.cpp, 15]          CppUnit::Exception::Exception
    Use [Exception.cpp, 16]          CppUnit::Exception::Exception

other   (Parameter)
  Declared as: const Exception &
    Define [Exception.cpp, 31]       CppUnit::Exception::operator=
    Use [Exception.cpp, 33]          CppUnit::Exception::operator=
    Addr Use [Exception.cpp, 35]     CppUnit::Exception::operator=
    Use [Exception.cpp, 36]          CppUnit::Exception::operator=
    Use [Exception.cpp, 37]          CppUnit::Exception::operator=
    Use [Exception.cpp, 38]          CppUnit::Exception::operator=

res   (Local Object)
  Declared as: TextTestResult
    Define [main.cpp, 28]            main
    Addr Use [main.cpp, 37]          main
    Use [main.cpp, 40]               main

res   (Local Object)
  Declared as: vector
    Define [TestRegistry.cpp, 43]    CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 51]       CppUnit::TestRegistry::getTest
    Return [TestRegistry.cpp, 55]    CppUnit::TestRegistry::getTest

result   (Parameter)
  Declared as: TestResult *
    Define [TestSuite.cpp, 18]       CppUnit::TestSuite::run
    Deref Use [TestSuite.cpp, 23]    CppUnit::TestSuite::run
    Use [TestSuite.cpp, 27]          CppUnit::TestSuite::run

result   (Parameter)
  Declared as: TestResult *
    Define [TestCase.cpp, 54]        CppUnit::TestCase::run
    Deref Use [TestCase.cpp, 56]     CppUnit::TestCase::run
    Deref Use [TestCase.cpp, 66]     CppUnit::TestCase::run
    Deref Use [TestCase.cpp, 70]     CppUnit::TestCase::run
    Deref Use [TestCase.cpp, 75]     CppUnit::TestCase::run
    Deref Use [TestCase.cpp, 81]     CppUnit::TestCase::run

result   (Local Object)
  Declared as: TestResult *=defaultResult()
    Define [TestCase.cpp, 89]        CppUnit::TestCase::run
    Init [TestCase.cpp, 89]          CppUnit::TestCase::run
    Use [TestCase.cpp, 91]           CppUnit::TestCase::run
    Return [TestCase.cpp, 92]        CppUnit::TestCase::run
                                                                     Page 45
                         Object Cross Reference Report
===============================================================================

result   (Parameter)
  Declared as: TextTestResult &
    Define [TextTestResult.cpp, 11]   CppUnit::operator<<
    Use [TextTestResult.cpp, 13]     CppUnit::operator<<

s_registry   (Static Global Object)
  Declared as: TestRegistry *
    Define [TestRegistry.cpp, 10]    TestRegistry.cpp
    Set [TestRegistry.cpp, 17]       CppUnit::TestRegistry::getRegistry
    Return [TestRegistry.cpp, 18]    CppUnit::TestRegistry::getRegistry

s_registry_names   (Global Object)
  Declared as: std::vector
    Define [TestRegistry.cpp, 7]     TestRegistry.cpp
    Use [TestRegistry.cpp, 24]       CppUnit::TestRegistry::addTest
    Return [TestRegistry.cpp, 31]    CppUnit::TestRegistry::getAllTestNames
    Use [TestRegistry.cpp, 47]       CppUnit::TestRegistry::getTest

s_registry_tests   (Global Object)
  Declared as: std::vector
    Define [TestRegistry.cpp, 8]     TestRegistry.cpp
    Use [TestRegistry.cpp, 25]       CppUnit::TestRegistry::addTest
    Return [TestRegistry.cpp, 37]    CppUnit::TestRegistry::getAllTests
    Use [TestRegistry.cpp, 46]       CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 48]       CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 60]       CppUnit::TestRegistry::~TestRegistry
    Use [TestRegistry.cpp, 61]       CppUnit::TestRegistry::~TestRegistry

stream   (Parameter)
  Declared as: std::ostream &
    Define [TextTestResult.cpp, 11]   CppUnit::operator<<
    Use [TextTestResult.cpp, 13]     CppUnit::operator<<
    Return [TextTestResult.cpp, 13]   CppUnit::operator<<

stream   (Parameter)
  Declared as: ostream &
    Define [TextTestResult.cpp, 42]   CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 47]     CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 49]     CppUnit::TextTestResult::printErrors
    Use [TextTestResult.cpp, 57]     CppUnit::TextTestResult::printErrors

stream   (Parameter)
  Declared as: ostream &
    Define [TextTestResult.cpp, 70]   CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 74]     CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 76]     CppUnit::TextTestResult::printFailures
    Use [TextTestResult.cpp, 84]     CppUnit::TextTestResult::printFailures

stream   (Parameter)
  Declared as: ostream &
    Define [TextTestResult.cpp, 98]   CppUnit::TextTestResult::print
    Use [TextTestResult.cpp, 100]    CppUnit::TextTestResult::print
    Use [TextTestResult.cpp, 101]    CppUnit::TextTestResult::print
    Use [TextTestResult.cpp, 102]    CppUnit::TextTestResult::print
                                                                     Page 46
                         Object Cross Reference Report
===============================================================================

stream   (Parameter)
  Declared as: ostream &
    Define [TextTestResult.cpp, 108]   CppUnit::TextTestResult::printHeader

suite   (Parameter)
  Declared as: CppUnit::TestSuite *
    Define [BoardGameTest.h, 23]     BoardGameTest::BoardGameTest
    Deref Use [BoardGameTest.h, 25]   BoardGameTest::BoardGameTest

suite   (Parameter)
  Declared as: CppUnit::TestSuite *
    Define [ChessTest.h, 13]         ChessTest::ChessTest
    Use [ChessTest.h, 13]            ChessTest::ChessTest
    Deref Use [ChessTest.h, 15]      ChessTest::ChessTest

syncObject   (Parameter)
  Declared as: SynchronizationObject *
    Define [TestResult.h, 73]        CppUnit::TestResult::ExclusiveZone::ExclusiveZone
    Use [TestResult.h, 74]           CppUnit::TestResult::ExclusiveZone::ExclusiveZone

syncObject   (Parameter)
  Declared as: SynchronizationObject *
    Define [TestResult.cpp, 107]     CppUnit::TestResult::setSynchronizationObject
    Use [TestResult.cpp, 108]        CppUnit::TestResult::setSynchronizationObject

test   (Parameter)
  Declared as: TestMethod
    Define [TestCaller.h, 50]        CppUnit::TestCaller::TestCaller
    Use [TestCaller.h, 53]           CppUnit::TestCaller::TestCaller

test   (Local Object)
  Declared as: Test *=*it
    Define [TestSuite.cpp, 26]       CppUnit::TestSuite::run
    Init [TestSuite.cpp, 26]         CppUnit::TestSuite::run
    Deref Use [TestSuite.cpp, 27]    CppUnit::TestSuite::run

test   (Parameter)
  Declared as: Test *
    Define [TestSuite.cpp, 65]       CppUnit::TestSuite::addTest
    Use [TestSuite.cpp, 67]          CppUnit::TestSuite::addTest

test   (Parameter)
  Declared as: Test *
    Define [TestRegistry.cpp, 22]    CppUnit::TestRegistry::addTest
    Use [TestRegistry.cpp, 25]       CppUnit::TestRegistry::addTest

test   (Parameter)
  Declared as: Test *
    Define [TextTestResult.cpp, 17]   CppUnit::TextTestResult::addError
    Use [TextTestResult.cpp, 19]     CppUnit::TextTestResult::addError

test   (Parameter)
  Declared as: Test *
    Define [TextTestResult.cpp, 25]   CppUnit::TextTestResult::addFailure
    Use [TextTestResult.cpp, 27]     CppUnit::TextTestResult::addFailure
                                                                     Page 47
                         Object Cross Reference Report
===============================================================================

test   (Parameter)
  Declared as: Test *
    Define [TextTestResult.cpp, 33]   CppUnit::TextTestResult::startTest
    Use [TextTestResult.cpp, 35]     CppUnit::TextTestResult::startTest

test   (Parameter)
  Declared as: Test *
    Define [TestResult.cpp, 31]      CppUnit::TestResult::addError
    Use [TestResult.cpp, 32]         CppUnit::TestResult::addError

test   (Parameter)
  Declared as: Test *
    Define [TestResult.cpp, 39]      CppUnit::TestResult::addFailure
    Use [TestResult.cpp, 40]         CppUnit::TestResult::addFailure

test   (Parameter)
  Declared as: Test *
    Define [TestResult.cpp, 45]      CppUnit::TestResult::startTest

test   (Parameter)
  Declared as: Test *
    Define [TestResult.cpp, 51]      CppUnit::TestResult::endTest

test_it   (Local Object)
  Declared as: vector::iterator
    Define [TestRegistry.cpp, 44]    CppUnit::TestRegistry::getTest
    Set [TestRegistry.cpp, 46]       CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 48]       CppUnit::TestRegistry::getTest
    Modify [TestRegistry.cpp, 49]    CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 51]       CppUnit::TestRegistry::getTest

testCase   (Parameter)
  Declared as: const string &
    Define [TestRegistry.cpp, 41]    CppUnit::TestRegistry::getTest
    Use [TestRegistry.cpp, 50]       CppUnit::TestRegistry::getTest

tests   (Unknown Object)
    Set [main.cpp, 30]               main
    Use [main.cpp, 32]               main
    Use [main.cpp, 33]               main

thisClass   (Local Object)
  Declared as: const type_info &=typeid
    Define [TestCase.cpp, 162]       CppUnit::TestCase::toString
    Init [TestCase.cpp, 162]         CppUnit::TestCase::toString
    Use [TestCase.cpp, 163]          CppUnit::TestCase::toString

thrownException   (Parameter)
  Declared as: Exception *
    Define [TestFailure.cpp, 15]     CppUnit::TestFailure::TestFailure
    Use [TestFailure.cpp, 16]        CppUnit::TestFailure::TestFailure

vector   (Unknown Object)
    Set [main.cpp, 30]               main
    Set [main.cpp, 32]               main
                                                                     Page 48
                         Object Cross Reference Report
===============================================================================
    Set [TextTestResult.cpp, 53]     CppUnit::TextTestResult::printErrors
    Set [TextTestResult.cpp, 80]     CppUnit::TextTestResult::printFailures

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 32]      CppUnit::TestResult::addError
    Init [TestResult.cpp, 32]        CppUnit::TestResult::addError

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 40]      CppUnit::TestResult::addFailure
    Init [TestResult.cpp, 40]        CppUnit::TestResult::addFailure

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 46]      CppUnit::TestResult::startTest
    Init [TestResult.cpp, 46]        CppUnit::TestResult::startTest

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 52]      CppUnit::TestResult::endTest
    Init [TestResult.cpp, 52]        CppUnit::TestResult::endTest

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 58]      CppUnit::TestResult::runTests
    Init [TestResult.cpp, 58]        CppUnit::TestResult::runTests

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 64]      CppUnit::TestResult::testErrors
    Init [TestResult.cpp, 64]        CppUnit::TestResult::testErrors

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 70]      CppUnit::TestResult::testFailures
    Init [TestResult.cpp, 70]        CppUnit::TestResult::testFailures

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 76]      CppUnit::TestResult::wasSuccessful
    Init [TestResult.cpp, 76]        CppUnit::TestResult::wasSuccessful

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 82]      CppUnit::TestResult::errors
    Init [TestResult.cpp, 82]        CppUnit::TestResult::errors

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 88]      CppUnit::TestResult::failures
    Init [TestResult.cpp, 88]        CppUnit::TestResult::failures

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 94]      CppUnit::TestResult::shouldStop
                                                                     Page 49
                         Object Cross Reference Report
===============================================================================
    Init [TestResult.cpp, 94]        CppUnit::TestResult::shouldStop

zone   (Local Object)
  Declared as: ExclusiveZone
    Define [TestResult.cpp, 100]     CppUnit::TestResult::stop
    Init [TestResult.cpp, 100]       CppUnit::TestResult::stop
                                                                     Page 50
                          Type Cross Reference Report
===============================================================================

BoardGame   (Class)
    Define [BoardGame.h, 11]         BoardGame.h
    Public [Chess.h, 6]              Chess

BoardGameTest   (Class Template)
    Define [BoardGameTest.h, 15]     BoardGameTest.h
    Type [main.cpp, 16]              bgt
    Public [ChessTest.h, 7]          ChessTest

BoardGameTest::GAMECLASS   (Template Parameter)
  Declared as: typename
    Define [BoardGameTest.h, 14]     BoardGameTest
    Type [BoardGameTest.h, 17]       BoardGameTest::m_game

Chess   (Class)
    Define [Chess.h, 6]              Chess.h

ChessTest   (Class Template)
    Define [ChessTest.h, 7]          ChessTest.h
    Type [main.cpp, 17]              ct

ChessTest::GAMECLASS   (Template Parameter)
  Declared as: typename
    Define [ChessTest.h, 6]          ChessTest

CppUnit::Exception   (Class)
    Define [Exception.h, 15]         CppUnit
    Use [Exception.h, 21]            CppUnit::Exception::Exception
    Type [Exception.h, 25]           CppUnit::Exception::operator=
    Use [Exception.h, 25]            CppUnit::Exception::operator=
    Declare [TestResult.h, 12]       CppUnit
    Use [TestResult.h, 43]           CppUnit::TestResult::addError
    Use [TestResult.h, 44]           CppUnit::TestResult::addFailure
    Type [TestFailure.cpp, 15]       thrownException
    Declare [TestFailure.h, 9]       CppUnit
    Use [TestFailure.h, 28]          CppUnit::TestFailure::TestFailure
    Type [TestFailure.h, 33]         CppUnit::TestFailure::thrownException
    Type [TestFailure.h, 39]         CppUnit::TestFailure::m_thrownException
    Type [TestFailure.h, 52]         CppUnit::TestFailure::thrownException
    Throw [TestCase.cpp, 25]         CppUnit::TestCase::assertImplementation
    Type [TestCase.cpp, 64]          e
    Type [TestCase.cpp, 65]          copy
    Type [TestCase.cpp, 74]          e
    Type [TextTestResult.cpp, 17]    e
    Type [TextTestResult.cpp, 25]    e
    Type [TextTestResult.cpp, 55]    e
    Type [TextTestResult.cpp, 82]    e
    Declare [TextTestResult.h, 9]    CppUnit
    Use [TextTestResult.h, 15]       CppUnit::TextTestResult::addError
    Use [TextTestResult.h, 16]       CppUnit::TextTestResult::addFailure
    Type [TestResult.cpp, 31]        e
    Type [TestResult.cpp, 39]        e
    Type [Exception.cpp, 11]         other
    Type [Exception.cpp, 30]         CppUnit::Exception::operator=
    Type [Exception.cpp, 31]         other

CppUnit::Test   (Abstract Class)
    Define [Test.h, 15]              CppUnit
    Declare [TestRegistry.h, 11]     CppUnit
    Use [TestRegistry.h, 28]         CppUnit::TestRegistry::addTest
    Set [main.cpp, 30]               main
    Set [main.cpp, 32]               main
    Type [TestSuite.cpp, 26]         test
    Type [TestSuite.cpp, 65]         test
    Public [TestCase.h, 91]          CppUnit::TestCase
    Declare [TestResult.h, 13]       CppUnit
    Use [TestResult.h, 43]           CppUnit::TestResult::addError
    Use [TestResult.h, 44]           CppUnit::TestResult::addFailure
    Use [TestResult.h, 45]           CppUnit::TestResult::startTest
    Use [TestResult.h, 46]           CppUnit::TestResult::endTest
    Public [TestSuite.h, 33]         CppUnit::TestSuite
    Use [TestSuite.h, 41]            CppUnit::TestSuite::addTest
    Type [TestFailure.cpp, 15]       failedTest
    Type [TestRegistry.cpp, 22]      test
    Declare [TestFailure.h, 8]       CppUnit
    Use [TestFailure.h, 28]          CppUnit::TestFailure::TestFailure
    Type [TestFailure.h, 31]         CppUnit::TestFailure::failedTest
    Type [TestFailure.h, 38]         CppUnit::TestFailure::m_failedTest
    Type [TestFailure.h, 47]         CppUnit::TestFailure::failedTest
    Type [TextTestResult.cpp, 17]    test
    Type [TextTestResult.cpp, 25]    test
    Type [TextTestResult.cpp, 33]    test
    Declare [TextTestResult.h, 10]   CppUnit
    Use [TextTestResult.h, 15]       CppUnit::TextTestResult::addError
    Use [TextTestResult.h, 16]       CppUnit::TextTestResult::addFailure
    Use [TextTestResult.h, 17]       CppUnit::TextTestResult::startTest
    Type [TestResult.cpp, 31]        test
    Type [TestResult.cpp, 39]        test
    Type [TestResult.cpp, 45]        test
    Type [TestResult.cpp, 51]        test

CppUnit::TestCaller   (Class Template)
    Define [TestCaller.h, 45]        CppUnit
    Use [TestCaller.h, 78]           CppUnit::TestCaller::TestCaller
    Type [TestCaller.h, 79]          CppUnit::TestCaller::operator=
    Use [TestCaller.h, 79]           CppUnit::TestCaller::operator=

CppUnit::TestCaller::Fixture   (Template Parameter)
  Declared as: typename
    Define [TestCaller.h, 44]        CppUnit::TestCaller

CppUnit::TestCaller::TestMethod   (Private Typedef)
  Declared as: void (Fixture::*) ()
    Define [TestCaller.h, 47]        CppUnit::TestCaller
    Type [TestCaller.h, 50]          test
    Type [TestCaller.h, 83]          CppUnit::TestCaller::m_test

CppUnit::TestCase   (Class)
    Define [TestCase.h, 91]          CppUnit
    Use [TestCase.h, 134]            CppUnit::TestCase::TestCase
    Type [TestCase.h, 135]           CppUnit::TestCase::operator=
    Use [TestCase.h, 135]            CppUnit::TestCase::operator=
    Public [TestCaller.h, 45]        CppUnit::TestCaller
    Public [BoardGameTest.h, 15]     BoardGameTest

CppUnit::TestFailure   (Class)
    Define [TestFailure.h, 25]       CppUnit
    Use [TestFailure.h, 42]          CppUnit::TestFailure::TestFailure
    Type [TestFailure.h, 43]         CppUnit::TestFailure::operator=
    Use [TestFailure.h, 43]          CppUnit::TestFailure::operator=
    Set [TextTestResult.cpp, 53]     CppUnit::TextTestResult::printErrors
    Type [TextTestResult.cpp, 54]    failure
    Set [TextTestResult.cpp, 80]     CppUnit::TextTestResult::printFailures
    Type [TextTestResult.cpp, 81]    failure

CppUnit::TestRegistry   (Class)
    Define [TestRegistry.h, 19]      CppUnit
    Type [TestRegistry.h, 21]        CppUnit::TestRegistry::getRegistry
    Type [TestRegistry.cpp, 10]      s_registry
    Type [TestRegistry.cpp, 13]      CppUnit::TestRegistry::getRegistry

CppUnit::TestResult   (Class)
    Define [TestResult.h, 36]        CppUnit
    Use [TestResult.h, 90]           CppUnit::TestResult::TestResult
    Type [TestResult.h, 91]          CppUnit::TestResult::operator=
    Use [TestResult.h, 91]           CppUnit::TestResult::operator=
    Type [TestSuite.cpp, 18]         result
    Declare [TestCase.h, 16]         CppUnit
    Use [TestCase.h, 97]             CppUnit::TestCase::run
    Type [TestCase.h, 98]            CppUnit::TestCase::run
    Type [TestCase.h, 109]           CppUnit::TestCase::defaultResult
    Declare [TestSuite.h, 13]        CppUnit
    Use [TestSuite.h, 39]            CppUnit::TestSuite::run
    Declare [Test.h, 8]              CppUnit
    Use [Test.h, 20]                 CppUnit::Test::run
    Type [TestCase.cpp, 14]          CppUnit::TestCase::defaultResult
    Type [TestCase.cpp, 54]          result
    Type [TestCase.cpp, 87]          CppUnit::TestCase::run
    Type [TestCase.cpp, 89]          result
    Public [TextTestResult.h, 12]    CppUnit::TextTestResult

CppUnit::TestResult::ExclusiveZone   (Public Class)
    Define [TestResult.h, 68]        CppUnit::TestResult
    Type [TestResult.cpp, 32]        zone
    Type [TestResult.cpp, 40]        zone
    Type [TestResult.cpp, 46]        zone
    Type [TestResult.cpp, 52]        zone
    Type [TestResult.cpp, 58]        zone
    Type [TestResult.cpp, 64]        zone
    Type [TestResult.cpp, 70]        zone
    Type [TestResult.cpp, 76]        zone
    Type [TestResult.cpp, 82]        zone
    Type [TestResult.cpp, 88]        zone
    Type [TestResult.cpp, 94]        zone
    Type [TestResult.cpp, 100]       zone

CppUnit::TestResult::SynchronizationObject   (Public Class)
    Define [TestResult.h, 58]        CppUnit::TestResult
    Type [TestResult.h, 70]          CppUnit::TestResult::ExclusiveZone::m_syncObject
    Type [TestResult.h, 73]          syncObject
    Use [TestResult.h, 82]           CppUnit::TestResult::setSynchronizationObject
    Type [TestResult.h, 88]          CppUnit::TestResult::m_syncObject
    Type [TestResult.cpp, 107]       syncObject

CppUnit::TestSuite   (Class)
    Define [TestSuite.h, 33]         CppUnit
    Use [TestSuite.h, 48]            CppUnit::TestSuite::TestSuite
    Type [TestSuite.h, 49]           CppUnit::TestSuite::operator=
    Use [TestSuite.h, 49]            CppUnit::TestSuite::operator=
    Type [BoardGameTest.h, 23]       suite
    Type [ChessTest.h, 13]           suite

CppUnit::TextTestResult   (Class)
    Define [TextTestResult.h, 12]    CppUnit
    Use [TextTestResult.h, 26]       CppUnit::operator<<
    Type [main.cpp, 28]              res
    Type [TextTestResult.cpp, 11]    result

exception   (Unknown Class)
    Type [TestCase.cpp, 69]          e
    Public [Exception.h, 15]         CppUnit::Exception

ostream   (Unknown Type)
    Type [TextTestResult.cpp, 42]    stream
    Type [TextTestResult.cpp, 70]    stream
    Type [TextTestResult.cpp, 98]    stream
    Type [TextTestResult.cpp, 108]   stream

std   (Unknown Class)

std::auto_ptr   (Unknown Member Type)
    Declare [TestCaller.h, 0]        std
    Type [TestCaller.h, 82]          CppUnit::TestCaller::m_fixture

std::ostream   (Unknown Member Type)
    Type [TextTestResult.cpp, 10]    CppUnit::operator<<
    Type [TextTestResult.cpp, 11]    stream
    Declare [TextTestResult.h, 0]    std
    Use [TextTestResult.h, 18]       CppUnit::TextTestResult::print
    Use [TextTestResult.h, 19]       CppUnit::TextTestResult::printErrors
    Use [TextTestResult.h, 20]       CppUnit::TextTestResult::printFailures
    Use [TextTestResult.h, 21]       CppUnit::TextTestResult::printHeader
    Type [TextTestResult.h, 26]      CppUnit::operator<<
    Use [TextTestResult.h, 26]       CppUnit::operator<<

std::string   (Unknown Member Type)
    Use [TestRegistry.h, 27]         CppUnit::TestRegistry::getTest
    Use [TestRegistry.h, 28]         CppUnit::TestRegistry::addTest
    Type [TestCaller.h, 50]          name
    Type [TestCaller.h, 72]          CppUnit::TestCaller::toString
    Type [TestSuite.cpp, 50]         name
    Type [TestSuite.cpp, 72]         CppUnit::TestSuite::toString
    Type [TestSuite.cpp, 79]         CppUnit::TestSuite::getName
    Use [TestCase.h, 94]             CppUnit::TestCase::TestCase
    Type [TestCase.h, 100]           CppUnit::TestCase::getName
    Type [TestCase.h, 101]           CppUnit::TestCase::toString
    Use [TestCase.h, 112]            CppUnit::TestCase::assertImplementation
    Use [TestCase.h, 114]            CppUnit::TestCase::assertImplementation
    Use [TestCase.h, 119]            CppUnit::TestCase::assertEquals
    Use [TestCase.h, 125]            CppUnit::TestCase::assertEquals
    Type [TestCase.h, 127]           CppUnit::TestCase::notEqualsMessage
    Type [TestCase.h, 130]           CppUnit::TestCase::notEqualsMessage
    Type [TestCase.h, 138]           CppUnit::TestCase::m_name
    Use [TestSuite.h, 36]            CppUnit::TestSuite::TestSuite
    Type [TestSuite.h, 42]           CppUnit::TestSuite::getName
    Type [TestSuite.h, 43]           CppUnit::TestSuite::toString
    Type [TestSuite.h, 53]           CppUnit::TestSuite::m_name
    Type [TestFailure.cpp, 8]        CppUnit::TestFailure::toString
    Type [TestFailure.h, 35]         CppUnit::TestFailure::toString
    Declare [Test.h, 0]              std
    Type [Test.h, 22]                CppUnit::Test::toString
    Type [Test.h, 23]                CppUnit::Test::getName
    Type [TestCase.cpp, 20]          conditionExpression
    Type [TestCase.cpp, 22]          fileName
    Type [TestCase.cpp, 33]          fileName
    Type [TestCase.cpp, 45]          fileName
    Type [TestCase.cpp, 104]         CppUnit::TestCase::notEqualsMessage
    Type [TestCase.cpp, 111]         CppUnit::TestCase::notEqualsMessage
    Type [TestCase.cpp, 119]         name
    Type [TestCase.cpp, 141]         CppUnit::TestCase::getName
    Type [TestCase.cpp, 159]         CppUnit::TestCase::toString
    Declare [Exception.h, 0]         std
    Use [Exception.h, 18]            CppUnit::Exception::Exception
    Use [Exception.h, 20]            CppUnit::Exception::Exception
    Type [Exception.h, 30]           CppUnit::Exception::fileName
    Type [Exception.h, 32]           CppUnit::Exception::UNKNOWNFILENAME
    Type [Exception.h, 36]           CppUnit::Exception::m_message
    Type [Exception.h, 38]           CppUnit::Exception::m_fileName
    Type [Exception.cpp, 5]          CppUnit::Exception::UNKNOWNFILENAME
    Type [Exception.cpp, 19]         message
    Type [Exception.cpp, 19]         fileName
    Type [Exception.cpp, 57]         CppUnit::Exception::fileName
    Type [estring.h, 10]             CppUnit::estring
    Type [estring.h, 14]             CppUnit::estring
    Type [estring.h, 14]             expandedString
    Type [estring.h, 18]             CppUnit::estring
    Type [estring.h, 22]             CppUnit::estring
    Type [estring.h, 26]             CppUnit::estring
                                                                     Page 51
                          Type Cross Reference Report
===============================================================================

std::vector   (Unknown Member Type)
    Type [TestRegistry.h, 25]        CppUnit::TestRegistry::getAllTestNames
    Type [TestRegistry.h, 26]        CppUnit::TestRegistry::getAllTests
    Type [TestRegistry.h, 27]        CppUnit::TestRegistry::getTest
    Declare [TestResult.h, 0]        std
    Type [TestResult.h, 54]          CppUnit::TestResult::errors
    Type [TestResult.h, 55]          CppUnit::TestResult::failures
    Type [TestResult.h, 84]          CppUnit::TestResult::m_errors
    Type [TestResult.h, 85]          CppUnit::TestResult::m_failures

std::vector   (Public Class)
    Type [TestSuite.h, 52]           CppUnit::TestSuite::m_tests
    Declare [TestRegistry.cpp, 0]    std
    Type [TestRegistry.cpp, 7]       s_registry_names
    Type [TestRegistry.cpp, 8]       s_registry_tests
    Type [TestRegistry.cpp, 28]      CppUnit::TestRegistry::getAllTestNames
    Type [TestRegistry.cpp, 34]      CppUnit::TestRegistry::getAllTests
    Type [TestRegistry.cpp, 40]      CppUnit::TestRegistry::getTest
    Type [TestRegistry.cpp, 43]      res
    Type [TestResult.cpp, 80]        CppUnit::TestResult::errors
    Type [TestResult.cpp, 86]        CppUnit::TestResult::failures

std::vector::iterator   (Unknown Member Type)
    Declare [TestSuite.cpp, 0]       std::vector
    Type [TestSuite.cpp, 9]          it
    Declare [TestSuite.cpp, 0]       std::vector
    Type [TestSuite.cpp, 20]         it
    Declare [TestSuite.cpp, 0]       std::vector
    Type [TestSuite.cpp, 38]         it
    Declare [TestRegistry.cpp, 0]    std::vector
    Type [TestRegistry.cpp, 44]      test_it
    Type [TestRegistry.cpp, 45]      name_it
    Type [TestRegistry.cpp, 60]      it
    Declare [TestResult.cpp, 0]      std::vector
    Type [TestResult.cpp, 8]         it

string   (Unknown Type)
    Type [TestRegistry.cpp, 22]      name
    Type [TestRegistry.cpp, 41]      testCase
    Type [BoardGameTest.h, 20]       name
    Type [ChessTest.h, 9]            name

type_info   (Unknown Type)
    Type [TestCase.cpp, 162]         thisClass
                                                                     Page 52
                          Macro Cross Reference Report
===============================================================================

__BOARDGAME_H__
  Declared as: 
    Define [BoardGame.h, 2]          BoardGame.h
    Use [BoardGame.h, 1]             BoardGame.h

__BOARDGAMETEST_H__
  Declared as: 
    Define [BoardGameTest.h, 2]      BoardGameTest.h
    Use [BoardGameTest.h, 1]         BoardGameTest.h

__CHESS_H__
  Declared as: 
    Define [Chess.h, 2]              Chess.h
    Use [Chess.h, 1]                 Chess.h

__CHESSTEST_H__
  Declared as: 
    Define [ChessTest.h, 2]          ChessTest.h
    Use [ChessTest.h, 1]             ChessTest.h

assert
  Declared as: 
 (this->assertImplementation ((condition),(#condition),
 __L...
    Define [TestCase.h, 152]         CppUnit
    Use [BoardGameTest.h, 38]        BoardGameTest::testReset
    Use [ChessTest.h, 21]            ChessTest::testNumberOfPieces

assertDoublesEqual
  Declared as: 
(this->assertEquals ((expected),
 (actual),(delta),__LINE__,...
    Define [TestCase.h, 167]         CppUnit

assertLongsEqual
  Declared as: 
(this->assertEquals ((expected),
 (actual),__LINE__,__FILE__))
    Define [TestCase.h, 172]         CppUnit

CPPUNIT_ESTRING_H
  Declared as: 
    Define [estring.h, 2]            estring.h
    Use [estring.h, 1]               estring.h

CPPUNIT_EXCEPTION_H
    Use [TestCase.h, 10]             TestCase.h

CPPUNIT_EXCEPTION_H
  Declared as: 
    Define [Exception.h, 2]          Exception.h
    Use [Exception.h, 1]             Exception.h

CPPUNIT_SOURCEANNOTATION
  Declared as: 
    Define [TestCase.h, 147]         CppUnit
    Use [TestCase.h, 149]            CppUnit

CPPUNIT_TEST_H
    Use [TestCase.h, 6]              TestCase.h
    Use [Test.h, 1]                  Test.h
                                                                     Page 53
                          Macro Cross Reference Report
===============================================================================

CPPUNIT_TEST_H
    Use [TestSuite.h, 7]             TestSuite.h

CPPUNIT_TEST_H
  Declared as: 
    Define [Test.h, 2]               Test.h

CPPUNIT_TESTCALLER_H
  Declared as: 
    Define [TestCaller.h, 2]         TestCaller.h
    Use [TestCaller.h, 1]            TestCaller.h

CPPUNIT_TESTCASE_H
    Use [TestCaller.h, 4]            TestCaller.h

CPPUNIT_TESTCASE_H
  Declared as: 
    Define [TestCase.h, 2]           TestCase.h
    Use [TestCase.h, 1]              TestCase.h
    Use [BoardGameTest.h, 6]         BoardGameTest.h

CPPUNIT_TESTFAILURE_H
    Use [TestResult.h, 6]            TestResult.h
    Use [TestFailure.h, 1]           TestFailure.h

CPPUNIT_TESTFAILURE_H
  Declared as: 
    Define [TestFailure.h, 2]        TestFailure.h

CPPUNIT_TESTREGISTRY_H
  Declared as: 
    Define [TestRegistry.h, 2]       TestRegistry.h
    Use [TestRegistry.h, 1]          TestRegistry.h

CPPUNIT_TESTRESULT_H
  Declared as: 
    Define [TestResult.h, 2]         TestResult.h
    Use [TestResult.h, 1]            TestResult.h

CPPUNIT_TESTSUITE_H
  Declared as: 
    Define [TestSuite.h, 2]          TestSuite.h
    Use [TestSuite.h, 1]             TestSuite.h

CPPUNIT_TESTSUITE_H
    Use [BoardGameTest.h, 10]        BoardGameTest.h

CPPUNIT_TEXTTESTRESULT_H
  Declared as: 
    Define [TextTestResult.h, 2]     TextTestResult.h
    Use [TextTestResult.h, 1]        TextTestResult.h
                                                                     Page 54
                      Include File Cross Reference Report
===============================================================================

BoardGame.h
    Include [main.cpp, 5]            main.cpp
    Include [BoardGame.cpp, 1]       BoardGame.cpp
    Include [Chess.h, 4]             Chess.h

BoardGameTest.h
    Include [main.cpp, 8]            main.cpp
    Include [ChessTest.h, 4]         ChessTest.h

Chess.h
    Include [main.cpp, 6]            main.cpp
    Include [Chess.cpp, 1]           Chess.cpp

ChessTest.h
    Include [main.cpp, 9]            main.cpp

cmath
    Include [TestCase.cpp, 9]        TestCase.cpp

cstdio
    Include [estring.h, 5]           estring.h

estring.h
    Include [TestCase.cpp, 4]        TestCase.cpp
    Include [TextTestResult.cpp, 3]   TextTestResult.cpp

exception
    Include [Exception.h, 4]         Exception.h

Exception.h
    Include [TestCase.h, 11]         TestCase.h
    Include [TestFailure.cpp, 2]     TestFailure.cpp
    Include [TestCase.cpp, 2]        TestCase.cpp
    Include [TextTestResult.cpp, 2]   TextTestResult.cpp
    Include [Exception.cpp, 1]       Exception.cpp

iosfwd
    Include [TextTestResult.h, 4]    TextTestResult.h

iostream
    Include [main.cpp, 13]           main.cpp

stdexcept
    Include [TestCase.cpp, 8]        TestCase.cpp

stl.h
    Include [TestCaller.h, 8]        TestCaller.h

string
    Include [TestRegistry.h, 6]      TestRegistry.h
    Include [TestCase.h, 4]          TestCase.h
    Include [TestSuite.h, 5]         TestSuite.h
    Include [TestFailure.h, 4]       TestFailure.h
    Include [Test.h, 4]              Test.h
    Include [Exception.h, 5]         Exception.h
                                                                     Page 55
                      Include File Cross Reference Report
===============================================================================

Test.h
    Include [main.cpp, 3]            main.cpp
    Include [TestCase.h, 7]          TestCase.h
    Include [TestSuite.h, 8]         TestSuite.h
    Include [TestFailure.cpp, 3]     TestFailure.cpp
    Include [TestRegistry.cpp, 2]    TestRegistry.cpp

TestCaller.h
    Include [BoardGameTest.h, 4]     BoardGameTest.h

TestCase.h
    Include [TestCaller.h, 5]        TestCaller.h
    Include [TestCase.cpp, 1]        TestCase.cpp
    Inactive [BoardGameTest.h, 7]    BoardGameTest.h

TestFailure.h
    Include [TestResult.h, 7]        TestResult.h
    Include [TestFailure.cpp, 1]     TestFailure.cpp

TestRegistry.h
    Include [main.cpp, 1]            main.cpp
    Include [TestRegistry.cpp, 1]    TestRegistry.cpp
    Include [TestCase.cpp, 5]        TestCase.cpp

TestResult.h
    Include [TestSuite.cpp, 2]       TestSuite.cpp
    Include [TestCase.cpp, 3]        TestCase.cpp
    Include [TextTestResult.h, 5]    TextTestResult.h
    Include [TestResult.cpp, 1]      TestResult.cpp

TestSuite.h
    Include [TestSuite.cpp, 1]       TestSuite.cpp
    Include [BoardGameTest.h, 11]    BoardGameTest.h

TextTestResult.h
    Include [main.cpp, 2]            main.cpp
    Include [TextTestResult.cpp, 1]   TextTestResult.cpp

typeinfo
    Include [TestCase.cpp, 7]        TestCase.cpp

vector
    Include [TestRegistry.h, 5]      TestRegistry.h
    Include [main.cpp, 12]           main.cpp
    Include [TestResult.h, 4]        TestResult.h
    Include [TestSuite.h, 4]         TestSuite.h
                                                                     Page 56
                            Declaration Tree Report
===============================================================================

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/Exception.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/TestCase.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/TestFailure.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/TestRegistry.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/TestResult.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/TestSuite.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/cppunit/TextTestResult.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/examples/hierarchy/BoardGame.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/examples/hierarchy/Chess.cpp   (File)

/Users/kyleschafer/Desktop/cppunit 1.5.2/examples/hierarchy/main.cpp   (File)
| main   (Function)
                                                                     Page 57
                         Simple Invocation Tree Report
===============================================================================

BoardGameTest::BoardGameTest
| CppUnit::TestCase::TestCase

BoardGameTest::BoardGameTest
| CppUnit::TestCase::TestCase
| CppUnit::TestSuite::addTest
| CppUnit::TestCaller::TestCaller
| BoardGameTest::testReset

BoardGameTest::setUp

BoardGameTest::testReset
| CppUnit::TestCase::assertImplementation
| reset

ChessTest::ChessTest
| BoardGameTest::BoardGameTest

ChessTest::ChessTest
| BoardGameTest::BoardGameTest
| CppUnit::TestSuite::addTest
| CppUnit::TestCaller::TestCaller
| ChessTest::testNumberOfPieces

ChessTest::testNumberOfPieces
| CppUnit::TestCase::assertImplementation
| numberOfPieces

CppUnit::estring

CppUnit::estring
| sprintf

CppUnit::estring
| sprintf

CppUnit::estring
| sprintf

CppUnit::Exception::operator=
| exception::operator=

CppUnit::Exception::what
| c_str

CppUnit::operator<<
| CppUnit::TextTestResult::print  (Virtual)

CppUnit::TestCaller::runTest
| get

CppUnit::TestCaller::setUp
| get
| setUp
                                                                     Page 58
                         Simple Invocation Tree Report
===============================================================================

CppUnit::TestCaller::tearDown
| get
| tearDown

CppUnit::TestCaller::TestCaller
| CppUnit::TestCase::TestCase

CppUnit::TestCaller::toString
| CppUnit::TestCase::getName  (Virtual)

CppUnit::TestCase::assertEquals
| CppUnit::TestCase::assertImplementation
| CppUnit::TestCase::notEqualsMessage

CppUnit::TestCase::assertEquals
| fabs
| CppUnit::TestCase::assertImplementation
| CppUnit::TestCase::notEqualsMessage

CppUnit::TestCase::assertImplementation
| CppUnit::Exception::Exception
| CppUnit::Exception::~Exception

CppUnit::TestCase::defaultResult
| CppUnit::TestResult::TestResult

CppUnit::TestCase::notEqualsMessage
| CppUnit::estring

CppUnit::TestCase::notEqualsMessage
| CppUnit::estring

CppUnit::TestCase::run
| CppUnit::TestResult::startTest  (Virtual)
| CppUnit::TextTestResult::startTest  (Virtual)
| CppUnit::TestCase::setUp  (Virtual)
| CppUnit::TestCaller::setUp  (Virtual)
| BoardGameTest::setUp  (Virtual)
| CppUnit::TestCase::runTest  (Virtual)
| CppUnit::TestCaller::runTest  (Virtual)
| CppUnit::Exception::Exception
| CppUnit::TestResult::addFailure  (Virtual)
| CppUnit::TextTestResult::addFailure  (Virtual)
| CppUnit::TestResult::addError  (Virtual)
| CppUnit::TextTestResult::addError  (Virtual)
| exception::what
| CppUnit::TestCase::tearDown  (Virtual)
| CppUnit::TestCaller::tearDown  (Virtual)
| BoardGameTest::tearDown  (Virtual)
| CppUnit::TestResult::endTest  (Virtual)

CppUnit::TestCase::run
| CppUnit::TestCase::defaultResult
| CppUnit::TestCase::run  (Virtual)
                                                                     Page 59
                         Simple Invocation Tree Report
===============================================================================

CppUnit::TestCase::TestCase
| CppUnit::TestRegistry::getRegistry
| CppUnit::TestRegistry::addTest

CppUnit::TestCase::toString
| name
| CppUnit::TestCase::getName  (Virtual)

CppUnit::TestCase::~TestCase
| CppUnit::Test::~Test

CppUnit::TestFailure::toString
| CppUnit::Test::toString  (Virtual)
| CppUnit::TestCaller::toString  (Virtual)
| CppUnit::TestSuite::toString  (Virtual)
| CppUnit::TestCase::toString  (Virtual)
| CppUnit::Exception::what

CppUnit::TestFailure::~TestFailure
| CppUnit::Exception::~Exception  (Virtual)

CppUnit::TestRegistry::addTest
| push_back

CppUnit::TestRegistry::getRegistry
| CppUnit::TestRegistry::TestRegistry

CppUnit::TestRegistry::getTest
| std::vector::begin
| std::vector::end
| std::vector::push_back

CppUnit::TestRegistry::~TestRegistry
| std::vector::begin
| std::vector::end

CppUnit::TestResult::addError
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| std::vector::push_back
| CppUnit::TestFailure::TestFailure
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::addFailure
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| std::vector::push_back
| CppUnit::TestFailure::TestFailure
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::endTest
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::errors
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
                                                                     Page 60
                         Simple Invocation Tree Report
===============================================================================
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::SynchronizationObject::lock  (Virtual)

CppUnit::TestResult::ExclusiveZone::~ExclusiveZone
| CppUnit::TestResult::SynchronizationObject::unlock  (Virtual)

CppUnit::TestResult::failures
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::runTests
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::setSynchronizationObject
| CppUnit::TestResult::SynchronizationObject::~SynchronizationObject  (Virtual)

CppUnit::TestResult::shouldStop
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::startTest
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::stop
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::testErrors
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| std::vector::size
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::testFailures
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| std::vector::size
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::TestResult
| CppUnit::TestResult::SynchronizationObject::SynchronizationObject

CppUnit::TestResult::wasSuccessful
| CppUnit::TestResult::ExclusiveZone::ExclusiveZone
| std::vector::size
| CppUnit::TestResult::ExclusiveZone::~ExclusiveZone

CppUnit::TestResult::~TestResult
| std::vector::begin
| std::vector::end
| CppUnit::TestResult::SynchronizationObject::~SynchronizationObject  (Virtual)

CppUnit::TestSuite::addTest
                                                                     Page 61
                         Simple Invocation Tree Report
===============================================================================
| std::vector::push_back

CppUnit::TestSuite::countTestCases
| std::vector::begin
| std::vector::end
| countTestCases

CppUnit::TestSuite::deleteContents
| std::vector::begin
| std::vector::end

CppUnit::TestSuite::run
| std::vector::begin
| std::vector::end
| CppUnit::TestResult::shouldStop  (Virtual)
| CppUnit::Test::run  (Virtual)
| CppUnit::TestSuite::run  (Virtual)
| CppUnit::TestCase::run  (Virtual)

CppUnit::TestSuite::toString
| CppUnit::TestSuite::getName  (Virtual)

CppUnit::TestSuite::~TestSuite
| CppUnit::TestSuite::deleteContents  (Virtual)
| CppUnit::Test::~Test

CppUnit::TextTestResult::addError
| CppUnit::TestResult::addError

CppUnit::TextTestResult::addFailure
| CppUnit::TestResult::addFailure

CppUnit::TextTestResult::print
| CppUnit::TextTestResult::printHeader  (Virtual)
| CppUnit::TextTestResult::printErrors  (Virtual)
| CppUnit::TextTestResult::printFailures  (Virtual)

CppUnit::TextTestResult::printErrors
| CppUnit::TestResult::testErrors  (Virtual)
| CppUnit::TestResult::errors  (Virtual)
| std::vector::begin
| std::vector::end
| CppUnit::TestFailure::thrownException
| CppUnit::estring
| CppUnit::Exception::lineNumber
| CppUnit::Exception::fileName
| CppUnit::Exception::what

CppUnit::TextTestResult::printFailures
| CppUnit::TestResult::testFailures  (Virtual)
| CppUnit::TestResult::failures  (Virtual)
| std::vector::begin
| std::vector::end
| CppUnit::TestFailure::thrownException
| CppUnit::estring
                                                                     Page 62
                         Simple Invocation Tree Report
===============================================================================
| CppUnit::Exception::lineNumber
| CppUnit::Exception::fileName
| CppUnit::Exception::what

CppUnit::TextTestResult::printHeader
| CppUnit::TestResult::wasSuccessful  (Virtual)
| CppUnit::TestResult::runTests  (Virtual)
| CppUnit::TestResult::testFailures  (Virtual)
| CppUnit::TestResult::testErrors  (Virtual)

CppUnit::TextTestResult::startTest
| CppUnit::TestResult::startTest

main
| CppUnit::TestRegistry::getRegistry
| CppUnit::TestRegistry::getAllTests
| begin
| end
| toString
| run
                                                                     Page 63
                                 Import Report
===============================================================================
                                                                     Page 64
                                With Tree Report
===============================================================================
                                                                     Page 65
                            Simple With Tree Report
===============================================================================
                                                                     Page 66
                          Generic Instantiation Report
===============================================================================
                                                                     Page 67
                        Exception Cross Reference Report
===============================================================================
                                                                     Page 68
                                 Renames Report
===============================================================================
                                                                     Page 69
                         Program Unit Complexity Report
===============================================================================

BoardGame::reset
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

BoardGame::~BoardGame
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

BoardGameTest::BoardGameTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

BoardGameTest::BoardGameTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

BoardGameTest::countTestCases
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

BoardGameTest::setUp
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

BoardGameTest::tearDown
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 70
                         Program Unit Complexity Report
===============================================================================

BoardGameTest::testReset
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

Chess::getNumberOfPieces
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

ChessTest::ChessTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

ChessTest::ChessTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

ChessTest::testNumberOfPieces
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::estring
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::estring
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 71
                         Program Unit Complexity Report
===============================================================================

CppUnit::estring
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::estring
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::estring
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::Exception::Exception
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::Exception::Exception
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::Exception::fileName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::Exception::lineNumber
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 72
                         Program Unit Complexity Report
===============================================================================

CppUnit::Exception::operator=
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::Exception::what
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::Exception::~Exception
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::operator<<
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::Test::~Test
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCaller::runTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCaller::setUp
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 73
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestCaller::tearDown
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCaller::TestCaller
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCaller::toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::assertEquals
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestCase::assertEquals
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestCase::assertImplementation
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestCase::countTestCases
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 74
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestCase::defaultResult
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::getName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::notEqualsMessage
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::notEqualsMessage
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::run
   Cyclomatic:                        4
   Modified Cyclomatic:               4
   Strict Cyclomatic:                 4
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        4

CppUnit::TestCase::run
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::runTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 75
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestCase::setUp
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::tearDown
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::TestCase
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestCase::toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestCase::~TestCase
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestFailure::failedTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestFailure::TestFailure
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 76
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestFailure::thrownException
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestFailure::toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestFailure::~TestFailure
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestRegistry::addTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestRegistry::getAllTestNames
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestRegistry::getAllTests
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestRegistry::getRegistry
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
                                                                     Page 77
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestRegistry::getTest
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3

CppUnit::TestRegistry::TestRegistry
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestRegistry::~TestRegistry
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestResult::addError
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::addFailure
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::endTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::errors
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 78
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestResult::ExclusiveZone::ExclusiveZone
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::ExclusiveZone::~ExclusiveZone
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::failures
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::runTests
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::setSynchronizationObject
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::shouldStop
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::startTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 79
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestResult::stop
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::SynchronizationObject::lock
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::SynchronizationObject::SynchronizationObject
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::SynchronizationObject::unlock
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::SynchronizationObject::~SynchronizationObject
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::testErrors
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::testFailures
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 80
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestResult::TestResult
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::wasSuccessful
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestResult::~TestResult
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        4

CppUnit::TestSuite::addTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestSuite::countTestCases
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestSuite::deleteContents
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TestSuite::getName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 81
                         Program Unit Complexity Report
===============================================================================

CppUnit::TestSuite::run
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3

CppUnit::TestSuite::TestSuite
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestSuite::toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TestSuite::~TestSuite
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TextTestResult::addError
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TextTestResult::addFailure
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

CppUnit::TextTestResult::print
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
                                                                     Page 82
                         Program Unit Complexity Report
===============================================================================

CppUnit::TextTestResult::printErrors
   Cyclomatic:                        6
   Modified Cyclomatic:               6
   Strict Cyclomatic:                 6
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        5

CppUnit::TextTestResult::printFailures
   Cyclomatic:                        6
   Modified Cyclomatic:               6
   Strict Cyclomatic:                 6
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        5

CppUnit::TextTestResult::printHeader
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

CppUnit::TextTestResult::startTest
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1

main
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
                                                                     Page 83
                         Project Metrics Summary Report
===============================================================================
Classes:                     15
Files:                       24
Program Units:               96
Lines:                     1454
Lines Blank:                361
Lines Code:                 717
Lines Comment:              265
Lines Inactive:               8
Executable Statements:      171
Declarative Statements:     288
Ratio Comment/Code:        0.37
                                                                     Page 84
                              Program Unit Metrics
===============================================================================

BoardGame::reset (Public Virtual Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

BoardGame::~BoardGame (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

BoardGameTest::BoardGameTest (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  2
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

BoardGameTest::BoardGameTest (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

BoardGameTest::countTestCases (Public Virtual Const Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 85
                              Program Unit Metrics
===============================================================================

BoardGameTest::setUp (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

BoardGameTest::tearDown (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

BoardGameTest::testReset (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

Chess::getNumberOfPieces (Public Virtual Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

ChessTest::ChessTest (Public Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  2
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 86
                              Program Unit Metrics
===============================================================================

ChessTest::ChessTest (Public Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

ChessTest::testNumberOfPieces (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::estring (Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::estring (Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::estring (Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 87
                              Program Unit Metrics
===============================================================================

CppUnit::estring (Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::estring (Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::Exception::Exception (Public Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::Exception::Exception (Public Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  3
   Execution Statements:    3
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::Exception::fileName (Public Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 88
                              Program Unit Metrics
===============================================================================

CppUnit::Exception::lineNumber (Public Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::Exception::operator= (Public Function)
   Lines:                   13
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              11
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  2
   Execution Statements:    6
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::Exception::what (Public Const Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::Exception::~Exception (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::operator<< (Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 89
                              Program Unit Metrics
===============================================================================

CppUnit::Test::~Test (Public Virtual Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCaller::runTest (Protected Virtual Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCaller::setUp (Protected Virtual Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCaller::tearDown (Protected Virtual Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCaller::TestCaller (Public Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  5
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 90
                              Program Unit Metrics
===============================================================================

CppUnit::TestCaller::toString (Protected Virtual Const Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::assertEquals (Protected Function)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  4
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::assertEquals (Protected Function)
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  5
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::assertImplementation (Protected Function)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  4
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::countTestCases (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 91
                              Program Unit Metrics
===============================================================================

CppUnit::TestCase::defaultResult (Protected Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::getName (Public Virtual Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::notEqualsMessage (Protected Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::notEqualsMessage (Protected Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::run (Public Virtual Function)
   Lines:                   30
   Comment Lines:           0
   Blank Lines:             9
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   14
   Declarative Code Lines:  3
   Execution Statements:    8
   Declaration Statements:  2
   Ratio Comment/Code:      0.00
                                                                     Page 92
                              Program Unit Metrics
===============================================================================

CppUnit::TestCase::run (Public Virtual Function)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestCase::runTest (Protected Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::setUp (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::tearDown (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestCase::TestCase (Public Function)
   Lines:                   9
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  3
   Execution Statements:    3
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 93
                              Program Unit Metrics
===============================================================================

CppUnit::TestCase::toString (Public Virtual Const Function)
   Lines:                   6
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestCase::~TestCase (Public Virtual Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestFailure::failedTest (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestFailure::TestFailure (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestFailure::thrownException (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 94
                              Program Unit Metrics
===============================================================================

CppUnit::TestFailure::toString (Public Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestFailure::~TestFailure (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestRegistry::addTest (Public Function)
   Lines:                   6
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestRegistry::getAllTestNames (Public Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestRegistry::getAllTests (Public Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 95
                              Program Unit Metrics
===============================================================================

CppUnit::TestRegistry::getRegistry (Public Static Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestRegistry::getTest (Public Const Function)
   Lines:                   17
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              17
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  5
   Execution Statements:    7
   Declaration Statements:  3
   Ratio Comment/Code:      0.00

CppUnit::TestRegistry::TestRegistry (Private Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestRegistry::~TestRegistry (Public Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::addError (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 96
                              Program Unit Metrics
===============================================================================

CppUnit::TestResult::addFailure (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::endTest (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::errors (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::ExclusiveZone::ExclusiveZone (Public Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestResult::ExclusiveZone::~ExclusiveZone (Public Function)
   Lines:                   2
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 97
                              Program Unit Metrics
===============================================================================

CppUnit::TestResult::failures (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::runTests (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::setSynchronizationObject (Protected Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestResult::shouldStop (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::startTest (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 98
                              Program Unit Metrics
===============================================================================

CppUnit::TestResult::stop (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::SynchronizationObject::lock (Public Virtual Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestResult::SynchronizationObject::SynchronizationObject (Public Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestResult::SynchronizationObject::unlock (Public Virtual Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestResult::SynchronizationObject::~SynchronizationObject (Public Virtual Function)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 99
                              Program Unit Metrics
===============================================================================

CppUnit::TestResult::testErrors (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::testFailures (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::TestResult (Public Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestResult::wasSuccessful (Public Virtual Function)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestResult::~TestResult (Public Virtual Function)
   Lines:                   12
   Comment Lines:           0
   Blank Lines:             3
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  2
   Execution Statements:    9
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 100
                              Program Unit Metrics
===============================================================================

CppUnit::TestSuite::addTest (Public Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestSuite::countTestCases (Public Function)
   Lines:                   12
   Comment Lines:           0
   Blank Lines:             3
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  3
   Execution Statements:    4
   Declaration Statements:  2
   Ratio Comment/Code:      0.00

CppUnit::TestSuite::deleteContents (Public Virtual Function)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

CppUnit::TestSuite::getName (Public Virtual Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestSuite::run (Public Virtual Function)
   Lines:                   13
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              11
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  3
   Execution Statements:    5
   Declaration Statements:  2
   Ratio Comment/Code:      0.00
                                                                     Page 101
                              Program Unit Metrics
===============================================================================

CppUnit::TestSuite::TestSuite (Public Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestSuite::toString (Public Virtual Const Function)
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TestSuite::~TestSuite (Public Virtual Function)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TextTestResult::addError (Public Virtual Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TextTestResult::addFailure (Public Virtual Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 102
                              Program Unit Metrics
===============================================================================

CppUnit::TextTestResult::print (Public Function)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TextTestResult::printErrors (Public Function)
   Lines:                   27
   Comment Lines:           0
   Blank Lines:             5
   Code Lines:              22
   Inactive Lines:          0
   Executable Code Lines:   16
   Declarative Code Lines:  5
   Execution Statements:    9
   Declaration Statements:  3
   Ratio Comment/Code:      0.00

CppUnit::TextTestResult::printFailures (Public Function)
   Lines:                   26
   Comment Lines:           0
   Blank Lines:             4
   Code Lines:              22
   Inactive Lines:          0
   Executable Code Lines:   16
   Declarative Code Lines:  5
   Execution Statements:    9
   Declaration Statements:  3
   Ratio Comment/Code:      0.00

CppUnit::TextTestResult::printHeader (Public Function)
   Lines:                   18
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              17
   Inactive Lines:          0
   Executable Code Lines:   13
   Declarative Code Lines:  2
   Execution Statements:    3
   Declaration Statements:  0
   Ratio Comment/Code:      0.00

CppUnit::TextTestResult::startTest (Public Virtual Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    2
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 103
                              Program Unit Metrics
===============================================================================

main (Function)
   Lines:                   19
   Comment Lines:           0
   Blank Lines:             6
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  3
   Execution Statements:    8
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 104
                                  File Metrics
===============================================================================

BoardGame.cpp
   Lines:                   12
   Comment Lines:           0
   Blank Lines:             3
   Preprocessor Lines:      1
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  2
   Ratio Comment/Code:      0.00
   Units                    2

BoardGame.h
   Lines:                   18
   Comment Lines:           8
   Blank Lines:             2
   Preprocessor Lines:      3
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  3
   Ratio Comment/Code:      1.60
   Units                    0

BoardGameTest.h
   Lines:                   42
   Comment Lines:           0
   Blank Lines:             12
   Preprocessor Lines:      10
   Code Lines:              20
   Inactive Lines:          1
   Executable Code Lines:   5
   Declarative Code Lines:  11
   Execution Statements:    5
   Declaration Statements:  8
   Ratio Comment/Code:      0.00
   Units                    6

Chess.cpp
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             1
   Preprocessor Lines:      1
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
   Units                    1
                                                                     Page 105
                                  File Metrics
===============================================================================

Chess.h
   Lines:                   11
   Comment Lines:           0
   Blank Lines:             3
   Preprocessor Lines:      4
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  2
   Execution Statements:    0
   Declaration Statements:  2
   Ratio Comment/Code:      0.00
   Units                    0

ChessTest.h
   Lines:                   27
   Comment Lines:           0
   Blank Lines:             7
   Preprocessor Lines:      4
   Code Lines:              16
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  7
   Execution Statements:    2
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    3

estring.h
   Lines:                   31
   Comment Lines:           7
   Blank Lines:             10
   Preprocessor Lines:      4
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  10
   Execution Statements:    8
   Declaration Statements:  9
   Ratio Comment/Code:      0.58
   Units                    5

Exception.cpp
   Lines:                   60
   Comment Lines:           6
   Blank Lines:             16
   Preprocessor Lines:      1
   Code Lines:              37
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  19
   Execution Statements:    13
   Declaration Statements:  10
   Ratio Comment/Code:      0.16
   Units                    7
                                                                     Page 106
                                  File Metrics
===============================================================================

Exception.h
   Lines:                   45
   Comment Lines:           7
   Blank Lines:             14
   Preprocessor Lines:      5
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  17
   Execution Statements:    0
   Declaration Statements:  14
   Ratio Comment/Code:      0.33
   Units                    0

main.cpp
   Lines:                   43
   Comment Lines:           0
   Blank Lines:             18
   Preprocessor Lines:      9
   Code Lines:              16
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  5
   Execution Statements:    9
   Declaration Statements:  5
   Ratio Comment/Code:      0.00
   Units                    1

Test.h
   Lines:                   32
   Comment Lines:           7
   Blank Lines:             11
   Preprocessor Lines:      4
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  9
   Execution Statements:    0
   Declaration Statements:  8
   Ratio Comment/Code:      0.58
   Units                    1

TestCaller.h
   Lines:                   89
   Comment Lines:           33
   Blank Lines:             15
   Preprocessor Lines:      7
   Code Lines:              36
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  18
   Execution Statements:    4
   Declaration Statements:  12
   Ratio Comment/Code:      0.92
   Units                    5
                                                                     Page 107
                                  File Metrics
===============================================================================

TestCase.cpp
   Lines:                   165
   Comment Lines:           16
   Blank Lines:             49
   Preprocessor Lines:      8
   Code Lines:              92
   Inactive Lines:          0
   Executable Code Lines:   33
   Declarative Code Lines:  34
   Execution Statements:    26
   Declaration Statements:  21
   Ratio Comment/Code:      0.17
   Units                    16

TestCase.h
   Lines:                   177
   Comment Lines:           81
   Blank Lines:             26
   Preprocessor Lines:      28
   Code Lines:              42
   Inactive Lines:          7
   Executable Code Lines:   7
   Declarative Code Lines:  36
   Execution Statements:    0
   Declaration Statements:  22
   Ratio Comment/Code:      1.93
   Units                    0

TestFailure.cpp
   Lines:                   24
   Comment Lines:           3
   Blank Lines:             4
   Preprocessor Lines:      3
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  6
   Execution Statements:    3
   Declaration Statements:  4
   Ratio Comment/Code:      0.21
   Units                    3

TestFailure.h
   Lines:                   57
   Comment Lines:           17
   Blank Lines:             15
   Preprocessor Lines:      4
   Code Lines:              23
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  16
   Execution Statements:    2
   Declaration Statements:  15
   Ratio Comment/Code:      0.74
   Units                    2
                                                                     Page 108
                                  File Metrics
===============================================================================

TestRegistry.cpp
   Lines:                   70
   Comment Lines:           0
   Blank Lines:             12
   Preprocessor Lines:      2
   Code Lines:              56
   Inactive Lines:          0
   Executable Code Lines:   20
   Declarative Code Lines:  20
   Execution Statements:    19
   Declaration Statements:  17
   Ratio Comment/Code:      0.00
   Units                    7

TestRegistry.h
   Lines:                   38
   Comment Lines:           8
   Blank Lines:             13
   Preprocessor Lines:      5
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  11
   Execution Statements:    0
   Declaration Statements:  10
   Ratio Comment/Code:      0.57
   Units                    0

TestResult.cpp
   Lines:                   109
   Comment Lines:           22
   Blank Lines:             33
   Preprocessor Lines:      1
   Code Lines:              53
   Inactive Lines:          0
   Executable Code Lines:   18
   Declarative Code Lines:  44
   Execution Statements:    25
   Declaration Statements:  29
   Ratio Comment/Code:      0.42
   Units                    15

TestResult.h
   Lines:                   99
   Comment Lines:           21
   Blank Lines:             23
   Preprocessor Lines:      7
   Code Lines:              50
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  38
   Execution Statements:    2
   Declaration Statements:  35
   Ratio Comment/Code:      0.42
   Units                    6
                                                                     Page 109
                                  File Metrics
===============================================================================

TestSuite.cpp
   Lines:                   85
   Comment Lines:           8
   Blank Lines:             24
   Preprocessor Lines:      2
   Code Lines:              51
   Inactive Lines:          0
   Executable Code Lines:   21
   Declarative Code Lines:  18
   Execution Statements:    17
   Declaration Statements:  14
   Ratio Comment/Code:      0.16
   Units                    8

TestSuite.h
   Lines:                   57
   Comment Lines:           18
   Blank Lines:             12
   Preprocessor Lines:      8
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  16
   Execution Statements:    0
   Declaration Statements:  15
   Ratio Comment/Code:      0.86
   Units                    0

TextTestResult.cpp
   Lines:                   124
   Comment Lines:           0
   Blank Lines:             28
   Preprocessor Lines:      3
   Code Lines:              93
   Inactive Lines:          0
   Executable Code Lines:   55
   Declarative Code Lines:  22
   Execution Statements:    34
   Declaration Statements:  16
   Ratio Comment/Code:      0.00
   Units                    8

TextTestResult.h
   Lines:                   32
   Comment Lines:           3
   Blank Lines:             10
   Preprocessor Lines:      5
   Code Lines:              16
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  13
   Execution Statements:    0
   Declaration Statements:  12
   Ratio Comment/Code:      0.19
   Units                    0
                                                                     Page 110
                          File Average Metrics Report
===============================================================================

BoardGame.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

BoardGame.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

BoardGameTest.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              2
   Code                               2
   Comment                            0
   Blank                              0

Chess.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               5
   Comment                            0
   Blank                              0

Chess.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

ChessTest.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0
                                                                     Page 111
                          File Average Metrics Report
===============================================================================

estring.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              2
   Code                               2
   Comment                            0
   Blank                              0

Exception.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               5
   Comment                            0
   Blank                              0

Exception.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

main.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              19
   Code                               13
   Comment                            0
   Blank                              6

Test.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              1
   Code                               1
   Comment                            0
   Blank                              0

TestCaller.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0
                                                                     Page 112
                          File Average Metrics Report
===============================================================================

TestCase.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              7
   Code                               6
   Comment                            0
   Blank                              1

TestCase.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

TestFailure.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

TestFailure.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              2
   Code                               2
   Comment                            0
   Blank                              0

TestRegistry.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              7
   Code                               7
   Comment                            0
   Blank                              0

TestRegistry.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0
                                                                     Page 113
                          File Average Metrics Report
===============================================================================

TestResult.cpp
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

TestResult.h
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              2
   Code                               2
   Comment                            0
   Blank                              0

TestSuite.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              7
   Code                               6
   Comment                            0
   Blank                              1

TestSuite.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

TextTestResult.cpp
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              13
   Code                               11
   Comment                            0
   Blank                              2

TextTestResult.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Strict Modified Essential          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0
                                                                     Page 114
                            Fortran Extension Usage
===============================================================================
                                                                     Page 115
                              Class Metrics Report
===============================================================================
BoardGame:
  Lines                     14
  Lines Blank                0
  Lines Code                13
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.08

BoardGameTest:
  Lines                     26
  Lines Blank                7
  Lines Code                19
  Lines Comment              0
  Average Lines              2
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

Chess:
  Lines                      9
  Lines Blank                0
  Lines Code                 9
  Lines Comment              0
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ChessTest:
  Lines                     17
  Lines Blank                2
  Lines Code                15
  Lines Comment              0
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

CppUnit::Exception:
  Lines                     60
  Lines Blank                9
  Lines Code                51
  Lines Comment              0
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.00

                                                                     Page 116
                              Class Metrics Report
===============================================================================
CppUnit::Test:
  Lines                     12
  Lines Blank                3
  Lines Code                 9
  Lines Comment              0
  Average Lines              1
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

CppUnit::TestCaller:
  Lines                     41
  Lines Blank                8
  Lines Code                33
  Lines Comment              0
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

CppUnit::TestCase:
  Lines                    154
  Lines Blank               24
  Lines Code               130
  Lines Comment              0
  Average Lines              6
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         4
  Ratio Comment/Code      0.00

CppUnit::TestFailure:
  Lines                     37
  Lines Blank                5
  Lines Code                32
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

CppUnit::TestRegistry:
  Lines                     65
  Lines Blank                4
  Lines Code                61
  Lines Comment              0
  Average Lines              7
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.00

                                                                     Page 117
                              Class Metrics Report
===============================================================================
CppUnit::TestResult:
  Lines                    112
  Lines Blank               15
  Lines Code                97
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.00

CppUnit::TestResult::ExclusiveZone:
  Lines                     12
  Lines Blank                2
  Lines Code                10
  Lines Comment              0
  Average Lines              2
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

CppUnit::TestResult::SynchronizationObject:
  Lines                      9
  Lines Blank                1
  Lines Code                 8
  Lines Comment              0
  Average Lines              1
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

CppUnit::TestSuite:
  Lines                     78
  Lines Blank               10
  Lines Code                68
  Lines Comment              0
  Average Lines              7
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.00

CppUnit::TextTestResult:
  Lines                    112
  Lines Blank               15
  Lines Code                97
  Lines Comment              0
  Average Lines             14
  Average Lines Comment      0
  Average Complexity         2
  Maximum Complexity         6
  Ratio Comment/Code      0.00

                                                                     Page 118
                            Class OO Metrics Report
===============================================================================
BoardGame:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)             2
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

BoardGameTest:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)            29
  NIM    (Count of Instance Methods)        6
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 6

Chess:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             3
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ChessTest:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             3
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            32
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

CppUnit::Exception:
  LCOM   (Percent Lack of Cohesion)        65
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             9
  NIM    (Count of Instance Methods)        7
  NIV    (Count of Instance Variables)      3
  WMC    (Count of Methods)                 7

                                                                     Page 119
                            Class OO Metrics Report
===============================================================================
CppUnit::Test:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)             5
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 5

CppUnit::TestCaller:
  LCOM   (Percent Lack of Cohesion)        57
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            30
  NIM    (Count of Instance Methods)        7
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 7

CppUnit::TestCase:
  LCOM   (Percent Lack of Cohesion)        88
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            23
  NIM    (Count of Instance Methods)       18
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                18

CppUnit::TestFailure:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             7
  NIM    (Count of Instance Methods)        7
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 7

CppUnit::TestRegistry:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             9
  NIM    (Count of Instance Methods)        8
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 9

                                                                     Page 120
                            Class OO Metrics Report
===============================================================================
CppUnit::TestResult:
  LCOM   (Percent Lack of Cohesion)        61
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)       17
  NIV    (Count of Instance Variables)      5
  WMC    (Count of Methods)                17

CppUnit::TestResult::ExclusiveZone:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             2
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

CppUnit::TestResult::SynchronizationObject:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             0
  IFANIN (Count of Base Classes)            0
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)             4
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

CppUnit::TestSuite:
  LCOM   (Percent Lack of Cohesion)        65
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)       10
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                10

CppUnit::TextTestResult:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            28
  NIM    (Count of Instance Methods)       11
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                11

                                                                     Page 121
                          Implicitly Declared Objects
===============================================================================
                                                                     Page 122
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================

TestCase.cpp                          Line
    e                                   64
    e                                   69

TestRegistry.cpp                      Line
    name_it                             45
    res                                 43
    s_registry                          10
    s_registry_names                     7
    s_registry_tests                     8
    test_it                             44

TestResult.cpp                        Line
    it                                   8

TestResult.h                          Line
    m_errors                            84
    m_failures                          85
    m_runTests                          86
    m_stop                              87

TestSuite.h                           Line
    m_tests                             52

estring.h                             Line
    buffer                              19
    buffer                              23
    buffer                              27

BoardGameTest.h                       Line
    m_game                              17

main.cpp                              Line
    res                                 28
                                                                     Page 123
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================

Exception.cpp                                             Line
    UNKNOWNFILENAME - Public Static Object                   6
    UNKNOWNLINENUMBER - Public Static Object                 8

TestCase.cpp                                              Line
    assertEquals - Protected Function                       30
    assertEquals - Protected Function                       41

TestFailure.cpp                                           Line
    toString - Public Const Function                         9
    ~TestFailure - Public Function                          21

TestFailure.h                                             Line
    failedTest - Public Function                            47

TestRegistry.cpp                                          Line
    getAllTestNames - Public Const Function                 29
    getTest - Public Const Function                         41
    ~TestRegistry - Public Function                         58

TestResult.cpp                                            Line
    test - Parameter                                        45
      Declared in: CppUnit::TestResult::startTest()
    test - Parameter                                        51
      Declared in: CppUnit::TestResult::endTest()
    zone - Local Object                                     32
    zone - Local Object                                     40
    zone - Local Object                                     46
    zone - Local Object                                     52
    zone - Local Object                                     58
    zone - Local Object                                     64
    zone - Local Object                                     70
    zone - Local Object                                     76
    zone - Local Object                                     82
    zone - Local Object                                     88
    zone - Local Object                                     94
    zone - Local Object                                    100

TestSuite.cpp                                             Line
    countTestCases - Public Function                        34
    TestSuite - Public Function                             50

TextTestResult.cpp                                        Line
    stream - Parameter                                     108
      Declared in: CppUnit::TextTestResult::printHeader()

ChessTest.h                                               Line
    ChessTest - Public Function                              9
    ChessTest - Public Function                             13

main.cpp                                                  Line
    argc - Parameter                                        26
      Declared in: main()
                                                                     Page 124
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================
    argv - Parameter                                        26
      Declared in: main()
    main - Function                                         26
                                                                     Page 125
                             Unused Objects Report
===============================================================================

Exception.cpp
    CppUnit::Exception::UNKNOWNFILENAME        6
    CppUnit::Exception::UNKNOWNLINENUMBER      8

TestResult.cpp
    test                                      45
    test                                      51
    zone                                      32
    zone                                      40
    zone                                      46
    zone                                      52
    zone                                      58
    zone                                      64
    zone                                      70
    zone                                      76
    zone                                      82
    zone                                      88
    zone                                      94
    zone                                     100

TextTestResult.cpp
    stream                                   108

main.cpp
    argc                                      26
    argv                                      26
                                                                     Page 126
                              Unused Types Report
===============================================================================

TestCaller.h
    CppUnit::TestCaller::Fixture     44

ChessTest.h
    ChessTest::GAMECLASS              6
                                                                     Page 127
                          Unused Program Units Report
===============================================================================

TestCase.cpp
    CppUnit::TestCase::assertEquals                   30
    CppUnit::TestCase::assertEquals                   41
    CppUnit::TestCase::countTestCases                136

TestFailure.cpp
    CppUnit::TestFailure::toString                     9
    CppUnit::TestFailure::~TestFailure                21

TestFailure.h
    CppUnit::TestFailure::failedTest                  47

TestRegistry.cpp
    CppUnit::TestRegistry::getAllTestNames            29
    CppUnit::TestRegistry::getTest                    41
    CppUnit::TestRegistry::~TestRegistry              58

TestResult.cpp
    CppUnit::TestResult::setSynchronizationObject    107
    CppUnit::TestResult::stop                         99
    CppUnit::TestResult::~TestResult                   6

TestSuite.cpp
    CppUnit::TestSuite::countTestCases                34
    CppUnit::TestSuite::TestSuite                     50

BoardGame.cpp
    BoardGame::reset                                   4
    BoardGame::~BoardGame                             10

Chess.cpp
    Chess::getNumberOfPieces                           4

ChessTest.h
    ChessTest::ChessTest                               9
    ChessTest::ChessTest                              13

main.cpp
    main                                              26
                                                                     Page 128
                                Uses Not Needed
===============================================================================
                                                                     Page 129
                                Withs Not Needed
===============================================================================
